/// <reference types="@types/amap-js-api" />
import { OnDestroy, EventEmitter, SimpleChanges, OnChanges, NgZone } from '@angular/core';
import { AMapPathOverlay } from '../../base/amap-path-overlay';
import { AmapPolylineService } from './amap-polyline.service';
import { LoggerService } from '../../shared/logger/logger.service';
import { EventBinderService } from '../../shared/event-binder.service';
import * as ɵngcc0 from '@angular/core';
export declare class AmapPolylineDirective extends AMapPathOverlay<AMap.Polyline> implements OnChanges, OnDestroy {
    protected os: AmapPolylineService;
    protected binder: EventBinderService;
    private logger;
    private ngZone;
    /**
     * 线条是否带描边
     */
    isOutline: boolean;
    /**
     * 线条描边颜色
     */
    outlineColor: string;
    /**
     * 是否绘制成大地线
     */
    geodesic: boolean;
    /**
     * 方向箭头颜色
     */
    dirColor: string;
    /**
     * 描边的宽度
     */
    borderWeight: number;
    /**
     * 是否延路径显示方向箭头
     */
    showDir: boolean;
    /**
     * 折线的节点数组
     */
    path: AMap.LocationValue[];
    /**
     * 额外: 是否隐藏
     */
    hidden: boolean;
    /**
     * 额外: 是否开启编辑器
     */
    editor: boolean;
    /**
     * 额外: 会覆盖其他属性的配置方式
     */
    options: AMap.Polyline.Options;
    naReady: EventEmitter<any>;
    naEditorAddNode: EventEmitter<any>;
    naEditorRemoveNode: EventEmitter<any>;
    naEditorAdjust: EventEmitter<any>;
    naEditorEnd: EventEmitter<any>;
    private inited;
    constructor(os: AmapPolylineService, binder: EventBinderService, logger: LoggerService, ngZone: NgZone);
    ngOnDestroy(): void;
    ngOnChanges(changes: SimpleChanges): void;
    /**
     * 获取已创建的 AMap.Polyline 对象
     */
    get(): import("rxjs").Observable<any>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AmapPolylineDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<AmapPolylineDirective, "amap-polyline", ["polyline"], { "hidden": "hidden"; "editor": "editor"; "isOutline": "isOutline"; "outlineColor": "outlineColor"; "geodesic": "geodesic"; "dirColor": "dirColor"; "borderWeight": "borderWeight"; "showDir": "showDir"; "path": "path"; "options": "options"; }, { "naReady": "naReady"; "naEditorAddNode": "naEditorAddNode"; "naEditorRemoveNode": "naEditorRemoveNode"; "naEditorAdjust": "naEditorAdjust"; "naEditorEnd": "naEditorEnd"; }, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW1hcC1wb2x5bGluZS5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsiYW1hcC1wb2x5bGluZS5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLy8vIDxyZWZlcmVuY2UgdHlwZXM9XCJAdHlwZXMvYW1hcC1qcy1hcGlcIiAvPlxuaW1wb3J0IHsgT25EZXN0cm95LCBFdmVudEVtaXR0ZXIsIFNpbXBsZUNoYW5nZXMsIE9uQ2hhbmdlcywgTmdab25lIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBTWFwUGF0aE92ZXJsYXkgfSBmcm9tICcuLi8uLi9iYXNlL2FtYXAtcGF0aC1vdmVybGF5JztcbmltcG9ydCB7IEFtYXBQb2x5bGluZVNlcnZpY2UgfSBmcm9tICcuL2FtYXAtcG9seWxpbmUuc2VydmljZSc7XG5pbXBvcnQgeyBMb2dnZXJTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2hhcmVkL2xvZ2dlci9sb2dnZXIuc2VydmljZSc7XG5pbXBvcnQgeyBFdmVudEJpbmRlclNlcnZpY2UgfSBmcm9tICcuLi8uLi9zaGFyZWQvZXZlbnQtYmluZGVyLnNlcnZpY2UnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQW1hcFBvbHlsaW5lRGlyZWN0aXZlIGV4dGVuZHMgQU1hcFBhdGhPdmVybGF5PEFNYXAuUG9seWxpbmU+IGltcGxlbWVudHMgT25DaGFuZ2VzLCBPbkRlc3Ryb3kge1xuICAgIHByb3RlY3RlZCBvczogQW1hcFBvbHlsaW5lU2VydmljZTtcbiAgICBwcm90ZWN0ZWQgYmluZGVyOiBFdmVudEJpbmRlclNlcnZpY2U7XG4gICAgcHJpdmF0ZSBsb2dnZXI7XG4gICAgcHJpdmF0ZSBuZ1pvbmU7XG4gICAgLyoqXG4gICAgICog57q/5p2h5piv5ZCm5bim5o+P6L65XG4gICAgICovXG4gICAgaXNPdXRsaW5lOiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIOe6v+adoeaPj+i+ueminOiJslxuICAgICAqL1xuICAgIG91dGxpbmVDb2xvcjogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIOaYr+WQpue7mOWItuaIkOWkp+WcsOe6v1xuICAgICAqL1xuICAgIGdlb2Rlc2ljOiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIOaWueWQkeeureWktOminOiJslxuICAgICAqL1xuICAgIGRpckNvbG9yOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICog5o+P6L6555qE5a695bqmXG4gICAgICovXG4gICAgYm9yZGVyV2VpZ2h0OiBudW1iZXI7XG4gICAgLyoqXG4gICAgICog5piv5ZCm5bu26Lev5b6E5pi+56S65pa55ZCR566t5aS0XG4gICAgICovXG4gICAgc2hvd0RpcjogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiDmipjnur/nmoToioLngrnmlbDnu4RcbiAgICAgKi9cbiAgICBwYXRoOiBBTWFwLkxvY2F0aW9uVmFsdWVbXTtcbiAgICAvKipcbiAgICAgKiDpop3lpJY6IOaYr+WQpumakOiXj1xuICAgICAqL1xuICAgIGhpZGRlbjogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiDpop3lpJY6IOaYr+WQpuW8gOWQr+e8lui+keWZqFxuICAgICAqL1xuICAgIGVkaXRvcjogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiDpop3lpJY6IOS8muimhuebluWFtuS7luWxnuaAp+eahOmFjee9ruaWueW8j1xuICAgICAqL1xuICAgIG9wdGlvbnM6IEFNYXAuUG9seWxpbmUuT3B0aW9ucztcbiAgICBuYVJlYWR5OiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBuYUVkaXRvckFkZE5vZGU6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIG5hRWRpdG9yUmVtb3ZlTm9kZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgbmFFZGl0b3JBZGp1c3Q6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIG5hRWRpdG9yRW5kOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBwcml2YXRlIGluaXRlZDtcbiAgICBjb25zdHJ1Y3RvcihvczogQW1hcFBvbHlsaW5lU2VydmljZSwgYmluZGVyOiBFdmVudEJpbmRlclNlcnZpY2UsIGxvZ2dlcjogTG9nZ2VyU2VydmljZSwgbmdab25lOiBOZ1pvbmUpO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICog6I635Y+W5bey5Yib5bu655qEIEFNYXAuUG9seWxpbmUg5a+56LGhXG4gICAgICovXG4gICAgZ2V0KCk6IGltcG9ydChcInJ4anNcIikuT2JzZXJ2YWJsZTxhbnk+O1xufVxuIl19