/// <reference types="@types/amap-js-api" />
import { EventEmitter, OnDestroy, SimpleChanges, OnChanges, NgZone } from '@angular/core';
import { AMapCircle } from '../../base/amap-circle';
import { AmapCircleService } from './amap-circle.service';
import { LoggerService } from '../../shared/logger/logger.service';
import { EventBinderService } from '../../shared/event-binder.service';
import * as ɵngcc0 from '@angular/core';
export declare class AmapCircleDirective extends AMapCircle<AMap.Circle> implements OnChanges, OnDestroy {
    protected os: AmapCircleService;
    protected binder: EventBinderService;
    private logger;
    private ngZone;
    naEditorAddNode: EventEmitter<any>;
    naEditorRemoveNode: EventEmitter<any>;
    naEditorAdjust: EventEmitter<any>;
    naEditorEnd: EventEmitter<any>;
    private inited;
    constructor(os: AmapCircleService, binder: EventBinderService, logger: LoggerService, ngZone: NgZone);
    ngOnDestroy(): void;
    ngOnChanges(changes: SimpleChanges): void;
    /**
     * 获取已创建的 AMap.Circle 对象
     */
    get(): import("rxjs").Observable<any>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AmapCircleDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<AmapCircleDirective, "amap-circle", ["circle"], {}, { "naEditorAddNode": "naEditorAddNode"; "naEditorRemoveNode": "naEditorRemoveNode"; "naEditorAdjust": "naEditorAdjust"; "naEditorEnd": "naEditorEnd"; }, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW1hcC1jaXJjbGUuZGlyZWN0aXZlLmQudHMiLCJzb3VyY2VzIjpbImFtYXAtY2lyY2xlLmRpcmVjdGl2ZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8vLyA8cmVmZXJlbmNlIHR5cGVzPVwiQHR5cGVzL2FtYXAtanMtYXBpXCIgLz5cbmltcG9ydCB7IEV2ZW50RW1pdHRlciwgT25EZXN0cm95LCBTaW1wbGVDaGFuZ2VzLCBPbkNoYW5nZXMsIE5nWm9uZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQU1hcENpcmNsZSB9IGZyb20gJy4uLy4uL2Jhc2UvYW1hcC1jaXJjbGUnO1xuaW1wb3J0IHsgQW1hcENpcmNsZVNlcnZpY2UgfSBmcm9tICcuL2FtYXAtY2lyY2xlLnNlcnZpY2UnO1xuaW1wb3J0IHsgTG9nZ2VyU2VydmljZSB9IGZyb20gJy4uLy4uL3NoYXJlZC9sb2dnZXIvbG9nZ2VyLnNlcnZpY2UnO1xuaW1wb3J0IHsgRXZlbnRCaW5kZXJTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2hhcmVkL2V2ZW50LWJpbmRlci5zZXJ2aWNlJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEFtYXBDaXJjbGVEaXJlY3RpdmUgZXh0ZW5kcyBBTWFwQ2lyY2xlPEFNYXAuQ2lyY2xlPiBpbXBsZW1lbnRzIE9uQ2hhbmdlcywgT25EZXN0cm95IHtcbiAgICBwcm90ZWN0ZWQgb3M6IEFtYXBDaXJjbGVTZXJ2aWNlO1xuICAgIHByb3RlY3RlZCBiaW5kZXI6IEV2ZW50QmluZGVyU2VydmljZTtcbiAgICBwcml2YXRlIGxvZ2dlcjtcbiAgICBwcml2YXRlIG5nWm9uZTtcbiAgICBuYUVkaXRvckFkZE5vZGU6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIG5hRWRpdG9yUmVtb3ZlTm9kZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgbmFFZGl0b3JBZGp1c3Q6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIG5hRWRpdG9yRW5kOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBwcml2YXRlIGluaXRlZDtcbiAgICBjb25zdHJ1Y3RvcihvczogQW1hcENpcmNsZVNlcnZpY2UsIGJpbmRlcjogRXZlbnRCaW5kZXJTZXJ2aWNlLCBsb2dnZXI6IExvZ2dlclNlcnZpY2UsIG5nWm9uZTogTmdab25lKTtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIOiOt+WPluW3suWIm+W7uueahCBBTWFwLkNpcmNsZSDlr7nosaFcbiAgICAgKi9cbiAgICBnZXQoKTogaW1wb3J0KFwicnhqc1wiKS5PYnNlcnZhYmxlPGFueT47XG59XG4iXX0=