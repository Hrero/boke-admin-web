/// <reference types="@types/amap-js-api" />
import { OnInit, OnDestroy, EventEmitter, SimpleChanges, OnChanges, QueryList, AfterContentInit, NgZone } from '@angular/core';
import { AmapMarkerClustererService, AMapMarkerClusterer } from './amap-marker-clusterer.service';
import { LoggerService } from '../../shared/logger/logger.service';
import { EventBinderService } from '../../shared/event-binder.service';
import { PixelService } from '../../shared/pixel.service';
import { SizeService } from '../../shared/size.service';
import { AmapMarkerDirective } from '../amap-marker/amap-marker.directive';
import { AMapService } from '../../shared/amap.service';
import * as ɵngcc0 from '@angular/core';
export declare class AmapMarkerClustererDirective implements OnInit, OnChanges, OnDestroy, AfterContentInit {
    protected os: AmapMarkerClustererService;
    protected binder: EventBinderService;
    private amaps;
    private pixels;
    private sizes;
    private logger;
    private ngZone;
    /**
     * 聚合计算时网格的像素大小，默认60
     */
    gridSize: number;
    /**
     * 聚合的最小数量。默认值为2，即小于2个点则不能成为一个聚合
     */
    minClusterSize: number;
    /**
     * 最大的聚合级别，大于该级别就不进行相应的聚合。默认值为18
     */
    maxZoom: number;
    /**
     * 聚合点的图标位置是否是所有聚合内点的中心点。默认为否
     */
    averageCenter: boolean;
    /**
     * 指定聚合后的点标记的图标样式，可缺省，缺省时为默认样式
     */
    styles: AMapMarkerClusterer.StyleObject[];
    /**
     * 该方法用来实现聚合点的自定义绘制
     */
    renderClusterMarker: (obj: {
        count: number;
        markers: AMap.Marker<any>[];
        marker: AMap.Marker<any>;
    }) => void;
    /**
     * 点击聚合点时，是否散开，默认值为：true
     */
    zoomOnClick: boolean;
    naReady: EventEmitter<any>;
    naClick: EventEmitter<any>;
    markerList: QueryList<AmapMarkerDirective>;
    private inited;
    constructor(os: AmapMarkerClustererService, binder: EventBinderService, amaps: AMapService, pixels: PixelService, sizes: SizeService, logger: LoggerService, ngZone: NgZone);
    ngOnDestroy(): void;
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterContentInit(): void;
    private updateMarkers;
    /**
     * 获取已创建的 AMap.MarkerClusterer 对象
     */
    get(): import("rxjs").Observable<any>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AmapMarkerClustererDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<AmapMarkerClustererDirective, "amap-marker-clusterer", ["marker-clusterer"], { "gridSize": "gridSize"; "minClusterSize": "minClusterSize"; "maxZoom": "maxZoom"; "averageCenter": "averageCenter"; "styles": "styles"; "renderClusterMarker": "renderClusterMarker"; "zoomOnClick": "zoomOnClick"; }, { "naReady": "naReady"; "naClick": "naClick"; }, ["markerList"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW1hcC1tYXJrZXItY2x1c3RlcmVyLmRpcmVjdGl2ZS5kLnRzIiwic291cmNlcyI6WyJhbWFwLW1hcmtlci1jbHVzdGVyZXIuZGlyZWN0aXZlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvLy8gPHJlZmVyZW5jZSB0eXBlcz1cIkB0eXBlcy9hbWFwLWpzLWFwaVwiIC8+XG5pbXBvcnQgeyBPbkluaXQsIE9uRGVzdHJveSwgRXZlbnRFbWl0dGVyLCBTaW1wbGVDaGFuZ2VzLCBPbkNoYW5nZXMsIFF1ZXJ5TGlzdCwgQWZ0ZXJDb250ZW50SW5pdCwgTmdab25lIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBbWFwTWFya2VyQ2x1c3RlcmVyU2VydmljZSwgQU1hcE1hcmtlckNsdXN0ZXJlciB9IGZyb20gJy4vYW1hcC1tYXJrZXItY2x1c3RlcmVyLnNlcnZpY2UnO1xuaW1wb3J0IHsgTG9nZ2VyU2VydmljZSB9IGZyb20gJy4uLy4uL3NoYXJlZC9sb2dnZXIvbG9nZ2VyLnNlcnZpY2UnO1xuaW1wb3J0IHsgRXZlbnRCaW5kZXJTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2hhcmVkL2V2ZW50LWJpbmRlci5zZXJ2aWNlJztcbmltcG9ydCB7IFBpeGVsU2VydmljZSB9IGZyb20gJy4uLy4uL3NoYXJlZC9waXhlbC5zZXJ2aWNlJztcbmltcG9ydCB7IFNpemVTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2hhcmVkL3NpemUuc2VydmljZSc7XG5pbXBvcnQgeyBBbWFwTWFya2VyRGlyZWN0aXZlIH0gZnJvbSAnLi4vYW1hcC1tYXJrZXIvYW1hcC1tYXJrZXIuZGlyZWN0aXZlJztcbmltcG9ydCB7IEFNYXBTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2hhcmVkL2FtYXAuc2VydmljZSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBBbWFwTWFya2VyQ2x1c3RlcmVyRGlyZWN0aXZlIGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMsIE9uRGVzdHJveSwgQWZ0ZXJDb250ZW50SW5pdCB7XG4gICAgcHJvdGVjdGVkIG9zOiBBbWFwTWFya2VyQ2x1c3RlcmVyU2VydmljZTtcbiAgICBwcm90ZWN0ZWQgYmluZGVyOiBFdmVudEJpbmRlclNlcnZpY2U7XG4gICAgcHJpdmF0ZSBhbWFwcztcbiAgICBwcml2YXRlIHBpeGVscztcbiAgICBwcml2YXRlIHNpemVzO1xuICAgIHByaXZhdGUgbG9nZ2VyO1xuICAgIHByaXZhdGUgbmdab25lO1xuICAgIC8qKlxuICAgICAqIOiBmuWQiOiuoeeul+aXtue9keagvOeahOWDj+e0oOWkp+Wwj++8jOm7mOiupDYwXG4gICAgICovXG4gICAgZ3JpZFNpemU6IG51bWJlcjtcbiAgICAvKipcbiAgICAgKiDogZrlkIjnmoTmnIDlsI/mlbDph4/jgILpu5jorqTlgLzkuLoy77yM5Y2z5bCP5LqOMuS4queCueWImeS4jeiDveaIkOS4uuS4gOS4quiBmuWQiFxuICAgICAqL1xuICAgIG1pbkNsdXN0ZXJTaXplOiBudW1iZXI7XG4gICAgLyoqXG4gICAgICog5pyA5aSn55qE6IGa5ZCI57qn5Yir77yM5aSn5LqO6K+l57qn5Yir5bCx5LiN6L+b6KGM55u45bqU55qE6IGa5ZCI44CC6buY6K6k5YC85Li6MThcbiAgICAgKi9cbiAgICBtYXhab29tOiBudW1iZXI7XG4gICAgLyoqXG4gICAgICog6IGa5ZCI54K555qE5Zu+5qCH5L2N572u5piv5ZCm5piv5omA5pyJ6IGa5ZCI5YaF54K555qE5Lit5b+D54K544CC6buY6K6k5Li65ZCmXG4gICAgICovXG4gICAgYXZlcmFnZUNlbnRlcjogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiDmjIflrprogZrlkIjlkI7nmoTngrnmoIforrDnmoTlm77moIfmoLflvI/vvIzlj6/nvLrnnIHvvIznvLrnnIHml7bkuLrpu5jorqTmoLflvI9cbiAgICAgKi9cbiAgICBzdHlsZXM6IEFNYXBNYXJrZXJDbHVzdGVyZXIuU3R5bGVPYmplY3RbXTtcbiAgICAvKipcbiAgICAgKiDor6Xmlrnms5XnlKjmnaXlrp7njrDogZrlkIjngrnnmoToh6rlrprkuYnnu5jliLZcbiAgICAgKi9cbiAgICByZW5kZXJDbHVzdGVyTWFya2VyOiAob2JqOiB7XG4gICAgICAgIGNvdW50OiBudW1iZXI7XG4gICAgICAgIG1hcmtlcnM6IEFNYXAuTWFya2VyPGFueT5bXTtcbiAgICAgICAgbWFya2VyOiBBTWFwLk1hcmtlcjxhbnk+O1xuICAgIH0pID0+IHZvaWQ7XG4gICAgLyoqXG4gICAgICog54K55Ye76IGa5ZCI54K55pe277yM5piv5ZCm5pWj5byA77yM6buY6K6k5YC85Li677yadHJ1ZVxuICAgICAqL1xuICAgIHpvb21PbkNsaWNrOiBib29sZWFuO1xuICAgIG5hUmVhZHk6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIG5hQ2xpY2s6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIG1hcmtlckxpc3Q6IFF1ZXJ5TGlzdDxBbWFwTWFya2VyRGlyZWN0aXZlPjtcbiAgICBwcml2YXRlIGluaXRlZDtcbiAgICBjb25zdHJ1Y3RvcihvczogQW1hcE1hcmtlckNsdXN0ZXJlclNlcnZpY2UsIGJpbmRlcjogRXZlbnRCaW5kZXJTZXJ2aWNlLCBhbWFwczogQU1hcFNlcnZpY2UsIHBpeGVsczogUGl4ZWxTZXJ2aWNlLCBzaXplczogU2l6ZVNlcnZpY2UsIGxvZ2dlcjogTG9nZ2VyU2VydmljZSwgbmdab25lOiBOZ1pvbmUpO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcbiAgICBuZ0FmdGVyQ29udGVudEluaXQoKTogdm9pZDtcbiAgICBwcml2YXRlIHVwZGF0ZU1hcmtlcnM7XG4gICAgLyoqXG4gICAgICog6I635Y+W5bey5Yib5bu655qEIEFNYXAuTWFya2VyQ2x1c3RlcmVyIOWvueixoVxuICAgICAqL1xuICAgIGdldCgpOiBpbXBvcnQoXCJyeGpzXCIpLk9ic2VydmFibGU8YW55Pjtcbn1cbiJdfQ==