/// <reference types="@types/amap-js-api" />
import { NgZone } from '@angular/core';
import { AMapService } from '../../shared/amap.service';
import { LoggerService } from '../../shared/logger/logger.service';
import { PluginLoaderService } from '../../shared/plugin-loader.service';
import { Getter } from '../../base/interfaces';
import * as ɵngcc0 from '@angular/core';
export declare class AmapBezierCurveService implements Getter<AMap.BezierCurve> {
    private amaps;
    private logger;
    private ngZone;
    private plugins;
    private bezierCurve;
    private bezierCurve$;
    private editor;
    private editor$;
    private polyEditor;
    private polyEditor$;
    constructor(amaps: AMapService, logger: LoggerService, ngZone: NgZone, plugins: PluginLoaderService);
    /**
     * 获取贝瑟尔曲线
     */
    get(): import("rxjs").Observable<any>;
    /**
     * 创建贝瑟尔曲线 AMap.BezierCurve
     * @param options 选项
     */
    create(options: AMap.BezierCurve.Options): import("rxjs").Observable<any>;
    /**
     * 销毁贝瑟尔曲线
     */
    destroy(): void;
    getEditor(): import("rxjs").Observable<any>;
    getPolyEditor(): import("rxjs").Observable<any>;
    /**
     * 加载编辑插件
     */
    loadEditor(): import("rxjs").Observable<void>;
    loadPolyEditor(): import("rxjs").Observable<void>;
    /**
     * 创建编辑器
     */
    createEditor(): import("rxjs").Observable<any>;
    createPolyEditor(): import("rxjs").Observable<any>;
    /**
     * 开关编辑器
     * @param v 开关选项
     */
    toggleEditor(v: boolean): void;
    togglePolyEditor(v: boolean): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AmapBezierCurveService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<AmapBezierCurveService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW1hcC1iZXppZXItY3VydmUuc2VydmljZS5kLnRzIiwic291cmNlcyI6WyJhbWFwLWJlemllci1jdXJ2ZS5zZXJ2aWNlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8vLyA8cmVmZXJlbmNlIHR5cGVzPVwiQHR5cGVzL2FtYXAtanMtYXBpXCIgLz5cbmltcG9ydCB7IE5nWm9uZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQU1hcFNlcnZpY2UgfSBmcm9tICcuLi8uLi9zaGFyZWQvYW1hcC5zZXJ2aWNlJztcbmltcG9ydCB7IExvZ2dlclNlcnZpY2UgfSBmcm9tICcuLi8uLi9zaGFyZWQvbG9nZ2VyL2xvZ2dlci5zZXJ2aWNlJztcbmltcG9ydCB7IFBsdWdpbkxvYWRlclNlcnZpY2UgfSBmcm9tICcuLi8uLi9zaGFyZWQvcGx1Z2luLWxvYWRlci5zZXJ2aWNlJztcbmltcG9ydCB7IEdldHRlciB9IGZyb20gJy4uLy4uL2Jhc2UvaW50ZXJmYWNlcyc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBBbWFwQmV6aWVyQ3VydmVTZXJ2aWNlIGltcGxlbWVudHMgR2V0dGVyPEFNYXAuQmV6aWVyQ3VydmU+IHtcbiAgICBwcml2YXRlIGFtYXBzO1xuICAgIHByaXZhdGUgbG9nZ2VyO1xuICAgIHByaXZhdGUgbmdab25lO1xuICAgIHByaXZhdGUgcGx1Z2lucztcbiAgICBwcml2YXRlIGJlemllckN1cnZlO1xuICAgIHByaXZhdGUgYmV6aWVyQ3VydmUkO1xuICAgIHByaXZhdGUgZWRpdG9yO1xuICAgIHByaXZhdGUgZWRpdG9yJDtcbiAgICBwcml2YXRlIHBvbHlFZGl0b3I7XG4gICAgcHJpdmF0ZSBwb2x5RWRpdG9yJDtcbiAgICBjb25zdHJ1Y3RvcihhbWFwczogQU1hcFNlcnZpY2UsIGxvZ2dlcjogTG9nZ2VyU2VydmljZSwgbmdab25lOiBOZ1pvbmUsIHBsdWdpbnM6IFBsdWdpbkxvYWRlclNlcnZpY2UpO1xuICAgIC8qKlxuICAgICAqIOiOt+WPlui0neeRn+WwlOabsue6v1xuICAgICAqL1xuICAgIGdldCgpOiBpbXBvcnQoXCJyeGpzXCIpLk9ic2VydmFibGU8YW55PjtcbiAgICAvKipcbiAgICAgKiDliJvlu7rotJ3nkZ/lsJTmm7Lnur8gQU1hcC5CZXppZXJDdXJ2ZVxuICAgICAqIEBwYXJhbSBvcHRpb25zIOmAiemhuVxuICAgICAqL1xuICAgIGNyZWF0ZShvcHRpb25zOiBBTWFwLkJlemllckN1cnZlLk9wdGlvbnMpOiBpbXBvcnQoXCJyeGpzXCIpLk9ic2VydmFibGU8YW55PjtcbiAgICAvKipcbiAgICAgKiDplIDmr4HotJ3nkZ/lsJTmm7Lnur9cbiAgICAgKi9cbiAgICBkZXN0cm95KCk6IHZvaWQ7XG4gICAgZ2V0RWRpdG9yKCk6IGltcG9ydChcInJ4anNcIikuT2JzZXJ2YWJsZTxhbnk+O1xuICAgIGdldFBvbHlFZGl0b3IoKTogaW1wb3J0KFwicnhqc1wiKS5PYnNlcnZhYmxlPGFueT47XG4gICAgLyoqXG4gICAgICog5Yqg6L2957yW6L6R5o+S5Lu2XG4gICAgICovXG4gICAgbG9hZEVkaXRvcigpOiBpbXBvcnQoXCJyeGpzXCIpLk9ic2VydmFibGU8dm9pZD47XG4gICAgbG9hZFBvbHlFZGl0b3IoKTogaW1wb3J0KFwicnhqc1wiKS5PYnNlcnZhYmxlPHZvaWQ+O1xuICAgIC8qKlxuICAgICAqIOWIm+W7uue8lui+keWZqFxuICAgICAqL1xuICAgIGNyZWF0ZUVkaXRvcigpOiBpbXBvcnQoXCJyeGpzXCIpLk9ic2VydmFibGU8YW55PjtcbiAgICBjcmVhdGVQb2x5RWRpdG9yKCk6IGltcG9ydChcInJ4anNcIikuT2JzZXJ2YWJsZTxhbnk+O1xuICAgIC8qKlxuICAgICAqIOW8gOWFs+e8lui+keWZqFxuICAgICAqIEBwYXJhbSB2IOW8gOWFs+mAiemhuVxuICAgICAqL1xuICAgIHRvZ2dsZUVkaXRvcih2OiBib29sZWFuKTogdm9pZDtcbiAgICB0b2dnbGVQb2x5RWRpdG9yKHY6IGJvb2xlYW4pOiB2b2lkO1xufVxuIl19