/// <reference types="@types/amap-js-api" />
import { OnDestroy, SimpleChanges, OnChanges, NgZone } from '@angular/core';
import { AMapPolygon } from '../../base/amap-polygon';
import { AmapEllipseService } from './amap-ellipse.service';
import { LoggerService } from '../../shared/logger/logger.service';
import { EventBinderService } from '../../shared/event-binder.service';
import * as ɵngcc0 from '@angular/core';
export declare class AmapEllipseDirective extends AMapPolygon<AMap.Ellipse, any> implements OnChanges, OnDestroy {
    protected os: AmapEllipseService;
    protected binder: EventBinderService;
    private logger;
    private ngZone;
    /**
     * 椭圆的中心
     */
    center: AMap.LocationValue;
    /**
     * 椭圆半径
     */
    radius: [number, number];
    /**
     * 额外: 会覆盖其他属性的配置方式
     */
    options: AMap.Ellipse.Options;
    private inited;
    constructor(os: AmapEllipseService, binder: EventBinderService, logger: LoggerService, ngZone: NgZone);
    ngOnDestroy(): void;
    ngOnChanges(changes: SimpleChanges): void;
    /**
     * 获取已创建的 AMap.Ellipse 对象
     */
    get(): import("rxjs").Observable<any>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AmapEllipseDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<AmapEllipseDirective, "amap-ellipse", ["ellipse"], { "center": "center"; "radius": "radius"; "options": "options"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW1hcC1lbGxpcHNlLmRpcmVjdGl2ZS5kLnRzIiwic291cmNlcyI6WyJhbWFwLWVsbGlwc2UuZGlyZWN0aXZlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8vLyA8cmVmZXJlbmNlIHR5cGVzPVwiQHR5cGVzL2FtYXAtanMtYXBpXCIgLz5cbmltcG9ydCB7IE9uRGVzdHJveSwgU2ltcGxlQ2hhbmdlcywgT25DaGFuZ2VzLCBOZ1pvbmUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFNYXBQb2x5Z29uIH0gZnJvbSAnLi4vLi4vYmFzZS9hbWFwLXBvbHlnb24nO1xuaW1wb3J0IHsgQW1hcEVsbGlwc2VTZXJ2aWNlIH0gZnJvbSAnLi9hbWFwLWVsbGlwc2Uuc2VydmljZSc7XG5pbXBvcnQgeyBMb2dnZXJTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2hhcmVkL2xvZ2dlci9sb2dnZXIuc2VydmljZSc7XG5pbXBvcnQgeyBFdmVudEJpbmRlclNlcnZpY2UgfSBmcm9tICcuLi8uLi9zaGFyZWQvZXZlbnQtYmluZGVyLnNlcnZpY2UnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQW1hcEVsbGlwc2VEaXJlY3RpdmUgZXh0ZW5kcyBBTWFwUG9seWdvbjxBTWFwLkVsbGlwc2UsIGFueT4gaW1wbGVtZW50cyBPbkNoYW5nZXMsIE9uRGVzdHJveSB7XG4gICAgcHJvdGVjdGVkIG9zOiBBbWFwRWxsaXBzZVNlcnZpY2U7XG4gICAgcHJvdGVjdGVkIGJpbmRlcjogRXZlbnRCaW5kZXJTZXJ2aWNlO1xuICAgIHByaXZhdGUgbG9nZ2VyO1xuICAgIHByaXZhdGUgbmdab25lO1xuICAgIC8qKlxuICAgICAqIOakreWchueahOS4reW/g1xuICAgICAqL1xuICAgIGNlbnRlcjogQU1hcC5Mb2NhdGlvblZhbHVlO1xuICAgIC8qKlxuICAgICAqIOakreWchuWNiuW+hFxuICAgICAqL1xuICAgIHJhZGl1czogW251bWJlciwgbnVtYmVyXTtcbiAgICAvKipcbiAgICAgKiDpop3lpJY6IOS8muimhuebluWFtuS7luWxnuaAp+eahOmFjee9ruaWueW8j1xuICAgICAqL1xuICAgIG9wdGlvbnM6IEFNYXAuRWxsaXBzZS5PcHRpb25zO1xuICAgIHByaXZhdGUgaW5pdGVkO1xuICAgIGNvbnN0cnVjdG9yKG9zOiBBbWFwRWxsaXBzZVNlcnZpY2UsIGJpbmRlcjogRXZlbnRCaW5kZXJTZXJ2aWNlLCBsb2dnZXI6IExvZ2dlclNlcnZpY2UsIG5nWm9uZTogTmdab25lKTtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIOiOt+WPluW3suWIm+W7uueahCBBTWFwLkVsbGlwc2Ug5a+56LGhXG4gICAgICovXG4gICAgZ2V0KCk6IGltcG9ydChcInJ4anNcIikuT2JzZXJ2YWJsZTxhbnk+O1xufVxuIl19