/// <reference types="@types/amap-js-api" />
import { NgZone } from '@angular/core';
import { AMapService } from '../../shared/amap.service';
import { PluginLoaderService } from '../../shared/plugin-loader.service';
import { LoggerService } from '../../shared/logger/logger.service';
import { Getter } from '../../base/interfaces';
import * as ɵngcc0 from '@angular/core';
export declare namespace AMapToolBar {
    interface Options {
        /**
         * 相对于地图容器左上角的偏移量
         */
        offset?: AMap.Pixel;
        /**
         * 控件停靠位置
         * LT:左上角;
         * RT:右上角;
         * LB:左下角;
         * RB:右下角;
         */
        position?: Position;
        /**
         * 标尺键盘是否可见
         */
        ruler?: boolean;
        /**
         * 定位失败后，是否开启IP定位
         */
        noIpLocate?: boolean;
        /**
         * 是否显示定位按钮
         */
        locate?: boolean;
        /**
         * 是否使用精简模式
         */
        liteStyle?: boolean;
        /**
         * 方向键盘是否可见
         */
        direction?: boolean;
        /**
         * 是否自动定位，即地图初始化加载完成后，是否自动定位的用户所在地，仅在支持HTML5的浏览器中有效
         */
        autoPosition?: boolean;
        /**
         * 自定义定位图标，值为Marker对象
         */
        locationMarker?: AMap.Marker;
        /**
         * 是否使用高德定位sdk用来辅助优化定位效果
         */
        useNative?: boolean;
        timeout?: number;
    }
    type Position = 'LT' | 'RT' | 'LB' | 'RB';
}
export declare class AmapToolBarService implements Getter<any> {
    private amaps;
    private plugin;
    private logger;
    private ngZone;
    private toolBar;
    private toolBar$;
    constructor(amaps: AMapService, plugin: PluginLoaderService, logger: LoggerService, ngZone: NgZone);
    /**
     * 获取工具条
     */
    get(): import("rxjs").Observable<any>;
    /**
     * 创建工具条 AMap.ToolBar
     * @param options 选项
     */
    create(options: AMapToolBar.Options): import("rxjs").Observable<any>;
    /**
     * 销毁工具条
     */
    destroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AmapToolBarService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<AmapToolBarService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW1hcC10b29sLWJhci5zZXJ2aWNlLmQudHMiLCJzb3VyY2VzIjpbImFtYXAtdG9vbC1iYXIuc2VydmljZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8vLyA8cmVmZXJlbmNlIHR5cGVzPVwiQHR5cGVzL2FtYXAtanMtYXBpXCIgLz5cbmltcG9ydCB7IE5nWm9uZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQU1hcFNlcnZpY2UgfSBmcm9tICcuLi8uLi9zaGFyZWQvYW1hcC5zZXJ2aWNlJztcbmltcG9ydCB7IFBsdWdpbkxvYWRlclNlcnZpY2UgfSBmcm9tICcuLi8uLi9zaGFyZWQvcGx1Z2luLWxvYWRlci5zZXJ2aWNlJztcbmltcG9ydCB7IExvZ2dlclNlcnZpY2UgfSBmcm9tICcuLi8uLi9zaGFyZWQvbG9nZ2VyL2xvZ2dlci5zZXJ2aWNlJztcbmltcG9ydCB7IEdldHRlciB9IGZyb20gJy4uLy4uL2Jhc2UvaW50ZXJmYWNlcyc7XG5leHBvcnQgZGVjbGFyZSBuYW1lc3BhY2UgQU1hcFRvb2xCYXIge1xuICAgIGludGVyZmFjZSBPcHRpb25zIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIOebuOWvueS6juWcsOWbvuWuueWZqOW3puS4iuinkueahOWBj+enu+mHj1xuICAgICAgICAgKi9cbiAgICAgICAgb2Zmc2V0PzogQU1hcC5QaXhlbDtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIOaOp+S7tuWBnOmdoOS9jee9rlxuICAgICAgICAgKiBMVDrlt6bkuIrop5I7XG4gICAgICAgICAqIFJUOuWPs+S4iuinkjtcbiAgICAgICAgICogTEI65bem5LiL6KeSO1xuICAgICAgICAgKiBSQjrlj7PkuIvop5I7XG4gICAgICAgICAqL1xuICAgICAgICBwb3NpdGlvbj86IFBvc2l0aW9uO1xuICAgICAgICAvKipcbiAgICAgICAgICog5qCH5bC66ZSu55uY5piv5ZCm5Y+v6KeBXG4gICAgICAgICAqL1xuICAgICAgICBydWxlcj86IGJvb2xlYW47XG4gICAgICAgIC8qKlxuICAgICAgICAgKiDlrprkvY3lpLHotKXlkI7vvIzmmK/lkKblvIDlkK9JUOWumuS9jVxuICAgICAgICAgKi9cbiAgICAgICAgbm9JcExvY2F0ZT86IGJvb2xlYW47XG4gICAgICAgIC8qKlxuICAgICAgICAgKiDmmK/lkKbmmL7npLrlrprkvY3mjInpkq5cbiAgICAgICAgICovXG4gICAgICAgIGxvY2F0ZT86IGJvb2xlYW47XG4gICAgICAgIC8qKlxuICAgICAgICAgKiDmmK/lkKbkvb/nlKjnsr7nroDmqKHlvI9cbiAgICAgICAgICovXG4gICAgICAgIGxpdGVTdHlsZT86IGJvb2xlYW47XG4gICAgICAgIC8qKlxuICAgICAgICAgKiDmlrnlkJHplK7nm5jmmK/lkKblj6/op4FcbiAgICAgICAgICovXG4gICAgICAgIGRpcmVjdGlvbj86IGJvb2xlYW47XG4gICAgICAgIC8qKlxuICAgICAgICAgKiDmmK/lkKboh6rliqjlrprkvY3vvIzljbPlnLDlm77liJ3lp4vljJbliqDovb3lrozmiJDlkI7vvIzmmK/lkKboh6rliqjlrprkvY3nmoTnlKjmiLfmiYDlnKjlnLDvvIzku4XlnKjmlK/mjIFIVE1MNeeahOa1j+iniOWZqOS4reacieaViFxuICAgICAgICAgKi9cbiAgICAgICAgYXV0b1Bvc2l0aW9uPzogYm9vbGVhbjtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIOiHquWumuS5ieWumuS9jeWbvuagh++8jOWAvOS4uk1hcmtlcuWvueixoVxuICAgICAgICAgKi9cbiAgICAgICAgbG9jYXRpb25NYXJrZXI/OiBBTWFwLk1hcmtlcjtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIOaYr+WQpuS9v+eUqOmrmOW+t+WumuS9jXNka+eUqOadpei+heWKqeS8mOWMluWumuS9jeaViOaenFxuICAgICAgICAgKi9cbiAgICAgICAgdXNlTmF0aXZlPzogYm9vbGVhbjtcbiAgICAgICAgdGltZW91dD86IG51bWJlcjtcbiAgICB9XG4gICAgdHlwZSBQb3NpdGlvbiA9ICdMVCcgfCAnUlQnIHwgJ0xCJyB8ICdSQic7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBBbWFwVG9vbEJhclNlcnZpY2UgaW1wbGVtZW50cyBHZXR0ZXI8YW55PiB7XG4gICAgcHJpdmF0ZSBhbWFwcztcbiAgICBwcml2YXRlIHBsdWdpbjtcbiAgICBwcml2YXRlIGxvZ2dlcjtcbiAgICBwcml2YXRlIG5nWm9uZTtcbiAgICBwcml2YXRlIHRvb2xCYXI7XG4gICAgcHJpdmF0ZSB0b29sQmFyJDtcbiAgICBjb25zdHJ1Y3RvcihhbWFwczogQU1hcFNlcnZpY2UsIHBsdWdpbjogUGx1Z2luTG9hZGVyU2VydmljZSwgbG9nZ2VyOiBMb2dnZXJTZXJ2aWNlLCBuZ1pvbmU6IE5nWm9uZSk7XG4gICAgLyoqXG4gICAgICog6I635Y+W5bel5YW35p2hXG4gICAgICovXG4gICAgZ2V0KCk6IGltcG9ydChcInJ4anNcIikuT2JzZXJ2YWJsZTxhbnk+O1xuICAgIC8qKlxuICAgICAqIOWIm+W7uuW3peWFt+adoSBBTWFwLlRvb2xCYXJcbiAgICAgKiBAcGFyYW0gb3B0aW9ucyDpgInpoblcbiAgICAgKi9cbiAgICBjcmVhdGUob3B0aW9uczogQU1hcFRvb2xCYXIuT3B0aW9ucyk6IGltcG9ydChcInJ4anNcIikuT2JzZXJ2YWJsZTxhbnk+O1xuICAgIC8qKlxuICAgICAqIOmUgOavgeW3peWFt+adoVxuICAgICAqL1xuICAgIGRlc3Ryb3koKTogdm9pZDtcbn1cbiJdfQ==