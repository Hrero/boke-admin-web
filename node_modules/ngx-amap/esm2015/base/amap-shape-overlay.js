/**
 * @fileoverview added by tsickle
 * Generated from: base/amap-shape-overlay.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Output, EventEmitter } from '@angular/core';
import { AMapOverlay } from './amap-overlay';
/**
 * @template T
 */
export class AMapShapeOverlay extends AMapOverlay {
    /**
     * @param {?} os
     * @param {?} binder
     */
    constructor(os, binder) {
        super(os, binder);
        this.os = os;
        this.binder = binder;
        /** @type {?} */
        const target = os.get();
        this.naShow = this.binder.bindEvent(target, 'show');
        this.naHide = this.binder.bindEvent(target, 'hide');
        this.naChange = this.binder.bindEvent(target, 'change');
    }
}
AMapShapeOverlay.propDecorators = {
    naShow: [{ type: Output }],
    naHide: [{ type: Output }],
    naChange: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    AMapShapeOverlay.prototype.naShow;
    /** @type {?} */
    AMapShapeOverlay.prototype.naHide;
    /** @type {?} */
    AMapShapeOverlay.prototype.naChange;
    /**
     * @type {?}
     * @protected
     */
    AMapShapeOverlay.prototype.os;
    /**
     * @type {?}
     * @protected
     */
    AMapShapeOverlay.prototype.binder;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW1hcC1zaGFwZS1vdmVybGF5LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWFtYXAvIiwic291cmNlcyI6WyJiYXNlL2FtYXAtc2hhcGUtb3ZlcmxheS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXJELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7OztBQUc3QyxNQUFNLE9BQU8sZ0JBQThDLFNBQVEsV0FBYzs7Ozs7SUFNL0UsWUFBc0IsRUFBYSxFQUFZLE1BQTBCO1FBQ3ZFLEtBQUssQ0FBQyxFQUFFLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFERSxPQUFFLEdBQUYsRUFBRSxDQUFXO1FBQVksV0FBTSxHQUFOLE1BQU0sQ0FBb0I7O2NBRWpFLE1BQU0sR0FBRyxFQUFFLENBQUMsR0FBRyxFQUFFO1FBQ3ZCLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBQ3BELElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBQ3BELElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsTUFBTSxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQzFELENBQUM7OztxQkFWQSxNQUFNO3FCQUNOLE1BQU07dUJBQ04sTUFBTTs7OztJQUZQLGtDQUFvQzs7SUFDcEMsa0NBQW9DOztJQUNwQyxvQ0FBc0M7Ozs7O0lBRTFCLDhCQUF1Qjs7Ozs7SUFBRSxrQ0FBb0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPdXRwdXQsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgR2V0dGVyIH0gZnJvbSAnLi9pbnRlcmZhY2VzJztcbmltcG9ydCB7IEFNYXBPdmVybGF5IH0gZnJvbSAnLi9hbWFwLW92ZXJsYXknO1xuaW1wb3J0IHsgRXZlbnRCaW5kZXJTZXJ2aWNlIH0gZnJvbSAnLi4vc2hhcmVkL2V2ZW50LWJpbmRlci5zZXJ2aWNlJztcblxuZXhwb3J0IGNsYXNzIEFNYXBTaGFwZU92ZXJsYXk8VCBleHRlbmRzIEFNYXAuRXZlbnRFbWl0dGVyPiBleHRlbmRzIEFNYXBPdmVybGF5PFQ+IHtcbiAgLy8gLS0tLSBFdmVudHMgLS0tLVxuICBAT3V0cHV0KCkgbmFTaG93OiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgQE91dHB1dCgpIG5hSGlkZTogRXZlbnRFbWl0dGVyPGFueT47XG4gIEBPdXRwdXQoKSBuYUNoYW5nZTogRXZlbnRFbWl0dGVyPGFueT47XG5cbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIG9zOiBHZXR0ZXI8VD4sIHByb3RlY3RlZCBiaW5kZXI6IEV2ZW50QmluZGVyU2VydmljZSkge1xuICAgIHN1cGVyKG9zLCBiaW5kZXIpO1xuICAgIGNvbnN0IHRhcmdldCA9IG9zLmdldCgpO1xuICAgIHRoaXMubmFTaG93ID0gdGhpcy5iaW5kZXIuYmluZEV2ZW50KHRhcmdldCwgJ3Nob3cnKTtcbiAgICB0aGlzLm5hSGlkZSA9IHRoaXMuYmluZGVyLmJpbmRFdmVudCh0YXJnZXQsICdoaWRlJyk7XG4gICAgdGhpcy5uYUNoYW5nZSA9IHRoaXMuYmluZGVyLmJpbmRFdmVudCh0YXJnZXQsICdjaGFuZ2UnKTtcbiAgfVxufVxuIl19