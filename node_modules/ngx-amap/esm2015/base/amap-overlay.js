/**
 * @fileoverview added by tsickle
 * Generated from: base/amap-overlay.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Input, Output, EventEmitter } from '@angular/core';
/** @type {?} */
export const OverlayOptions = ['cursor', 'extData', 'bubble', 'clickable', 'draggable'];
/**
 * @template T
 */
export class AMapOverlay {
    /**
     * @param {?} os
     * @param {?} binder
     */
    constructor(os, binder) {
        this.os = os;
        this.binder = binder;
        /** @type {?} */
        const target = os.get();
        this.naTouchStart = this.binder.bindEvent(target, 'touchstart');
        this.naTouchMove = this.binder.bindEvent(target, 'touchmove');
        this.naTouchEnd = this.binder.bindEvent(target, 'touchend');
        this.naClick = this.binder.bindEvent(target, 'click');
        this.naDblClick = this.binder.bindEvent(target, 'dblclick');
        this.naRightClick = this.binder.bindEvent(target, 'rightclick');
        this.naMouseOver = this.binder.bindEvent(target, 'mouseover');
        this.naMouseUp = this.binder.bindEvent(target, 'mouseup');
        this.naMouseOut = this.binder.bindEvent(target, 'mouseout');
        this.naMouseDown = this.binder.bindEvent(target, 'mousedown');
    }
}
AMapOverlay.propDecorators = {
    cursor: [{ type: Input }],
    extData: [{ type: Input }],
    bubble: [{ type: Input }],
    clickable: [{ type: Input }],
    draggable: [{ type: Input }],
    naTouchStart: [{ type: Output }],
    naTouchMove: [{ type: Output }],
    naTouchEnd: [{ type: Output }],
    naClick: [{ type: Output }],
    naDblClick: [{ type: Output }],
    naRightClick: [{ type: Output }],
    naMouseOver: [{ type: Output }],
    naMouseUp: [{ type: Output }],
    naMouseOut: [{ type: Output }],
    naMouseDown: [{ type: Output }]
};
if (false) {
    /**
     * 鼠标悬停时的鼠标样式
     * @type {?}
     */
    AMapOverlay.prototype.cursor;
    /**
     * 自定义数据
     * @type {?}
     */
    AMapOverlay.prototype.extData;
    /**
     * 事件是否穿透到地图
     * @type {?}
     */
    AMapOverlay.prototype.bubble;
    /**
     * 是否支持点击
     * @type {?}
     */
    AMapOverlay.prototype.clickable;
    /**
     * 是否支持拖拽
     * @type {?}
     */
    AMapOverlay.prototype.draggable;
    /** @type {?} */
    AMapOverlay.prototype.naTouchStart;
    /** @type {?} */
    AMapOverlay.prototype.naTouchMove;
    /** @type {?} */
    AMapOverlay.prototype.naTouchEnd;
    /** @type {?} */
    AMapOverlay.prototype.naClick;
    /** @type {?} */
    AMapOverlay.prototype.naDblClick;
    /** @type {?} */
    AMapOverlay.prototype.naRightClick;
    /** @type {?} */
    AMapOverlay.prototype.naMouseOver;
    /** @type {?} */
    AMapOverlay.prototype.naMouseUp;
    /** @type {?} */
    AMapOverlay.prototype.naMouseOut;
    /** @type {?} */
    AMapOverlay.prototype.naMouseDown;
    /**
     * @type {?}
     * @protected
     */
    AMapOverlay.prototype.os;
    /**
     * @type {?}
     * @protected
     */
    AMapOverlay.prototype.binder;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW1hcC1vdmVybGF5LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWFtYXAvIiwic291cmNlcyI6WyJiYXNlL2FtYXAtb3ZlcmxheS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFJNUQsTUFBTSxPQUFPLGNBQWMsR0FBRyxDQUFDLFFBQVEsRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLFdBQVcsRUFBRSxXQUFXLENBQUM7Ozs7QUFFdkYsTUFBTSxPQUFPLFdBQVc7Ozs7O0lBbUN0QixZQUFzQixFQUFhLEVBQVksTUFBMEI7UUFBbkQsT0FBRSxHQUFGLEVBQUUsQ0FBVztRQUFZLFdBQU0sR0FBTixNQUFNLENBQW9COztjQUNqRSxNQUFNLEdBQUcsRUFBRSxDQUFDLEdBQUcsRUFBRTtRQUN2QixJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLE1BQU0sRUFBRSxZQUFZLENBQUMsQ0FBQztRQUNoRSxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLE1BQU0sRUFBRSxXQUFXLENBQUMsQ0FBQztRQUM5RCxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLE1BQU0sRUFBRSxVQUFVLENBQUMsQ0FBQztRQUM1RCxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLE1BQU0sRUFBRSxPQUFPLENBQUMsQ0FBQztRQUN0RCxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLE1BQU0sRUFBRSxVQUFVLENBQUMsQ0FBQztRQUM1RCxJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLE1BQU0sRUFBRSxZQUFZLENBQUMsQ0FBQztRQUNoRSxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLE1BQU0sRUFBRSxXQUFXLENBQUMsQ0FBQztRQUM5RCxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLE1BQU0sRUFBRSxTQUFTLENBQUMsQ0FBQztRQUMxRCxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLE1BQU0sRUFBRSxVQUFVLENBQUMsQ0FBQztRQUM1RCxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLE1BQU0sRUFBRSxXQUFXLENBQUMsQ0FBQztJQUNoRSxDQUFDOzs7cUJBMUNBLEtBQUs7c0JBSUwsS0FBSztxQkFJTCxLQUFLO3dCQUlMLEtBQUs7d0JBSUwsS0FBSzsyQkFHTCxNQUFNOzBCQUNOLE1BQU07eUJBQ04sTUFBTTtzQkFDTixNQUFNO3lCQUNOLE1BQU07MkJBQ04sTUFBTTswQkFDTixNQUFNO3dCQUNOLE1BQU07eUJBQ04sTUFBTTswQkFDTixNQUFNOzs7Ozs7O0lBNUJQLDZCQUF3Qjs7Ozs7SUFJeEIsOEJBQXNCOzs7OztJQUl0Qiw2QkFBeUI7Ozs7O0lBSXpCLGdDQUE0Qjs7Ozs7SUFJNUIsZ0NBQTRCOztJQUc1QixtQ0FBMEM7O0lBQzFDLGtDQUF5Qzs7SUFDekMsaUNBQXdDOztJQUN4Qyw4QkFBcUM7O0lBQ3JDLGlDQUF3Qzs7SUFDeEMsbUNBQTBDOztJQUMxQyxrQ0FBeUM7O0lBQ3pDLGdDQUF1Qzs7SUFDdkMsaUNBQXdDOztJQUN4QyxrQ0FBeUM7Ozs7O0lBRTdCLHlCQUF1Qjs7Ozs7SUFBRSw2QkFBb0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEdldHRlciB9IGZyb20gJy4vaW50ZXJmYWNlcyc7XG5pbXBvcnQgeyBFdmVudEJpbmRlclNlcnZpY2UgfSBmcm9tICcuLi9zaGFyZWQvZXZlbnQtYmluZGVyLnNlcnZpY2UnO1xuXG5leHBvcnQgY29uc3QgT3ZlcmxheU9wdGlvbnMgPSBbJ2N1cnNvcicsICdleHREYXRhJywgJ2J1YmJsZScsICdjbGlja2FibGUnLCAnZHJhZ2dhYmxlJ107XG5cbmV4cG9ydCBjbGFzcyBBTWFwT3ZlcmxheTxUIGV4dGVuZHMgQU1hcC5FdmVudEVtaXR0ZXI+IHtcbiAgLy8gLS0tLSBPcHRpb25zIC0tLS1cbiAgLyoqXG4gICAqIOm8oOagh+aCrOWBnOaXtueahOm8oOagh+agt+W8j1xuICAgKi9cbiAgQElucHV0KCkgY3Vyc29yOiBzdHJpbmc7XG4gIC8qKlxuICAgKiDoh6rlrprkuYnmlbDmja5cbiAgICovXG4gIEBJbnB1dCgpIGV4dERhdGE6IGFueTtcbiAgLyoqXG4gICAqIOS6i+S7tuaYr+WQpuepv+mAj+WIsOWcsOWbvlxuICAgKi9cbiAgQElucHV0KCkgYnViYmxlOiBib29sZWFuO1xuICAvKipcbiAgICog5piv5ZCm5pSv5oyB54K55Ye7XG4gICAqL1xuICBASW5wdXQoKSBjbGlja2FibGU6IGJvb2xlYW47XG4gIC8qKlxuICAgKiDmmK/lkKbmlK/mjIHmi5bmi71cbiAgICovXG4gIEBJbnB1dCgpIGRyYWdnYWJsZTogYm9vbGVhbjtcblxuICAvLyAtLS0tIEV2ZW50cyAtLS0tXG4gIEBPdXRwdXQoKSBuYVRvdWNoU3RhcnQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICBAT3V0cHV0KCkgbmFUb3VjaE1vdmU6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICBAT3V0cHV0KCkgbmFUb3VjaEVuZDogRXZlbnRFbWl0dGVyPGFueT47XG4gIEBPdXRwdXQoKSBuYUNsaWNrOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgQE91dHB1dCgpIG5hRGJsQ2xpY2s6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICBAT3V0cHV0KCkgbmFSaWdodENsaWNrOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgQE91dHB1dCgpIG5hTW91c2VPdmVyOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgQE91dHB1dCgpIG5hTW91c2VVcDogRXZlbnRFbWl0dGVyPGFueT47XG4gIEBPdXRwdXQoKSBuYU1vdXNlT3V0OiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgQE91dHB1dCgpIG5hTW91c2VEb3duOiBFdmVudEVtaXR0ZXI8YW55PjtcblxuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgb3M6IEdldHRlcjxUPiwgcHJvdGVjdGVkIGJpbmRlcjogRXZlbnRCaW5kZXJTZXJ2aWNlKSB7XG4gICAgY29uc3QgdGFyZ2V0ID0gb3MuZ2V0KCk7XG4gICAgdGhpcy5uYVRvdWNoU3RhcnQgPSB0aGlzLmJpbmRlci5iaW5kRXZlbnQodGFyZ2V0LCAndG91Y2hzdGFydCcpO1xuICAgIHRoaXMubmFUb3VjaE1vdmUgPSB0aGlzLmJpbmRlci5iaW5kRXZlbnQodGFyZ2V0LCAndG91Y2htb3ZlJyk7XG4gICAgdGhpcy5uYVRvdWNoRW5kID0gdGhpcy5iaW5kZXIuYmluZEV2ZW50KHRhcmdldCwgJ3RvdWNoZW5kJyk7XG4gICAgdGhpcy5uYUNsaWNrID0gdGhpcy5iaW5kZXIuYmluZEV2ZW50KHRhcmdldCwgJ2NsaWNrJyk7XG4gICAgdGhpcy5uYURibENsaWNrID0gdGhpcy5iaW5kZXIuYmluZEV2ZW50KHRhcmdldCwgJ2RibGNsaWNrJyk7XG4gICAgdGhpcy5uYVJpZ2h0Q2xpY2sgPSB0aGlzLmJpbmRlci5iaW5kRXZlbnQodGFyZ2V0LCAncmlnaHRjbGljaycpO1xuICAgIHRoaXMubmFNb3VzZU92ZXIgPSB0aGlzLmJpbmRlci5iaW5kRXZlbnQodGFyZ2V0LCAnbW91c2VvdmVyJyk7XG4gICAgdGhpcy5uYU1vdXNlVXAgPSB0aGlzLmJpbmRlci5iaW5kRXZlbnQodGFyZ2V0LCAnbW91c2V1cCcpO1xuICAgIHRoaXMubmFNb3VzZU91dCA9IHRoaXMuYmluZGVyLmJpbmRFdmVudCh0YXJnZXQsICdtb3VzZW91dCcpO1xuICAgIHRoaXMubmFNb3VzZURvd24gPSB0aGlzLmJpbmRlci5iaW5kRXZlbnQodGFyZ2V0LCAnbW91c2Vkb3duJyk7XG4gIH1cbn1cbiJdfQ==