/**
 * @fileoverview added by tsickle
 * Generated from: base/amap-polygon.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Input, Output, EventEmitter } from '@angular/core';
import { AMapPathOverlay, PathOverlayOptions } from './amap-path-overlay';
/** @type {?} */
export const PolygonOptions = [...PathOverlayOptions, 'fillColor', 'fillOpacity', 'path'];
/**
 * @template T, E
 */
export class AMapPolygon extends AMapPathOverlay {
    /**
     * @param {?} os
     * @param {?} binder
     */
    constructor(os, binder) {
        super(os, binder);
        this.os = os;
        this.binder = binder;
        /**
         * 额外: 是否隐藏
         */
        this.hidden = false;
        /**
         * 额外: 是否开启编辑器
         */
        this.editor = false;
        // directive events:
        this.naReady = new EventEmitter();
        /** @type {?} */
        const editor = this.os.getEditor();
        this.naEditorAddNode = this.binder.bindEvent(editor, 'addnode');
        this.naEditorRemoveNode = this.binder.bindEvent(editor, 'removenode');
        this.naEditorAdjust = this.binder.bindEvent(editor, 'adjust');
        this.naEditorEnd = this.binder.bindEvent(editor, 'end');
    }
}
AMapPolygon.propDecorators = {
    path: [{ type: Input }],
    fillColor: [{ type: Input }],
    fillOpacity: [{ type: Input }],
    hidden: [{ type: Input }],
    editor: [{ type: Input }],
    options: [{ type: Input }],
    naReady: [{ type: Output }],
    naEditorAddNode: [{ type: Output }],
    naEditorRemoveNode: [{ type: Output }],
    naEditorAdjust: [{ type: Output }],
    naEditorEnd: [{ type: Output }]
};
if (false) {
    /**
     * 多边形轮廓线的节点坐标数组
     * @type {?}
     */
    AMapPolygon.prototype.path;
    /**
     * 多边形填充颜色
     * @type {?}
     */
    AMapPolygon.prototype.fillColor;
    /**
     * 边形填充透明度
     * @type {?}
     */
    AMapPolygon.prototype.fillOpacity;
    /**
     * 额外: 是否隐藏
     * @type {?}
     */
    AMapPolygon.prototype.hidden;
    /**
     * 额外: 是否开启编辑器
     * @type {?}
     */
    AMapPolygon.prototype.editor;
    /**
     * 额外: 会覆盖其他属性的配置方式
     * @type {?}
     */
    AMapPolygon.prototype.options;
    /** @type {?} */
    AMapPolygon.prototype.naReady;
    /** @type {?} */
    AMapPolygon.prototype.naEditorAddNode;
    /** @type {?} */
    AMapPolygon.prototype.naEditorRemoveNode;
    /** @type {?} */
    AMapPolygon.prototype.naEditorAdjust;
    /** @type {?} */
    AMapPolygon.prototype.naEditorEnd;
    /**
     * @type {?}
     * @protected
     */
    AMapPolygon.prototype.os;
    /**
     * @type {?}
     * @protected
     */
    AMapPolygon.prototype.binder;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW1hcC1wb2x5Z29uLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWFtYXAvIiwic291cmNlcyI6WyJiYXNlL2FtYXAtcG9seWdvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUU1RCxPQUFPLEVBQUUsZUFBZSxFQUFFLGtCQUFrQixFQUFFLE1BQU0scUJBQXFCLENBQUM7O0FBRzFFLE1BQU0sT0FBTyxjQUFjLEdBQUcsQ0FBQyxHQUFHLGtCQUFrQixFQUFFLFdBQVcsRUFBRSxhQUFhLEVBQUUsTUFBTSxDQUFDOzs7O0FBRXpGLE1BQU0sT0FBTyxXQUdYLFNBQVEsZUFBa0I7Ozs7O0lBb0MxQixZQUFzQixFQUFvQixFQUFZLE1BQTBCO1FBQzlFLEtBQUssQ0FBQyxFQUFFLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFERSxPQUFFLEdBQUYsRUFBRSxDQUFrQjtRQUFZLFdBQU0sR0FBTixNQUFNLENBQW9COzs7O1FBbkJ2RSxXQUFNLEdBQUcsS0FBSyxDQUFDOzs7O1FBSWYsV0FBTSxHQUFHLEtBQUssQ0FBQzs7UUFPZCxZQUFPLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQzs7Y0FVL0IsTUFBTSxHQUFHLElBQUksQ0FBQyxFQUFFLENBQUMsU0FBUyxFQUFFO1FBQ2xDLElBQUksQ0FBQyxlQUFlLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsTUFBTSxFQUFFLFNBQVMsQ0FBQyxDQUFDO1FBQ2hFLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEVBQUUsWUFBWSxDQUFDLENBQUM7UUFDdEUsSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFDOUQsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDMUQsQ0FBQzs7O21CQXRDQSxLQUFLO3dCQUlMLEtBQUs7MEJBSUwsS0FBSztxQkFJTCxLQUFLO3FCQUlMLEtBQUs7c0JBSUwsS0FBSztzQkFHTCxNQUFNOzhCQUdOLE1BQU07aUNBQ04sTUFBTTs2QkFDTixNQUFNOzBCQUNOLE1BQU07Ozs7Ozs7SUE3QlAsMkJBQThEOzs7OztJQUk5RCxnQ0FBNEI7Ozs7O0lBSTVCLGtDQUE4Qjs7Ozs7SUFJOUIsNkJBQXdCOzs7OztJQUl4Qiw2QkFBd0I7Ozs7O0lBSXhCLDhCQUF1Qzs7SUFHdkMsOEJBQXVDOztJQUd2QyxzQ0FBNkM7O0lBQzdDLHlDQUFnRDs7SUFDaEQscUNBQTRDOztJQUM1QyxrQ0FBeUM7Ozs7O0lBRTdCLHlCQUE4Qjs7Ozs7SUFBRSw2QkFBb0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFdpdGhFZGl0b3IgfSBmcm9tICcuL2ludGVyZmFjZXMnO1xuaW1wb3J0IHsgQU1hcFBhdGhPdmVybGF5LCBQYXRoT3ZlcmxheU9wdGlvbnMgfSBmcm9tICcuL2FtYXAtcGF0aC1vdmVybGF5JztcbmltcG9ydCB7IEV2ZW50QmluZGVyU2VydmljZSB9IGZyb20gJy4uL3NoYXJlZC9ldmVudC1iaW5kZXIuc2VydmljZSc7XG5cbmV4cG9ydCBjb25zdCBQb2x5Z29uT3B0aW9ucyA9IFsuLi5QYXRoT3ZlcmxheU9wdGlvbnMsICdmaWxsQ29sb3InLCAnZmlsbE9wYWNpdHknLCAncGF0aCddO1xuXG5leHBvcnQgY2xhc3MgQU1hcFBvbHlnb248XG4gIFQgZXh0ZW5kcyBBTWFwLkV2ZW50RW1pdHRlcixcbiAgRSBleHRlbmRzIEFNYXAuRXZlbnRFbWl0dGVyXG4+IGV4dGVuZHMgQU1hcFBhdGhPdmVybGF5PFQ+IHtcbiAgLy8gLS0tLSBPcHRpb25zIC0tLS1cbiAgLyoqXG4gICAqIOWkmui+ueW9oui9ruW7k+e6v+eahOiKgueCueWdkOagh+aVsOe7hFxuICAgKi9cbiAgQElucHV0KCkgcGF0aD86IEFNYXAuTG9jYXRpb25WYWx1ZVtdIHwgQU1hcC5Mb2NhdGlvblZhbHVlW11bXTtcbiAgLyoqXG4gICAqIOWkmui+ueW9ouWhq+WFheminOiJslxuICAgKi9cbiAgQElucHV0KCkgZmlsbENvbG9yPzogc3RyaW5nO1xuICAvKipcbiAgICog6L655b2i5aGr5YWF6YCP5piO5bqmXG4gICAqL1xuICBASW5wdXQoKSBmaWxsT3BhY2l0eT86IG51bWJlcjtcbiAgLyoqXG4gICAqIOmineWkljog5piv5ZCm6ZqQ6JePXG4gICAqL1xuICBASW5wdXQoKSBoaWRkZW4gPSBmYWxzZTtcbiAgLyoqXG4gICAqIOmineWkljog5piv5ZCm5byA5ZCv57yW6L6R5ZmoXG4gICAqL1xuICBASW5wdXQoKSBlZGl0b3IgPSBmYWxzZTtcbiAgLyoqXG4gICAqIOmineWkljog5Lya6KaG55uW5YW25LuW5bGe5oCn55qE6YWN572u5pa55byPXG4gICAqL1xuICBASW5wdXQoKSBvcHRpb25zOiBBTWFwLlBvbHlnb24uT3B0aW9ucztcblxuICAvLyBkaXJlY3RpdmUgZXZlbnRzOlxuICBAT3V0cHV0KCkgbmFSZWFkeSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICAvLyBlZGl0b3IgZXZlbnRzOlxuICBAT3V0cHV0KCkgbmFFZGl0b3JBZGROb2RlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgQE91dHB1dCgpIG5hRWRpdG9yUmVtb3ZlTm9kZTogRXZlbnRFbWl0dGVyPGFueT47XG4gIEBPdXRwdXQoKSBuYUVkaXRvckFkanVzdDogRXZlbnRFbWl0dGVyPGFueT47XG4gIEBPdXRwdXQoKSBuYUVkaXRvckVuZDogRXZlbnRFbWl0dGVyPGFueT47XG5cbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIG9zOiBXaXRoRWRpdG9yPFQsIEU+LCBwcm90ZWN0ZWQgYmluZGVyOiBFdmVudEJpbmRlclNlcnZpY2UpIHtcbiAgICBzdXBlcihvcywgYmluZGVyKTtcbiAgICBjb25zdCBlZGl0b3IgPSB0aGlzLm9zLmdldEVkaXRvcigpO1xuICAgIHRoaXMubmFFZGl0b3JBZGROb2RlID0gdGhpcy5iaW5kZXIuYmluZEV2ZW50KGVkaXRvciwgJ2FkZG5vZGUnKTtcbiAgICB0aGlzLm5hRWRpdG9yUmVtb3ZlTm9kZSA9IHRoaXMuYmluZGVyLmJpbmRFdmVudChlZGl0b3IsICdyZW1vdmVub2RlJyk7XG4gICAgdGhpcy5uYUVkaXRvckFkanVzdCA9IHRoaXMuYmluZGVyLmJpbmRFdmVudChlZGl0b3IsICdhZGp1c3QnKTtcbiAgICB0aGlzLm5hRWRpdG9yRW5kID0gdGhpcy5iaW5kZXIuYmluZEV2ZW50KGVkaXRvciwgJ2VuZCcpO1xuICB9XG59XG4iXX0=