/**
 * @fileoverview added by tsickle
 * Generated from: base/amap-path-overlay.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Input } from '@angular/core';
import { OverlayOptions } from './amap-overlay';
import { AMapShapeOverlay } from './amap-shape-overlay';
/** @type {?} */
export const PathOverlayOptions = [
    ...OverlayOptions,
    'visible',
    'zIndex',
    'strokeColor',
    'strokeOpacity',
    'strokeWeight',
    'strokeStyle',
    'strokeDasharray',
    'lineJoin',
    'lineCap',
];
/**
 * @template T
 */
export class AMapPathOverlay extends AMapShapeOverlay {
    /**
     * @param {?} os
     * @param {?} binder
     */
    constructor(os, binder) {
        super(os, binder);
        this.os = os;
        this.binder = binder;
    }
}
AMapPathOverlay.propDecorators = {
    visible: [{ type: Input }],
    zIndex: [{ type: Input }],
    strokeColor: [{ type: Input }],
    strokeOpacity: [{ type: Input }],
    strokeWeight: [{ type: Input }],
    strokeStyle: [{ type: Input }],
    strokeDasharray: [{ type: Input }],
    lineJoin: [{ type: Input }],
    lineCap: [{ type: Input }]
};
if (false) {
    /**
     * 是否可见
     * @type {?}
     */
    AMapPathOverlay.prototype.visible;
    /**
     * 覆盖物层级
     * @type {?}
     */
    AMapPathOverlay.prototype.zIndex;
    /**
     * 描边线条颜色
     * @type {?}
     */
    AMapPathOverlay.prototype.strokeColor;
    /**
     * 描边线条透明度
     * @type {?}
     */
    AMapPathOverlay.prototype.strokeOpacity;
    /**
     * 描边宽度
     * @type {?}
     */
    AMapPathOverlay.prototype.strokeWeight;
    /**
     * 描边样式
     * @type {?}
     */
    AMapPathOverlay.prototype.strokeStyle;
    /**
     * 虚线间隔
     * @type {?}
     */
    AMapPathOverlay.prototype.strokeDasharray;
    /**
     * 折线拐点的绘制样式
     * @type {?}
     */
    AMapPathOverlay.prototype.lineJoin;
    /**
     * 折线两端线帽的绘制样式
     * @type {?}
     */
    AMapPathOverlay.prototype.lineCap;
    /**
     * @type {?}
     * @protected
     */
    AMapPathOverlay.prototype.os;
    /**
     * @type {?}
     * @protected
     */
    AMapPathOverlay.prototype.binder;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW1hcC1wYXRoLW92ZXJsYXkuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtYW1hcC8iLCJzb3VyY2VzIjpbImJhc2UvYW1hcC1wYXRoLW92ZXJsYXkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXRDLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNoRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQzs7QUFHeEQsTUFBTSxPQUFPLGtCQUFrQixHQUFHO0lBQ2hDLEdBQUcsY0FBYztJQUNqQixTQUFTO0lBQ1QsUUFBUTtJQUNSLGFBQWE7SUFDYixlQUFlO0lBQ2YsY0FBYztJQUNkLGFBQWE7SUFDYixpQkFBaUI7SUFDakIsVUFBVTtJQUNWLFNBQVM7Q0FDVjs7OztBQUVELE1BQU0sT0FBTyxlQUE2QyxTQUFRLGdCQUFtQjs7Ozs7SUF1Q25GLFlBQXNCLEVBQWEsRUFBWSxNQUEwQjtRQUN2RSxLQUFLLENBQUMsRUFBRSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBREUsT0FBRSxHQUFGLEVBQUUsQ0FBVztRQUFZLFdBQU0sR0FBTixNQUFNLENBQW9CO0lBRXpFLENBQUM7OztzQkFwQ0EsS0FBSztxQkFJTCxLQUFLOzBCQUlMLEtBQUs7NEJBSUwsS0FBSzsyQkFJTCxLQUFLOzBCQUlMLEtBQUs7OEJBSUwsS0FBSzt1QkFJTCxLQUFLO3NCQUlMLEtBQUs7Ozs7Ozs7SUFoQ04sa0NBQTBCOzs7OztJQUkxQixpQ0FBd0I7Ozs7O0lBSXhCLHNDQUE2Qjs7Ozs7SUFJN0Isd0NBQStCOzs7OztJQUkvQix1Q0FBOEI7Ozs7O0lBSTlCLHNDQUF1Qzs7Ozs7SUFJdkMsMENBQW1DOzs7OztJQUluQyxtQ0FBdUM7Ozs7O0lBSXZDLGtDQUFxQzs7Ozs7SUFFekIsNkJBQXVCOzs7OztJQUFFLGlDQUFvQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBHZXR0ZXIgfSBmcm9tICcuL2ludGVyZmFjZXMnO1xuaW1wb3J0IHsgT3ZlcmxheU9wdGlvbnMgfSBmcm9tICcuL2FtYXAtb3ZlcmxheSc7XG5pbXBvcnQgeyBBTWFwU2hhcGVPdmVybGF5IH0gZnJvbSAnLi9hbWFwLXNoYXBlLW92ZXJsYXknO1xuaW1wb3J0IHsgRXZlbnRCaW5kZXJTZXJ2aWNlIH0gZnJvbSAnLi4vc2hhcmVkL2V2ZW50LWJpbmRlci5zZXJ2aWNlJztcblxuZXhwb3J0IGNvbnN0IFBhdGhPdmVybGF5T3B0aW9ucyA9IFtcbiAgLi4uT3ZlcmxheU9wdGlvbnMsXG4gICd2aXNpYmxlJyxcbiAgJ3pJbmRleCcsXG4gICdzdHJva2VDb2xvcicsXG4gICdzdHJva2VPcGFjaXR5JyxcbiAgJ3N0cm9rZVdlaWdodCcsXG4gICdzdHJva2VTdHlsZScsXG4gICdzdHJva2VEYXNoYXJyYXknLFxuICAnbGluZUpvaW4nLFxuICAnbGluZUNhcCcsXG5dO1xuXG5leHBvcnQgY2xhc3MgQU1hcFBhdGhPdmVybGF5PFQgZXh0ZW5kcyBBTWFwLkV2ZW50RW1pdHRlcj4gZXh0ZW5kcyBBTWFwU2hhcGVPdmVybGF5PFQ+IHtcbiAgLy8gLS0tLSBPcHRpb25zIC0tLS1cbiAgLyoqXG4gICAqIOaYr+WQpuWPr+ingVxuICAgKi9cbiAgQElucHV0KCkgdmlzaWJsZTogYm9vbGVhbjtcbiAgLyoqXG4gICAqIOimhueblueJqeWxgue6p1xuICAgKi9cbiAgQElucHV0KCkgekluZGV4OiBudW1iZXI7XG4gIC8qKlxuICAgKiDmj4/ovrnnur/mnaHpopzoibJcbiAgICovXG4gIEBJbnB1dCgpIHN0cm9rZUNvbG9yOiBzdHJpbmc7XG4gIC8qKlxuICAgKiDmj4/ovrnnur/mnaHpgI/mmI7luqZcbiAgICovXG4gIEBJbnB1dCgpIHN0cm9rZU9wYWNpdHk6IG51bWJlcjtcbiAgLyoqXG4gICAqIOaPj+i+ueWuveW6plxuICAgKi9cbiAgQElucHV0KCkgc3Ryb2tlV2VpZ2h0OiBudW1iZXI7XG4gIC8qKlxuICAgKiDmj4/ovrnmoLflvI9cbiAgICovXG4gIEBJbnB1dCgpIHN0cm9rZVN0eWxlOiBBTWFwLlN0cm9rZVN0eWxlO1xuICAvKipcbiAgICog6Jma57q/6Ze06ZqUXG4gICAqL1xuICBASW5wdXQoKSBzdHJva2VEYXNoYXJyYXk6IG51bWJlcltdO1xuICAvKipcbiAgICog5oqY57q/5ouQ54K555qE57uY5Yi25qC35byPXG4gICAqL1xuICBASW5wdXQoKSBsaW5lSm9pbjogQU1hcC5TdHJva2VMaW5lSm9pbjtcbiAgLyoqXG4gICAqIOaKmOe6v+S4pOerr+e6v+W4veeahOe7mOWItuagt+W8j1xuICAgKi9cbiAgQElucHV0KCkgbGluZUNhcDogQU1hcC5TdHJva2VMaW5lQ2FwO1xuXG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBvczogR2V0dGVyPFQ+LCBwcm90ZWN0ZWQgYmluZGVyOiBFdmVudEJpbmRlclNlcnZpY2UpIHtcbiAgICBzdXBlcihvcywgYmluZGVyKTtcbiAgfVxufVxuIl19