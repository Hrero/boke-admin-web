/**
 * @fileoverview added by tsickle
 * Generated from: directives/ui-awesome-marker/ui-awesome-marker.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, Input, NgZone } from '@angular/core';
import { zip } from 'rxjs';
import { UIAwesomeMarkerService } from './ui-awesome-marker.service';
import { UISimpleMarker, SimpleMarkerOptions } from '../ui-simple-marker/ui-simple-marker';
import { getOptions, ChangeFilter } from '../../utils';
import { EventBinderService } from '../../shared/event-binder.service';
import { AMapService } from '../../shared/amap.service';
import { PixelService } from '../../shared/pixel.service';
import { IconService } from '../../shared/icon.service';
import { MarkerLabelService } from '../../shared/marker-label.service';
import { LoggerService } from '../../shared/logger/logger.service';
/** @type {?} */
const AwesomeMarkerOptions = [...SimpleMarkerOptions, 'awesomeIcon', 'getClassnamesOfAwesomeIcon'];
export class UIAwesomeMarkerDirective extends UISimpleMarker {
    /**
     * @param {?} os
     * @param {?} binder
     * @param {?} amaps
     * @param {?} pixels
     * @param {?} icons
     * @param {?} mlabels
     * @param {?} logger
     * @param {?} ngZone
     */
    constructor(os, binder, amaps, pixels, icons, mlabels, logger, ngZone) {
        super(os, binder, amaps, pixels, icons, mlabels, logger, ngZone);
        this.os = os;
        this.binder = binder;
        this.amaps = amaps;
        this.pixels = pixels;
        this.icons = icons;
        this.mlabels = mlabels;
        this.logger = logger;
        this.ngZone = ngZone;
        this.TAG = 'ui-awesome-marker';
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        super.ngOnChanges(changes);
        /** @type {?} */
        const filter = ChangeFilter.of(changes);
        /** @type {?} */
        const marker = this.get();
        if (this.inited) {
            zip(filter.has('awesomeIcon'), marker).subscribe((/**
             * @param {?} __0
             * @return {?}
             */
            ([v, m]) => m.setAwesomeIcon(v)));
        }
    }
    /**
     * @return {?}
     */
    getOptions() {
        return getOptions(this, AwesomeMarkerOptions);
    }
}
UIAwesomeMarkerDirective.decorators = [
    { type: Directive, args: [{
                selector: 'ui-awesome-marker',
                exportAs: 'awesomeMarker',
                providers: [UIAwesomeMarkerService],
            },] }
];
/** @nocollapse */
UIAwesomeMarkerDirective.ctorParameters = () => [
    { type: UIAwesomeMarkerService },
    { type: EventBinderService },
    { type: AMapService },
    { type: PixelService },
    { type: IconService },
    { type: MarkerLabelService },
    { type: LoggerService },
    { type: NgZone }
];
UIAwesomeMarkerDirective.propDecorators = {
    awesomeIcon: [{ type: Input }],
    getClassnamesOfAwesomeIcon: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    UIAwesomeMarkerDirective.prototype.TAG;
    /**
     * icon 的名称，可用的 icons 参见 Font Awesome 官网
     * @type {?}
     */
    UIAwesomeMarkerDirective.prototype.awesomeIcon;
    /**
     * 返回字体节点上的 classNames
     * @type {?}
     */
    UIAwesomeMarkerDirective.prototype.getClassnamesOfAwesomeIcon;
    /**
     * @type {?}
     * @protected
     */
    UIAwesomeMarkerDirective.prototype.os;
    /**
     * @type {?}
     * @protected
     */
    UIAwesomeMarkerDirective.prototype.binder;
    /**
     * @type {?}
     * @protected
     */
    UIAwesomeMarkerDirective.prototype.amaps;
    /**
     * @type {?}
     * @protected
     */
    UIAwesomeMarkerDirective.prototype.pixels;
    /**
     * @type {?}
     * @protected
     */
    UIAwesomeMarkerDirective.prototype.icons;
    /**
     * @type {?}
     * @protected
     */
    UIAwesomeMarkerDirective.prototype.mlabels;
    /**
     * @type {?}
     * @protected
     */
    UIAwesomeMarkerDirective.prototype.logger;
    /**
     * @type {?}
     * @protected
     */
    UIAwesomeMarkerDirective.prototype.ngZone;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidWktYXdlc29tZS1tYXJrZXIuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWFtYXAvIiwic291cmNlcyI6WyJkaXJlY3RpdmVzL3VpLWF3ZXNvbWUtbWFya2VyL3VpLWF3ZXNvbWUtbWFya2VyLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUE0QixNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDbkYsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUMzQixPQUFPLEVBQUUsc0JBQXNCLEVBQXVCLE1BQU0sNkJBQTZCLENBQUM7QUFDMUYsT0FBTyxFQUFFLGNBQWMsRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQzNGLE9BQU8sRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQ3ZELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUN4RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDMUQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ3hELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQzs7TUFFN0Qsb0JBQW9CLEdBQUcsQ0FBQyxHQUFHLG1CQUFtQixFQUFFLGFBQWEsRUFBRSw0QkFBNEIsQ0FBQztBQU9sRyxNQUFNLE9BQU8sd0JBQXlCLFNBQVEsY0FBYzs7Ozs7Ozs7Ozs7SUFZMUQsWUFDWSxFQUEwQixFQUMxQixNQUEwQixFQUMxQixLQUFrQixFQUNsQixNQUFvQixFQUNwQixLQUFrQixFQUNsQixPQUEyQixFQUMzQixNQUFxQixFQUNyQixNQUFjO1FBRXhCLEtBQUssQ0FBQyxFQUFFLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFUdkQsT0FBRSxHQUFGLEVBQUUsQ0FBd0I7UUFDMUIsV0FBTSxHQUFOLE1BQU0sQ0FBb0I7UUFDMUIsVUFBSyxHQUFMLEtBQUssQ0FBYTtRQUNsQixXQUFNLEdBQU4sTUFBTSxDQUFjO1FBQ3BCLFVBQUssR0FBTCxLQUFLLENBQWE7UUFDbEIsWUFBTyxHQUFQLE9BQU8sQ0FBb0I7UUFDM0IsV0FBTSxHQUFOLE1BQU0sQ0FBZTtRQUNyQixXQUFNLEdBQU4sTUFBTSxDQUFRO1FBbkIxQixRQUFHLEdBQUcsbUJBQW1CLENBQUM7SUFzQjFCLENBQUM7Ozs7O0lBRUQsV0FBVyxDQUFDLE9BQXNCO1FBQ2hDLEtBQUssQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLENBQUM7O2NBQ3JCLE1BQU0sR0FBRyxZQUFZLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQzs7Y0FDakMsTUFBTSxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUU7UUFDekIsSUFBSSxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ2YsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQVMsYUFBYSxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQUMsU0FBUzs7OztZQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQztTQUMzRjtJQUNILENBQUM7Ozs7SUFFRCxVQUFVO1FBQ1IsT0FBTyxVQUFVLENBQThCLElBQUksRUFBRSxvQkFBb0IsQ0FBQyxDQUFDO0lBQzdFLENBQUM7OztZQXpDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLG1CQUFtQjtnQkFDN0IsUUFBUSxFQUFFLGVBQWU7Z0JBQ3pCLFNBQVMsRUFBRSxDQUFDLHNCQUFzQixDQUFDO2FBQ3BDOzs7O1lBaEJRLHNCQUFzQjtZQUd0QixrQkFBa0I7WUFDbEIsV0FBVztZQUNYLFlBQVk7WUFDWixXQUFXO1lBQ1gsa0JBQWtCO1lBQ2xCLGFBQWE7WUFWK0IsTUFBTTs7OzBCQXlCeEQsS0FBSzt5Q0FJTCxLQUFLOzs7O0lBVE4sdUNBQTBCOzs7OztJQUsxQiwrQ0FBNkI7Ozs7O0lBSTdCLDhEQUE4RDs7Ozs7SUFHNUQsc0NBQW9DOzs7OztJQUNwQywwQ0FBb0M7Ozs7O0lBQ3BDLHlDQUE0Qjs7Ozs7SUFDNUIsMENBQThCOzs7OztJQUM5Qix5Q0FBNEI7Ozs7O0lBQzVCLDJDQUFxQzs7Ozs7SUFDckMsMENBQStCOzs7OztJQUMvQiwwQ0FBd0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIElucHV0LCBPbkNoYW5nZXMsIFNpbXBsZUNoYW5nZXMsIE5nWm9uZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgemlwIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBVSUF3ZXNvbWVNYXJrZXJTZXJ2aWNlLCBBTWFwVUlBd2Vzb21lTWFya2VyIH0gZnJvbSAnLi91aS1hd2Vzb21lLW1hcmtlci5zZXJ2aWNlJztcbmltcG9ydCB7IFVJU2ltcGxlTWFya2VyLCBTaW1wbGVNYXJrZXJPcHRpb25zIH0gZnJvbSAnLi4vdWktc2ltcGxlLW1hcmtlci91aS1zaW1wbGUtbWFya2VyJztcbmltcG9ydCB7IGdldE9wdGlvbnMsIENoYW5nZUZpbHRlciB9IGZyb20gJy4uLy4uL3V0aWxzJztcbmltcG9ydCB7IEV2ZW50QmluZGVyU2VydmljZSB9IGZyb20gJy4uLy4uL3NoYXJlZC9ldmVudC1iaW5kZXIuc2VydmljZSc7XG5pbXBvcnQgeyBBTWFwU2VydmljZSB9IGZyb20gJy4uLy4uL3NoYXJlZC9hbWFwLnNlcnZpY2UnO1xuaW1wb3J0IHsgUGl4ZWxTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2hhcmVkL3BpeGVsLnNlcnZpY2UnO1xuaW1wb3J0IHsgSWNvblNlcnZpY2UgfSBmcm9tICcuLi8uLi9zaGFyZWQvaWNvbi5zZXJ2aWNlJztcbmltcG9ydCB7IE1hcmtlckxhYmVsU2VydmljZSB9IGZyb20gJy4uLy4uL3NoYXJlZC9tYXJrZXItbGFiZWwuc2VydmljZSc7XG5pbXBvcnQgeyBMb2dnZXJTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2hhcmVkL2xvZ2dlci9sb2dnZXIuc2VydmljZSc7XG5cbmNvbnN0IEF3ZXNvbWVNYXJrZXJPcHRpb25zID0gWy4uLlNpbXBsZU1hcmtlck9wdGlvbnMsICdhd2Vzb21lSWNvbicsICdnZXRDbGFzc25hbWVzT2ZBd2Vzb21lSWNvbiddO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICd1aS1hd2Vzb21lLW1hcmtlcicsXG4gIGV4cG9ydEFzOiAnYXdlc29tZU1hcmtlcicsXG4gIHByb3ZpZGVyczogW1VJQXdlc29tZU1hcmtlclNlcnZpY2VdLFxufSlcbmV4cG9ydCBjbGFzcyBVSUF3ZXNvbWVNYXJrZXJEaXJlY3RpdmUgZXh0ZW5kcyBVSVNpbXBsZU1hcmtlciBpbXBsZW1lbnRzIE9uQ2hhbmdlcyB7XG4gIFRBRyA9ICd1aS1hd2Vzb21lLW1hcmtlcic7XG4gIC8vIC0tLS0gT3B0aW9ucyAtLS0tXG4gIC8qKlxuICAgKiBpY29uIOeahOWQjeensO+8jOWPr+eUqOeahCBpY29ucyDlj4Lop4EgRm9udCBBd2Vzb21lIOWumOe9kVxuICAgKi9cbiAgQElucHV0KCkgYXdlc29tZUljb246IHN0cmluZztcbiAgLyoqXG4gICAqIOi/lOWbnuWtl+S9k+iKgueCueS4iueahCBjbGFzc05hbWVzXG4gICAqL1xuICBASW5wdXQoKSBnZXRDbGFzc25hbWVzT2ZBd2Vzb21lSWNvbjogKGljb246IHN0cmluZykgPT4gc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByb3RlY3RlZCBvczogVUlBd2Vzb21lTWFya2VyU2VydmljZSxcbiAgICBwcm90ZWN0ZWQgYmluZGVyOiBFdmVudEJpbmRlclNlcnZpY2UsXG4gICAgcHJvdGVjdGVkIGFtYXBzOiBBTWFwU2VydmljZSxcbiAgICBwcm90ZWN0ZWQgcGl4ZWxzOiBQaXhlbFNlcnZpY2UsXG4gICAgcHJvdGVjdGVkIGljb25zOiBJY29uU2VydmljZSxcbiAgICBwcm90ZWN0ZWQgbWxhYmVsczogTWFya2VyTGFiZWxTZXJ2aWNlLFxuICAgIHByb3RlY3RlZCBsb2dnZXI6IExvZ2dlclNlcnZpY2UsXG4gICAgcHJvdGVjdGVkIG5nWm9uZTogTmdab25lLFxuICApIHtcbiAgICBzdXBlcihvcywgYmluZGVyLCBhbWFwcywgcGl4ZWxzLCBpY29ucywgbWxhYmVscywgbG9nZ2VyLCBuZ1pvbmUpO1xuICB9XG5cbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xuICAgIHN1cGVyLm5nT25DaGFuZ2VzKGNoYW5nZXMpO1xuICAgIGNvbnN0IGZpbHRlciA9IENoYW5nZUZpbHRlci5vZihjaGFuZ2VzKTtcbiAgICBjb25zdCBtYXJrZXIgPSB0aGlzLmdldCgpO1xuICAgIGlmICh0aGlzLmluaXRlZCkge1xuICAgICAgemlwKGZpbHRlci5oYXM8c3RyaW5nPignYXdlc29tZUljb24nKSwgbWFya2VyKS5zdWJzY3JpYmUoKFt2LCBtXSkgPT4gbS5zZXRBd2Vzb21lSWNvbih2KSk7XG4gICAgfVxuICB9XG5cbiAgZ2V0T3B0aW9ucygpIHtcbiAgICByZXR1cm4gZ2V0T3B0aW9uczxBTWFwVUlBd2Vzb21lTWFya2VyLk9wdGlvbnM+KHRoaXMsIEF3ZXNvbWVNYXJrZXJPcHRpb25zKTtcbiAgfVxufVxuIl19