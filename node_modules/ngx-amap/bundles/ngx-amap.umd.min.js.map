{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-amap/shared/ngx-amap-config.ts","ng://ngx-amap/shared/logger/logger.service.ts","ng://ngx-amap/shared/logger/debug-logger.service.ts","ng://ngx-amap/shared/amap-loader.service.ts","ng://ngx-amap/shared/amap.service.ts","ng://ngx-amap/shared/event-binder.service.ts","ng://ngx-amap/shared/plugin-loader.service.ts","ng://ngx-amap/utils/change-filter.ts","ng://ngx-amap/utils/get-options.ts","ng://ngx-amap/components/ngx-amap/ngx-amap.component.ts","ng://ngx-amap/directives/amap-marker/amap-marker.service.ts","ng://ngx-amap/base/amap-overlay.ts","ng://ngx-amap/shared/pixel.service.ts","ng://ngx-amap/shared/size.service.ts","ng://ngx-amap/shared/icon.service.ts","ng://ngx-amap/shared/marker-label.service.ts","ng://ngx-amap/components/amap-info-window/amap-info-window.service.ts","ng://ngx-amap/components/amap-info-window/amap-info-window.component.ts","ng://ngx-amap/directives/amap-marker/amap-marker.directive.ts","ng://ngx-amap/base/amap-shape-overlay.ts","ng://ngx-amap/base/amap-path-overlay.ts","ng://ngx-amap/directives/amap-polyline/amap-polyline.service.ts","ng://ngx-amap/directives/amap-polyline/amap-polyline.directive.ts","ng://ngx-amap/components/amap-text/amap-text.service.ts","ng://ngx-amap/components/amap-text/amap-text.component.ts","ng://ngx-amap/base/amap-polygon.ts","ng://ngx-amap/directives/amap-polygon/amap-polygon.service.ts","ng://ngx-amap/directives/amap-polygon/amap-polygon.directive.ts","ng://ngx-amap/directives/amap-bezier-curve/amap-bezier-curve.service.ts","ng://ngx-amap/directives/amap-bezier-curve/amap-bezier-curve.directive.ts","ng://ngx-amap/directives/amap-rectangle/amap-rectangle.service.ts","ng://ngx-amap/directives/amap-rectangle/amap-rectangle.directive.ts","ng://ngx-amap/base/amap-circle.ts","ng://ngx-amap/directives/amap-circle/amap-circle.service.ts","ng://ngx-amap/directives/amap-circle/amap-circle.directive.ts","ng://ngx-amap/directives/amap-circle-marker/amap-circle-marker.service.ts","ng://ngx-amap/directives/amap-circle-marker/amap-circle-marker.directive.ts","ng://ngx-amap/directives/amap-ellipse/amap-ellipse.service.ts","ng://ngx-amap/directives/amap-ellipse/amap-ellipse.directive.ts","ng://ngx-amap/directives/amap-tool-bar/amap-tool-bar.service.ts","ng://ngx-amap/directives/amap-marker-clusterer/amap-marker-clusterer.service.ts","ng://ngx-amap/directives/amap-tool-bar/amap-tool-bar.directive.ts","ng://ngx-amap/directives/amap-marker-clusterer/amap-marker-clusterer.directive.ts","ng://ngx-amap/directives/amap-heatmap/amap-heatmap.service.ts","ng://ngx-amap/directives/amap-heatmap/amap-heatmap.directive.ts","ng://ngx-amap/shared/amap-plugin-loader.service.ts","ng://ngx-amap/services/amap-autocomplete/amap-autocomplete.service.ts","ng://ngx-amap/directives/input-amap-autocomplete/input-amap-autocomplete.directive.ts","ng://ngx-amap/directives/ui-simple-marker/ui-simple-marker.service.ts","ng://ngx-amap/shared/amap-ui-loader.service.ts","ng://ngx-amap/directives/ui-simple-marker/ui-simple-marker.ts","ng://ngx-amap/directives/ui-awesome-marker/ui-awesome-marker.service.ts","ng://ngx-amap/directives/ui-simple-marker/ui-simple-marker.directive.ts","ng://ngx-amap/directives/ui-awesome-marker/ui-awesome-marker.directive.ts","ng://ngx-amap/ngx-amap.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","NGX_AMAP_CONFIG","InjectionToken","LoggerService","args","_i","console","log","apply","w","warn","Injectable","DebugLoggerService","config","debugTags","debugAll","split","tag","includes","Inject","TAG","AMapLoaderService","logger","defaultProtocol","defaultVersion","defaultUIVersion","load","_this","loading$","asObservable","ReplaySubject","script","document","createElement","type","async","defer","src","getSrcFromConfig","onerror","err","window","complete","body","appendChild","loadUI","uiLoading$","uiScript","getUISrcFromConfig","onload","callbackName","urlBase","protocol","queryParams","v","apiVersion","callback","key","apiKey","keys","filter","k","isArray","map","join","entry","uiVersion","AMapService","loader","ngZone","map$","get","container","options","pipe","runOutsideAngular","AMap","Map","destroy","subscribe","NgZone","EventBinderService","bindEvent","target","eventName","switchMap","t","Observable","observer","handler","event","addListener","run","removeListener","PluginLoaderService","amap","state","name","pKey","has","plugin","set","ChangeFilter","changes","of","notEmpty","currentValue","EMPTY","getOptions","component","forEach","undefined","ALL_OPTIONS","NgxAmapComponent","el","pluginLoader","binder","naReady","EventEmitter","naPluginsLoaded","inited","naComplete","naClick","naDblClick","naRightClick","naMouseMove","naMouseOver","naMouseWheel","naMouseUp","naMouseOut","naMouseDown","naTouchStart","naTouchMove","naTouchEnd","naHotspotClick","naHotspotOver","naHotspotOut","naDragStart","naDragging","naDragEnd","naResize","naZoomStart","naZoomEnd","naZoomChange","naMoveStart","naMoveEnd","naMove","ngOnInit","nativeElement","querySelector","emit","ngOnDestroy","ngOnChanges","zip","_a","_b","setZoom","setCenter","setCity","Component","selector","exportAs","template","providers","ElementRef","Input","Output","AmapMarkerService","amaps","marker$","addToMap","marker","Marker","setMap","OverlayOptions","AMapOverlay","os","PixelService","Pixel","x","y","round","providedIn","SizeService","Size","width","height","h","IconService","pixels","sizes","Icon","iconOption","size","image","imageOffset","imageSize","MarkerLabelService","pixel","label","content","offset","direction","AmapInfoWindowService","infoWindow$","infoWindow","InfoWindow","close","open","position","openOnMark","getPosition","AmapInfoWindowComponent","isOpen","isOpenChange","naOpen","naClose","naChange","iw","toggleOpen","setContent","setPosition","setSize","setAnchor","subscriptions","add","unsubscribe","hostMarker","AmapMarkerDirective","_super","icons","mlabels","hidden","inCluster","openInfoWindow","infoWindowComponent","QueryList","naMoving","naMoveAlong","tslib_1.__extends","subscription","setIcon","setShadow","setLabel","setTitle","setExtData","setClickable","setDraggable","show","hide","setCursor","setAnimation","setAngle","setzIndex","setShape","setOffset","icon","shadow","updateInfoWindow","updateInfoWindowPosition","setTop","ngAfterContentInit","marker_1","Directive","ContentChildren","AMapShapeOverlay","naShow","naHide","PathOverlayOptions","AMapPathOverlay","AmapPolylineService","plugins","polyline$","editor$","polyline","Polyline","getEditor","loadEditor","createEditor","switchMapTo","editor","PolyEditor","toggleEditor","PolylineOptions","AmapPolylineDirective","naEditorAddNode","naEditorRemoveNode","naEditorAdjust","naEditorEnd","setPath","setOptions","AmapTextService","text$","text","Text","AmapTextComponent","setStyle","innerText","PolygonOptions","AMapPolygon","AmapPolygonService","polygon$","polygon","Polygon","AmapPolygonDirective","AmapBezierCurveService","bezierCurve$","polyEditor$","bezierCurve","BezierCurve","getPolyEditor","loadPolyEditor","BezierCurveEditor","createPolyEditor","polyEditor","togglePolyEditor","BezierCurveOptions","AmapBezierCurveDirective","naPolyEditorAddNode","naPolyEditorRemoveNode","naPolyEditorAdjust","naPolyEditorEnd","AmapRectangleService","rectangle$","rectangle","Rectangle","RectangleEditor","RectangleOptions","AmapRectangleDirective","setBounds","CircleOptions","AMapCircle","AmapCircleService","circle$","circle","Circle","CircleEditor","AmapCircleDirective","setRadius","AmapCircleMarkerService","CircleMarker","AmapCircleMarkerDirective","AmapEllipseService","ellipse$","ellipse","Ellipse","EllipseEditor","EllipseOptions","AmapEllipseDirective","AMapToolBar","Options","AmapToolBarService","toolBar$","toolBar","ToolBar","addControl","removeControl","AMapMarkerClusterer","ToolBarOptions","AmapToolBarDirective","naLocation","naZoomChanged","toolbar","doLocation","StyleObject","AmapMarkerClustererService","markerClusterer$","markerClusterer","MarkerClusterer","clearMarkers","MarkerClusterOptions","AmapMarkerClustererDirective","markerList","styles","style","cluster","setGridSize","setMinClusterSize","setMaxZoom","setAverageCenter","setStyles","updateMarkers","c","combineLatest","markers","setMarkers","AMapHeatmap","Data","DataSet","AmapHeatmapService","heatmap$","heatmap","Heatmap","HeatmapOptions","AmapHeatmapDirective","setDataSet","AmapPluginLoaderService","mapLoader","AMapAutocomplete","Tip","SearchResult","AmapAutocompleteService","ac$","on","ac","Autocomplete","search","address","status","result","AutocompleteOptions","InputAmapAutocompleteDirective","naSelect","naChoose","naError","setType","setCityLimit","input","AMapUISimpleMarker","AmapUILoaderService","AMapUI","u","UISimpleMarkerService","uiLoader","ui","SimpleMarker","SimpleMarkerOptions","UISimpleMarker","showPositionPoint","hidePositionPoint","iconTheme","setIconThemeAndStyle","setIconStyle","setIconLabel","setContainerClassNames","AMapUIAwesomeMarker","UISimpleMarkerDirective","UIAwesomeMarkerService","AwesomeMarker","AwesomeMarkerOptions","UIAwesomeMarkerDirective","setAwesomeIcon","NgxAmapModule","forRoot","mapConfig","ngModule","provide","useValue","useClass","debug","NgModule","declarations","imports","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { InjectionToken } from '@angular/core';\n\nexport interface NgxAmapConfig {\n  apiKey?: string;\n  apiVersion?: string;\n  uiVersion?: string;\n  protocol?: 'http' | 'https';\n  debug?: boolean;\n  debugTags?: string;\n}\n\nexport const NGX_AMAP_CONFIG = new InjectionToken<NgxAmapConfig>('NGX_AMAP_CONFIG');\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class LoggerService {\n  constructor() {}\n\n  i(...args: any[]) {\n    console.log(...args);\n  }\n\n  e(...args: any[]) {\n    console.error(...args);\n  }\n\n  w(...args: any[]) {\n    console.warn(...args);\n  }\n\n  d(...args: any[]) {\n    // only stub;\n  }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { NgxAmapConfig, NGX_AMAP_CONFIG } from '../ngx-amap-config';\n\n@Injectable()\nexport class DebugLoggerService {\n  debugTags: string[] = [];\n  debugAll = true;\n\n  constructor(@Inject(NGX_AMAP_CONFIG) private config: NgxAmapConfig = {}) {\n    if (config.debugTags) {\n      if (config.debugTags === '*') {\n        this.debugAll = true;\n      } else {\n        this.debugAll = false;\n        this.debugTags = config.debugTags.split(',');\n      }\n    }\n  }\n\n  i(...args: any[]) {\n    console.log(...args);\n  }\n\n  e(...args: any[]) {\n    console.error(...args);\n  }\n\n  w(...args: any[]) {\n    console.warn(...args);\n  }\n\n  d(tag: string, ...args: any[]) {\n    if (this.debugAll || this.debugTags.includes(tag)) {\n      console.log(`[${tag}]`, ...args);\n    }\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { LoggerService } from './logger/logger.service';\nimport { NgxAmapConfig, NGX_AMAP_CONFIG } from './ngx-amap-config';\nimport { Observable, ReplaySubject } from 'rxjs';\n\nconst TAG = 'AMapLoader';\n\n@Injectable()\nexport class AMapLoaderService {\n  private defaultProtocol = 'https';\n  private defaultVersion = '1.4.15';\n  private defaultUIVersion = '1.0.11';\n  private loading$: ReplaySubject<void>;\n  private uiLoading$: ReplaySubject<void>;\n\n  constructor(\n    @Inject(NGX_AMAP_CONFIG) private config: NgxAmapConfig = {},\n    private logger: LoggerService,\n  ) {\n    this.config = config || {};\n  }\n\n  load(): Observable<void> {\n    if (this.loading$) {\n      return this.loading$.asObservable();\n    }\n    this.logger.d(TAG, 'loading AMap API ...');\n    this.loading$ = new ReplaySubject();\n    const callbackName = '_NgxAmapAPILoader';\n    const script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.async = true;\n    script.defer = true;\n    script.src = this.getSrcFromConfig(callbackName);\n    script.onerror = (err: Event) => {\n      this.logger.e('failed to load AMap API.');\n      this.loading$.error(err);\n    };\n    window[callbackName] = () => {\n      this.logger.d(TAG, 'loading AMap API COMPLETE');\n      this.loading$.next();\n      this.loading$.complete();\n    };\n    document.body.appendChild(script);\n    return this.loading$.asObservable();\n  }\n\n  loadUI(): Observable<void> {\n    if (this.uiLoading$) {\n      return this.uiLoading$.asObservable();\n    }\n    this.logger.d(TAG, 'loading AMap UI ...');\n    this.uiLoading$ = new ReplaySubject();\n    const uiScript = document.createElement('script');\n    uiScript.type = 'text/javascript';\n    uiScript.async = true;\n    uiScript.defer = true;\n    uiScript.src = this.getUISrcFromConfig();\n    uiScript.onerror = (err: Event) => {\n      this.logger.e('failed to load AMap API.');\n    };\n    uiScript.onload = () => {\n      // tslint:disable-next-line: no-string-literal\n      window['initAMapUI']();\n      this.logger.d(TAG, 'loading AMap UI COMPLETE');\n      this.uiLoading$.next();\n      this.uiLoading$.complete();\n    };\n    document.body.appendChild(uiScript);\n    return this.uiLoading$.asObservable();\n  }\n\n  private getSrcFromConfig(callbackName: string) {\n    const urlBase = `${this.config.protocol || this.defaultProtocol}://webapi.amap.com/maps`;\n    const queryParams: { [key: string]: string | Array<string> } = {\n      v: this.config.apiVersion || this.defaultVersion,\n      callback: callbackName,\n      key: this.config.apiKey,\n    };\n    const params = Object.keys(queryParams)\n      .filter((k: string) => queryParams[k] != null)\n      .filter((k: string) => {\n        // remove empty arrays\n        return (\n          !Array.isArray(queryParams[k]) ||\n          (Array.isArray(queryParams[k]) && queryParams[k].length > 0)\n        );\n      })\n      .map((k: string) => {\n        // join arrays as comma seperated strings\n        const i = queryParams[k];\n        if (Array.isArray(i)) {\n          return { key: k, value: i.join(',') };\n        }\n        return { key: k, value: queryParams[k] };\n      })\n      .map((entry: { key: string; value: string }) => `${entry.key}=${entry.value}`)\n      .join('&');\n\n    return `${urlBase}?${params}`;\n  }\n\n  private getUISrcFromConfig() {\n    // tslint:disable-next-line: max-line-length\n    const urlBase = `${this.config.protocol ||\n      this.defaultProtocol}://webapi.amap.com/ui/1.0/main-async.js?v=${this.config.uiVersion ||\n      this.defaultUIVersion}`;\n    return urlBase;\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AMapLoaderService } from './amap-loader.service';\nimport { LoggerService } from './logger/logger.service';\nimport { Getter } from '../base/interfaces';\n\nconst TAG = 'AMap';\n\n@Injectable()\nexport class AMapService implements Getter<AMap.Map> {\n  private map: AMap.Map;\n  private map$ = new ReplaySubject<AMap.Map>();\n\n  constructor(\n    private loader: AMapLoaderService,\n    private logger: LoggerService,\n    private ngZone: NgZone,\n  ) {}\n\n  /**\n   * è·åå°å¾å¯¹è±¡ AMap.Map\n   */\n  get() {\n    return this.map$.asObservable();\n  }\n\n  /**\n   * åå»ºå°å¾å¯¹è±¡ AMap.Map\n   * @param container å°å¾å®¹å¨çDOMåç´ \n   * @param options éé¡¹\n   */\n  create(container: HTMLElement, options: AMap.Map.Options) {\n    return this.loader.load().pipe(\n      map(() => {\n        this.map = this.ngZone.runOutsideAngular(() => new AMap.Map(container, options));\n        this.logger.d(TAG, 'new map created.');\n        this.map$.next(this.map);\n        this.map$.complete();\n        return this.map;\n      }),\n    );\n  }\n\n  /**\n   * éæ¯å°å¾å¯¹è±¡\n   */\n  destroy() {\n    this.get().subscribe(m => {\n      m.destroy();\n      this.logger.d(TAG, 'map destroyed.');\n      this.map = null;\n    });\n  }\n}\n","import { Injectable, NgZone, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { LoggerService } from './logger/logger.service';\n\nconst TAG = 'EventBinder';\n\n@Injectable()\nexport class EventBinderService {\n  constructor(private logger: LoggerService, private ngZone: NgZone) {}\n\n  /**\n   * æ³¨åäºä»¶\n   * @param eventName äºä»¶å\n   */\n  bindEvent<T extends AMap.EventEmitter>(\n    target: Observable<T>,\n    eventName: string,\n  ): EventEmitter<any> {\n    return target.pipe(\n      switchMap(\n        (t: T) =>\n          new Observable(observer => {\n            let handler = AMap.event.addListener(\n              t,\n              eventName,\n              e => {\n                this.ngZone.run(() => observer.next(e));\n              },\n              this,\n            );\n            this.logger.d(TAG, `subscribed event: ${eventName}`);\n            return () => {\n              AMap.event.removeListener(handler);\n              this.logger.d(TAG, `unsubscribed event: ${eventName}`);\n              eventName = null;\n              handler = null;\n            };\n          }),\n      ),\n    ) as EventEmitter<any>;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { LoggerService } from './logger/logger.service';\nimport { AMapService } from './amap.service';\n\nconst TAG = 'PluginLoader';\n\n@Injectable()\nexport class PluginLoaderService {\n  private state = new Map<string, ReplaySubject<void>>();\n\n  constructor(private amap: AMapService, private logger: LoggerService) {}\n\n  load(name: string | string[]): Observable<void> {\n    let pKey = '';\n    if (Array.isArray(name)) {\n      pKey = name.join(',');\n    } else {\n      pKey = name;\n    }\n    if (this.state.has(pKey)) {\n      return this.state.get(pKey).asObservable();\n    }\n\n    this.logger.d(TAG, 'loading plugin:', pKey, '...');\n    return this.amap.get().pipe(\n      switchMap(m => {\n        const loading$ = new ReplaySubject<void>(1);\n        m.plugin(name, () => {\n          this.logger.d(TAG, 'loading plugin:', pKey, 'COMPLETE');\n          loading$.next();\n          loading$.complete();\n        });\n        this.state.set(pKey, loading$);\n        return loading$.asObservable();\n      }),\n    );\n  }\n}\n","import { SimpleChanges } from '@angular/core';\nimport { Observable, of, EMPTY } from 'rxjs';\n\nexport class ChangeFilter {\n  constructor(private changes: SimpleChanges) {}\n\n  static of(changes: SimpleChanges) {\n    return new ChangeFilter(changes);\n  }\n\n  notEmpty<T>(key: string): Observable<T> {\n    if (this.changes[key]) {\n      const value: T = this.changes[key].currentValue;\n\n      if (value !== undefined && value !== null) {\n        return of(value);\n      }\n    }\n    return EMPTY;\n  }\n\n  has<T>(key: string): Observable<T> {\n    if (this.changes[key]) {\n      const value: T = this.changes[key].currentValue;\n      return of(value);\n    }\n    return EMPTY;\n  }\n}\n","export function getOptions<T>(component: any, keys: string[]): T {\n  const options: any = {};\n\n  keys.forEach(key => {\n    if (component[key] !== undefined && component[key] !== null) {\n      options[key] = component[key];\n    }\n  });\n\n  return options;\n}\n","import {\n  Component,\n  OnInit,\n  Input,\n  ElementRef,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  SimpleChanges,\n  OnChanges,\n  NgZone,\n} from '@angular/core';\nimport { zip } from 'rxjs';\nimport { AMapService } from '../../shared/amap.service';\nimport { EventBinderService } from '../../shared/event-binder.service';\nimport { PluginLoaderService } from '../../shared/plugin-loader.service';\nimport { LoggerService } from '../../shared/logger/logger.service';\nimport { getOptions, ChangeFilter } from '../../utils';\n\nconst TAG = 'ngx-amap';\nconst ALL_OPTIONS = [\n  'view',\n  'layers',\n  'zoom',\n  'center',\n  'labelzIndex',\n  'zooms',\n  'lang',\n  'defaultCursor',\n  'crs',\n  'animateEnable',\n  'isHotspot',\n  'defaultLayer',\n  'rotateEnable',\n  'resizeEnable',\n  'showIndoorMap',\n  'indoorMap',\n  'expandZoomRange',\n  'dragEnable',\n  'zoomEnable',\n  'doubleClickZoom',\n  'keyboardEnable',\n  'jogEnable',\n  'scrollWheel',\n  'touchZoom',\n  'touchZoomCenter',\n  'mapStyle',\n  'features',\n  'showBuildingBlock',\n  'viewMode',\n  'pitch',\n  'pitchEnable',\n  'buildingAnimation',\n  'skyColor',\n  'preloadMode',\n  'mask',\n  'maxPitch',\n  'rotation',\n  'forceVector',\n  'gridMapForeign',\n  'vectorMapForeign',\n];\n\n@Component({\n  selector: 'ngx-amap',\n  exportAs: 'amap',\n  templateUrl: './ngx-amap.component.html',\n  styleUrls: ['./ngx-amap.component.scss'],\n  providers: [AMapService, PluginLoaderService],\n})\nexport class NgxAmapComponent implements OnInit, OnDestroy, OnChanges {\n  // ---- Map Options ----\n  /**\n   * å°å¾è§å£ï¼ç¨äºæ§å¶å½±åå°å¾éææ¾ç¤ºçå±æ§\n   */\n  @Input() view: AMap.View2D;\n  /**\n   * å°å¾å¾å±æ°ç»ï¼æ°ç»å¯ä»¥æ¯å¾å± ä¸­çä¸ä¸ªæå¤ä¸ªï¼é»è®¤ä¸ºæ®éäºç»´å°å¾\n   */\n  @Input() layers: AMap.Layer[];\n  /**\n   * å°å¾æ¾ç¤ºçç¼©æ¾çº§å«\n   */\n  @Input() zoom: number;\n  /**\n   * å°å¾ä¸­å¿ç¹åæ å¼\n   */\n  @Input() center: AMap.LocationValue;\n  /**\n   * å°å¾æ æ³¨æ¾ç¤ºé¡ºåº\n   */\n  @Input() labelzIndex: number;\n  /**\n   * å°å¾æ¾ç¤ºçç¼©æ¾çº§å«èå´\n   */\n  @Input() zooms: [number, number];\n  /**\n   * å°å¾è¯­è¨ç±»å\n   */\n  @Input() lang: AMap.Lang;\n  /**\n   * å°å¾é»è®¤é¼ æ æ ·å¼\n   */\n  @Input() defaultCursor: string;\n  /**\n   * å°å¾æ¾ç¤ºçåèåæ ç³»\n   */\n  @Input() crs: 'EPSG3857' | 'EPSG3395' | 'EPSG4326';\n  /**\n   * å°å¾å¹³ç§»è¿ç¨ä¸­æ¯å¦ä½¿ç¨å¨ç»\n   */\n  @Input() animateEnable: boolean;\n  /**\n   * æ¯å¦å¼å¯å°å¾ç­ç¹åæ æ³¨çhoverææ\n   */\n  @Input() isHotspot: boolean;\n  /**\n   * å½åå°å¾ä¸­é»è®¤æ¾ç¤ºçå¾å±\n   */\n  @Input() defaultLayer: AMap.TileLayer;\n  /**\n   * å°å¾æ¯å¦å¯æè½¬\n   */\n  @Input() rotateEnable: boolean;\n  /**\n   * æ¯å¦çæ§å°å¾å®¹å¨å°ºå¯¸åå\n   */\n  @Input() resizeEnable: boolean;\n  /**\n   * æ¯å¦å¨æç¢éåºå¾çæ¶åèªå¨å±ç¤ºå®¤åå°å¾\n   */\n  @Input() showIndoorMap: boolean;\n  /**\n   * å¨å±ç¤ºç¢éå¾çæ¶åèªå¨å±ç¤ºå®¤åå°å¾å¾å±\n   */\n  @Input() indoorMap: any;\n  /**\n   * æ¯å¦æ¯æå¯ä»¥æ©å±æå¤§ç¼©æ¾çº§å«\n   */\n  @Input() expandZoomRange: boolean;\n  /**\n   * å°å¾æ¯å¦å¯éè¿é¼ æ ææ½å¹³ç§»\n   */\n  @Input() dragEnable: boolean;\n  /**\n   * å°å¾æ¯å¦å¯ç¼©æ¾\n   */\n  @Input() zoomEnable: boolean;\n  /**\n   * å°å¾æ¯å¦å¯éè¿åå»é¼ æ æ¾å¤§å°å¾\n   */\n  @Input() doubleClickZoom: boolean;\n  /**\n   * å°å¾æ¯å¦å¯éè¿é®çæ§å¶\n   */\n  @Input() keyboardEnable: boolean;\n  /**\n   * å°å¾æ¯å¦ä½¿ç¨ç¼å¨ææ\n   */\n  @Input() jogEnable: boolean;\n  /**\n   * å°å¾æ¯å¦å¯éè¿é¼ æ æ»è½®ç¼©æ¾æµè§\n   */\n  @Input() scrollWheel: boolean;\n  /**\n   * å°å¾å¨ç§»å¨ç»ç«¯ä¸æ¯å¦å¯éè¿å¤ç¹è§¦æ§ç¼©æ¾æµè§å°å¾\n   */\n  @Input() touchZoom: boolean;\n  /**\n   * å½touchZoomCenter=1çæ¶åï¼ææºç«¯åæç¼©æ¾çä»¥å°å¾ä¸­å¿ä¸ºä¸­å¿ï¼å¦åé»è®¤ä»¥åæä¸­é´ç¹ä¸ºä¸­å¿\n   */\n  @Input() touchZoomCenter: number;\n  /**\n   * è®¾ç½®å°å¾çæ¾ç¤ºæ ·å¼\n   */\n  @Input() mapStyle: string;\n  /**\n   * è®¾ç½®å°å¾ä¸æ¾ç¤ºçåç´ ç§ç±»\n   */\n  @Input() features: AMap.Map.Feature[] | 'all' | AMap.Map.Feature;\n  /**\n   * è®¾ç½®å°å¾æ¾ç¤º3Dæ¥¼åææ\n   */\n  @Input() showBuildingBlock: boolean;\n  /**\n   * è§å¾æ¨¡å¼\n   */\n  @Input() viewMode: AMap.Map.ViewMode;\n  /**\n   * ä¿¯ä»°è§åº¦\n   */\n  @Input() pitch: number;\n  /**\n   * æ¯å¦åè®¸è®¾ç½®ä¿¯ä»°è§åº¦\n   */\n  @Input() pitchEnable: boolean;\n  /**\n   * æ¥¼ååºç°åæ¶å¤±çæ¶åæ¯å¦æ¾ç¤ºå¨ç»è¿ç¨\n   */\n  @Input() buildingAnimation: boolean;\n  /**\n   * è°æ´å¤©ç©ºé¢è²\n   */\n  @Input() skyColor: string;\n  /**\n   * è®¾ç½®å°å¾çé¢å è½½æ¨¡å¼\n   */\n  @Input() preloadMode: boolean;\n  /**\n   * ä¸º Map å®ä¾æå®æ©æ¨¡çè·¯å¾ï¼åå¾å±å°åªæ¾ç¤ºè·¯å¾èå´åå¾å\n   */\n  @Input() mask: [number, number][] | [number, number][][] | [number, number][][][];\n  @Input() maxPitch: number;\n  @Input() rotation: number;\n  @Input() forceVector: boolean;\n  @Input() gridMapForeign: boolean;\n  /**\n   * é¢å¤: æµ·å¤â½®éå°å¾æ ·å¼\n   */\n  @Input() vectorMapForeign: string;\n\n  /**\n   * é¢å¤: è®¾ç½®åå¸\n   */\n  @Input() city: string;\n  /**\n   * é¢å¤: è®¾ç½®å°å¾å\n   */\n  @Input() name: string;\n  /**\n   * é¢å¤ï¼å è½½æä»¶\n   */\n  @Input() plugins: string[];\n\n  // ---- Map Events ----\n  @Output() naReady = new EventEmitter();\n  @Output() naComplete: EventEmitter<any>;\n  @Output() naClick: EventEmitter<any>;\n  @Output() naDblClick: EventEmitter<any>;\n  @Output() naRightClick: EventEmitter<any>;\n  @Output() naMouseMove: EventEmitter<any>;\n  @Output() naMouseOver: EventEmitter<any>;\n  @Output() naMouseWheel: EventEmitter<any>;\n  @Output() naMouseUp: EventEmitter<any>;\n  @Output() naMouseOut: EventEmitter<any>;\n  @Output() naMouseDown: EventEmitter<any>;\n  @Output() naTouchStart: EventEmitter<any>;\n  @Output() naTouchMove: EventEmitter<any>;\n  @Output() naTouchEnd: EventEmitter<any>;\n  @Output() naHotspotClick: EventEmitter<any>;\n  @Output() naHotspotOver: EventEmitter<any>;\n  @Output() naHotspotOut: EventEmitter<any>;\n  @Output() naDragStart: EventEmitter<any>;\n  @Output() naDragging: EventEmitter<any>;\n  @Output() naDragEnd: EventEmitter<any>;\n  @Output() naResize: EventEmitter<any>;\n  @Output() naZoomStart: EventEmitter<any>;\n  @Output() naZoomEnd: EventEmitter<any>;\n  @Output() naZoomChange: EventEmitter<any>;\n  @Output() naMoveStart: EventEmitter<any>;\n  @Output() naMoveEnd: EventEmitter<any>;\n  @Output() naMove: EventEmitter<any>;\n  @Output() naPluginsLoaded = new EventEmitter<AMap.Map>();\n\n  private inited = false;\n\n  constructor(\n    private el: ElementRef,\n    private amap: AMapService,\n    private pluginLoader: PluginLoaderService,\n    private logger: LoggerService,\n    private binder: EventBinderService,\n    private ngZone: NgZone,\n  ) {\n    const m = this.amap.get();\n    this.naComplete = this.binder.bindEvent(m, 'complete');\n    this.naClick = this.binder.bindEvent(m, 'click');\n    this.naDblClick = this.binder.bindEvent(m, 'dblclick');\n    this.naRightClick = this.binder.bindEvent(m, 'rightclick');\n    this.naMouseMove = this.binder.bindEvent(m, 'mousemove');\n    this.naMouseOver = this.binder.bindEvent(m, 'mouseover');\n    this.naMouseWheel = this.binder.bindEvent(m, 'mousewheel');\n    this.naMouseUp = this.binder.bindEvent(m, 'mouseup');\n    this.naMouseOut = this.binder.bindEvent(m, 'mouseout');\n    this.naMouseDown = this.binder.bindEvent(m, 'mousedown');\n    this.naTouchStart = this.binder.bindEvent(m, 'touchstart');\n    this.naTouchMove = this.binder.bindEvent(m, 'touchmove');\n    this.naTouchEnd = this.binder.bindEvent(m, 'touchend');\n    this.naHotspotClick = this.binder.bindEvent(m, 'hotspotclick');\n    this.naHotspotOver = this.binder.bindEvent(m, 'hotspotover');\n    this.naHotspotOut = this.binder.bindEvent(m, 'hotspotout');\n    this.naDragStart = this.binder.bindEvent(m, 'dragstart');\n    this.naDragging = this.binder.bindEvent(m, 'dragging');\n    this.naDragEnd = this.binder.bindEvent(m, 'dragend');\n    this.naResize = this.binder.bindEvent(m, 'resize');\n    this.naZoomStart = this.binder.bindEvent(m, 'zoomstart');\n    this.naZoomEnd = this.binder.bindEvent(m, 'zoomend');\n    this.naZoomChange = this.binder.bindEvent(m, 'zoomchange');\n    this.naMoveStart = this.binder.bindEvent(m, 'movestart');\n    this.naMoveEnd = this.binder.bindEvent(m, 'moveend');\n    this.naMove = this.binder.bindEvent(m, 'mapmove');\n  }\n\n  ngOnInit() {\n    this.logger.d(TAG, 'initializing ...');\n    const container = this.el.nativeElement.querySelector('div.ngx-amap-container-inner');\n    const options = getOptions<AMap.Map.Options>(this, ALL_OPTIONS);\n    this.logger.d(TAG, 'options:', options);\n    this.amap.create(container, options).subscribe(amap => {\n      this.logger.d(TAG, 'map is ready.');\n      this.ngZone.run(() => this.naReady.emit(amap));\n    });\n    this.inited = true;\n  }\n\n  ngOnDestroy() {\n    this.amap.destroy();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const filter = ChangeFilter.of(changes);\n    const amap = this.get();\n\n    if (this.inited) {\n      zip(filter.has<number>('zoom'), amap).subscribe(([v, m]) => {\n        this.logger.d(TAG, 'setZoom:', v);\n        m.setZoom(v);\n      });\n      zip(filter.has<AMap.LocationValue>('center'), amap).subscribe(([v, m]) => {\n        this.logger.d(TAG, 'setCenter:', v);\n        m.setCenter(v);\n      });\n    }\n\n    // Not included in OPTIONS\n    zip(filter.has<string>('city'), amap).subscribe(([v, m]) => {\n      m.setCity(v, () => {\n        this.logger.d(TAG, 'setCity:', v);\n      });\n    });\n    zip(filter.notEmpty<string[]>('plugins'), amap).subscribe(([v, m]) => {\n      this.pluginLoader.load(v).subscribe(() => {\n        this.logger.d(TAG, 'plugins loaded.');\n        this.ngZone.run(() => this.naPluginsLoaded.emit(m));\n      });\n    });\n  }\n\n  /**\n   * è·åå·²åå»ºç AMap.Map å¯¹è±¡\n   */\n  get() {\n    return this.amap.get();\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AMapService } from '../../shared/amap.service';\nimport { LoggerService } from '../../shared/logger/logger.service';\nimport { Getter } from '../../base/interfaces';\n\nconst TAG = 'AmapMarker';\n\n@Injectable()\nexport class AmapMarkerService implements Getter<AMap.Marker> {\n  private marker: AMap.Marker;\n  private marker$ = new ReplaySubject<AMap.Marker>(1);\n\n  constructor(private amaps: AMapService, private logger: LoggerService, private ngZone: NgZone) {}\n\n  /**\n   * è·åç¹æ è®°\n   */\n  get() {\n    return this.marker$.asObservable();\n  }\n\n  /**\n   * åå»ºç¹æ è®° AMap.Marker\n   * @param options éé¡¹\n   * @param addToMap æ¯å¦ç´æ¥å è¿å°å¾\n   */\n  create(options: AMap.Marker.Options, addToMap = true) {\n    return this.amaps.get().pipe(\n      map(m => {\n        if (addToMap) {\n          options.map = m;\n        }\n        this.marker = this.ngZone.runOutsideAngular(() => new AMap.Marker(options));\n        this.logger.d(TAG, 'new marker created.');\n        this.marker$.next(this.marker);\n        this.marker$.complete();\n        return this.marker;\n      }),\n    );\n  }\n\n  /**\n   * éæ¯ç¹æ è®°\n   */\n  destroy() {\n    this.get().subscribe(m => {\n      m.setMap(null);\n      this.logger.d(TAG, 'marker destroyed.');\n      this.marker = null;\n    });\n  }\n}\n","import { Input, Output, EventEmitter } from '@angular/core';\nimport { Getter } from './interfaces';\nimport { EventBinderService } from '../shared/event-binder.service';\n\nexport const OverlayOptions = ['cursor', 'extData', 'bubble', 'clickable', 'draggable'];\n\nexport class AMapOverlay<T extends AMap.EventEmitter> {\n  // ---- Options ----\n  /**\n   * é¼ æ æ¬åæ¶çé¼ æ æ ·å¼\n   */\n  @Input() cursor: string;\n  /**\n   * èªå®ä¹æ°æ®\n   */\n  @Input() extData: any;\n  /**\n   * äºä»¶æ¯å¦ç©¿éå°å°å¾\n   */\n  @Input() bubble: boolean;\n  /**\n   * æ¯å¦æ¯æç¹å»\n   */\n  @Input() clickable: boolean;\n  /**\n   * æ¯å¦æ¯æææ½\n   */\n  @Input() draggable: boolean;\n\n  // ---- Events ----\n  @Output() naTouchStart: EventEmitter<any>;\n  @Output() naTouchMove: EventEmitter<any>;\n  @Output() naTouchEnd: EventEmitter<any>;\n  @Output() naClick: EventEmitter<any>;\n  @Output() naDblClick: EventEmitter<any>;\n  @Output() naRightClick: EventEmitter<any>;\n  @Output() naMouseOver: EventEmitter<any>;\n  @Output() naMouseUp: EventEmitter<any>;\n  @Output() naMouseOut: EventEmitter<any>;\n  @Output() naMouseDown: EventEmitter<any>;\n\n  constructor(protected os: Getter<T>, protected binder: EventBinderService) {\n    const target = os.get();\n    this.naTouchStart = this.binder.bindEvent(target, 'touchstart');\n    this.naTouchMove = this.binder.bindEvent(target, 'touchmove');\n    this.naTouchEnd = this.binder.bindEvent(target, 'touchend');\n    this.naClick = this.binder.bindEvent(target, 'click');\n    this.naDblClick = this.binder.bindEvent(target, 'dblclick');\n    this.naRightClick = this.binder.bindEvent(target, 'rightclick');\n    this.naMouseOver = this.binder.bindEvent(target, 'mouseover');\n    this.naMouseUp = this.binder.bindEvent(target, 'mouseup');\n    this.naMouseOut = this.binder.bindEvent(target, 'mouseout');\n    this.naMouseDown = this.binder.bindEvent(target, 'mousedown');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IPixel } from '../interfaces';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PixelService {\n  constructor() {}\n\n  create(options: IPixel | AMap.Pixel): AMap.Pixel | null {\n    if (!options) {\n      return null;\n    }\n    if (options instanceof AMap.Pixel) {\n      return options;\n    }\n    if (Array.isArray(options)) {\n      return new AMap.Pixel(options[0], options[1]);\n    }\n    return new AMap.Pixel(options.x || 0, options.y || 0, options.round);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ISize } from '../interfaces';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SizeService {\n  constructor() {}\n\n  create(options: ISize | AMap.SizeValue): AMap.SizeValue | null {\n    if (!options) {\n      return null;\n    }\n    if (options instanceof AMap.Size || Array.isArray(options)) {\n      return options;\n    }\n    if (options.width !== undefined && options.height !== undefined) {\n      return new AMap.Size(options.width, options.height);\n    }\n    if (options.w !== undefined && options.h !== undefined) {\n      return new AMap.Size(options.w, options.h);\n    }\n    return null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PixelService } from './pixel.service';\nimport { SizeService } from './size.service';\nimport { IIcon } from '../interfaces';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IconService {\n  constructor(private pixels: PixelService, private sizes: SizeService) {}\n\n  create(options: string | AMap.Icon | IIcon): string | AMap.Icon | null {\n    if (!options) {\n      return null;\n    }\n\n    if (typeof options === 'string') {\n      return options;\n    }\n\n    if (options instanceof AMap.Icon) {\n      return options;\n    }\n\n    const iconOption: AMap.Icon.Options = {};\n    const { size, image, imageOffset, imageSize } = options;\n    if (size !== undefined) {\n      iconOption.size = this.sizes.create(size);\n    }\n    if (image !== undefined) {\n      iconOption.image = image;\n    }\n    if (imageOffset !== undefined) {\n      iconOption.imageOffset = this.pixels.create(imageOffset);\n    }\n    if (imageSize !== undefined) {\n      iconOption.imageSize = this.sizes.create(imageSize);\n    }\n    return new AMap.Icon(iconOption);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PixelService } from './pixel.service';\nimport { IMarkerLabel } from '../interfaces';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MarkerLabelService {\n  constructor(private pixel: PixelService) {}\n\n  create(options: IMarkerLabel): AMap.Marker.Label | null {\n    if (options) {\n      const label: AMap.Marker.Label = {};\n      if (options.content !== undefined) {\n        label.content = options.content;\n      }\n      if (options.offset !== undefined) {\n        if (options.offset instanceof AMap.Pixel) {\n          label.offset = options.offset;\n        } else {\n          label.offset = this.pixel.create(options.offset);\n        }\n      }\n      if (options.direction !== undefined) {\n        label.direction = options.direction;\n      }\n      return label;\n    }\n    return null;\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { ReplaySubject, zip, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AMapService } from '../../shared/amap.service';\nimport { LoggerService } from '../../shared/logger/logger.service';\nimport { Getter } from '../../base/interfaces';\n\nconst TAG = 'AmapInfoWindow';\n\n@Injectable()\nexport class AmapInfoWindowService implements Getter<AMap.InfoWindow> {\n  private map: AMap.Map;\n  private infoWindow: AMap.InfoWindow;\n  private infoWindow$ = new ReplaySubject<AMap.InfoWindow>(1);\n\n  constructor(private amaps: AMapService, private logger: LoggerService, private ngZone: NgZone) {}\n\n  /**\n   * è·åä¿¡æ¯çªä½\n   */\n  get() {\n    return this.infoWindow$.asObservable();\n  }\n\n  /**\n   * åå»º AMap.InfoWindow\n   * @param options éé¡¹\n   */\n  create(options: AMap.InfoWindow.Options) {\n    return this.amaps.get().pipe(\n      map(m => {\n        this.map = m;\n        this.infoWindow = this.ngZone.runOutsideAngular(() => new AMap.InfoWindow(options));\n        this.logger.d(TAG, 'new InfoWindow created.');\n        this.infoWindow$.next(this.infoWindow);\n        this.infoWindow$.complete();\n        return this.infoWindow;\n      }),\n    );\n  }\n\n  /**\n   * éæ¯\n   */\n  destroy() {\n    this.get().subscribe(w => {\n      w.close();\n      this.logger.d(TAG, 'InfoWindow destroyed.');\n      this.infoWindow = null;\n      this.map = null;\n    });\n  }\n\n  /**\n   * æå¼\n   */\n  open(position?: AMap.LocationValue) {\n    this.get().subscribe(w => w.open(this.map, position));\n  }\n\n  /**\n   * å¨è¦çç©ä¸æå¼çªä½\n   */\n  openOnMark(marker: Observable<AMap.Marker | AMap.Text>) {\n    zip(marker, this.get()).subscribe(([m, w]) => {\n      w.open(this.map, m.getPosition());\n    });\n  }\n\n  /**\n   * å³é­\n   */\n  close() {\n    this.get().subscribe(w => w.close());\n  }\n}\n","import {\n  Component,\n  Input,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  SimpleChanges,\n  OnChanges,\n  ElementRef,\n  NgZone,\n} from '@angular/core';\nimport { zip, Subscription, Observable } from 'rxjs';\nimport { LoggerService } from '../../shared/logger/logger.service';\nimport { EventBinderService } from '../../shared/event-binder.service';\nimport { getOptions, ChangeFilter } from '../../utils';\nimport { AmapInfoWindowService } from './amap-info-window.service';\nimport { IPixel, ISize } from '../../interfaces';\nimport { PixelService } from '../../shared/pixel.service';\nimport { SizeService } from '../../shared/size.service';\nimport { AMapService } from '../../shared/amap.service';\n\nconst TAG = 'amap-info-window';\nconst ALL_OPTIONS = [\n  'isCustom',\n  'autoMove',\n  'closeWhenClickMap',\n  'content',\n  'size',\n  'anchor',\n  'offset',\n  'position',\n  'showShadow',\n];\n\n@Component({\n  selector: 'amap-info-window',\n  templateUrl: './amap-info-window.component.html',\n  styleUrls: ['./amap-info-window.component.scss'],\n  providers: [AmapInfoWindowService],\n})\nexport class AmapInfoWindowComponent implements OnChanges, OnDestroy {\n  // ---- Options ----\n  /**\n   * æ¯å¦èªå®ä¹çªä½\n   */\n  @Input() isCustom: boolean;\n  /**\n   * æ¯å¦èªå¨è°æ´çªä½å°è§éå\n   */\n  @Input() autoMove: boolean;\n  /**\n   * æ§å¶æ¯å¦å¨é¼ æ ç¹å»å°å¾åå³é­ä¿¡æ¯çªä½\n   */\n  @Input() closeWhenClickMap: boolean;\n  /**\n   * æ¾ç¤ºåå®¹\n   */\n  @Input() content: string | HTMLElement;\n  /**\n   * ä¿¡æ¯çªä½å°ºå¯¸\n   */\n  @Input() size: AMap.SizeValue | ISize;\n  /**\n   * ä¿¡æ¯çªä½éç¹\n   */\n  @Input() anchor: AMap.InfoWindow.Anchor;\n  /**\n   * ä¿¡æ¯çªä½æ¾ç¤ºä½ç½®åç§»é\n   */\n  @Input() offset: AMap.Pixel | IPixel;\n  /**\n   * ä¿¡æ¯çªä½æ¾ç¤ºåºç¹ä½ç½®\n   */\n  @Input() position: AMap.LocationValue;\n  /**\n   * æ¯å¦æ¾ç¤ºä¿¡æ¯çªä½é´å½±\n   */\n  @Input() showShadow: boolean;\n  /**\n   * é¢å¤ï¼æ¯å¦å¼å¯\n   */\n  @Input() isOpen = false;\n  // ---- Events ----\n  @Output() naReady = new EventEmitter();\n  @Output() naOpen: EventEmitter<any>;\n  @Output() naClose: EventEmitter<any>;\n  @Output() naChange: EventEmitter<any>;\n  @Output() isOpenChange = new EventEmitter<boolean>();\n\n  hostMarker: Observable<AMap.Marker | AMap.Text>;\n  private inited = false;\n  private subscriptions: Subscription;\n\n  constructor(\n    protected os: AmapInfoWindowService,\n    protected binder: EventBinderService,\n    private amaps: AMapService,\n    private el: ElementRef,\n    private logger: LoggerService,\n    private pixels: PixelService,\n    private sizes: SizeService,\n    private ngZone: NgZone,\n  ) {\n    const w = this.os.get();\n    this.naOpen = this.binder.bindEvent(w, 'open');\n    this.naClose = this.binder.bindEvent(w, 'close');\n    this.naChange = this.binder.bindEvent(w, 'change');\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const filter = ChangeFilter.of(changes);\n    const iw = this.get();\n    if (!this.inited) {\n      this.amaps.get().subscribe(() => {\n        this.logger.d(TAG, 'initializing ...');\n        // bind isOpenChange events:\n        this.subscriptions = this.binder.bindEvent(iw, 'open').subscribe(() => {\n          if (!this.isOpen) {\n            this.isOpen = true;\n            this.isOpenChange.emit(true);\n          }\n        });\n        this.subscriptions.add(\n          this.binder.bindEvent(iw, 'close').subscribe(() => {\n            if (this.isOpen) {\n              this.isOpen = false;\n              this.isOpenChange.emit(false);\n            }\n          }),\n        );\n        this.content = this.content\n          ? this.content\n          : this.el.nativeElement.querySelector('.amap-info-window-content');\n        const options = getOptions<AMap.InfoWindow.Options>(this, ALL_OPTIONS);\n        if (this.offset) {\n          options.offset = this.pixels.create(this.offset);\n        }\n        if (this.size) {\n          options.size = this.sizes.create(this.size);\n        }\n        this.logger.d(TAG, 'options:', options);\n        this.os.create(options).subscribe(m => {\n          this.ngZone.run(() => {\n            this.toggleOpen();\n            this.naReady.emit(m);\n          });\n          this.logger.d(TAG, 'InfoWindow is ready.');\n        });\n        this.inited = true;\n      });\n    } else {\n      filter.has<boolean>('isOpen').subscribe(() => this.toggleOpen());\n      zip(filter.has<any>('content'), iw).subscribe(([v, w]) => w.setContent(v));\n      zip(filter.notEmpty<AMap.LocationValue>('position'), iw).subscribe(([v, w]) =>\n        w.setPosition(v),\n      );\n      zip(filter.notEmpty<AMap.SizeValue | ISize>('size'), iw).subscribe(([v, w]) =>\n        w.setSize(this.sizes.create(v)),\n      );\n      zip(filter.notEmpty<AMap.InfoWindow.Anchor>('anchor'), iw).subscribe(([v, w]) =>\n        w.setAnchor(v),\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subscriptions) {\n      this.subscriptions.unsubscribe();\n    }\n    this.os.destroy();\n  }\n\n  /**\n   * è·åå·²åå»ºç AMap.InfoWindow å¯¹è±¡\n   */\n  get() {\n    return this.os.get();\n  }\n\n  /**\n   * å¼å³çªä½\n   */\n  toggleOpen() {\n    this.logger.d(TAG, 'toggle open');\n    this.isOpen ? this.open() : this.close();\n  }\n\n  /**\n   * æå¼çªä½\n   */\n  open() {\n    if (this.hostMarker) {\n      this.os.openOnMark(this.hostMarker);\n    } else {\n      this.os.open();\n    }\n  }\n\n  /**\n   * å³é­çªä½\n   */\n  close() {\n    this.os.close();\n  }\n}\n","import {\n  Directive,\n  Input,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  SimpleChanges,\n  OnChanges,\n  ContentChildren,\n  QueryList,\n  AfterContentInit,\n  NgZone,\n} from '@angular/core';\nimport { zip, Subscription } from 'rxjs';\nimport { AmapMarkerService } from './amap-marker.service';\nimport { LoggerService } from '../../shared/logger/logger.service';\nimport { AMapOverlay, OverlayOptions } from '../../base/amap-overlay';\nimport { EventBinderService } from '../../shared/event-binder.service';\nimport { getOptions, ChangeFilter } from '../../utils';\nimport { IPixel, IIcon, IMarkerLabel } from '../../interfaces';\nimport { PixelService } from '../../shared/pixel.service';\nimport { IconService } from '../../shared/icon.service';\nimport { MarkerLabelService } from '../../shared/marker-label.service';\nimport { AmapInfoWindowComponent } from '../../components/amap-info-window/amap-info-window.component';\nimport { AMapService } from '../../shared/amap.service';\n\nconst TAG = 'amap-marker';\nconst ALL_OPTIONS = [\n  ...OverlayOptions,\n  'position',\n  'anchor',\n  'offset',\n  'icon',\n  'content',\n  'topWhenClick',\n  'raiseOnDrag',\n  'visible',\n  'zIndex',\n  'angle',\n  'autoRotation',\n  'animation',\n  'shadow',\n  'title',\n  'shape',\n  'label',\n];\n\n@Directive({\n  selector: 'amap-marker',\n  exportAs: 'marker',\n  providers: [AmapMarkerService],\n})\nexport class AmapMarkerDirective extends AMapOverlay<AMap.Marker>\n  implements OnChanges, OnDestroy, AfterContentInit {\n  // ---- Marker Options ----\n  /**\n   * ç¹æ è®°å¨å°å¾ä¸æ¾ç¤ºçä½ç½®\n   */\n  @Input() position: AMap.LocationValue;\n  /**\n   * æ è®°éç¹\n   */\n  @Input() anchor: AMap.Marker.Anchor;\n  /**\n   * ç¹æ è®°æ¾ç¤ºä½ç½®åç§»é\n   */\n  @Input() offset: AMap.Pixel | IPixel;\n  /**\n   * éå¨ç¹æ è®°ä¸­æ¾ç¤ºçå¾æ \n   */\n  @Input() icon: string | AMap.Icon | IIcon;\n  /**\n   * ç¹æ è®°æ¾ç¤ºåå®¹\n   */\n  @Input() content: string | HTMLElement;\n  /**\n   * é¼ æ ç¹å»æ¶markeræ¯å¦ç½®é¡¶\n   */\n  @Input() topWhenClick: boolean;\n  /**\n   * ææ½ç¹æ è®°æ¶æ¯å¦å¼å¯ç¹æ è®°ç¦»å¼å°å¾çææ\n   */\n  @Input() raiseOnDrag: boolean;\n  /**\n   * ç¹æ è®°æ¯å¦å¯è§\n   */\n  @Input() visible: boolean;\n  /**\n   * ç¹æ è®°çå å é¡ºåº\n   */\n  @Input() zIndex: number;\n  /**\n   * ç¹æ è®°çæè½¬è§åº¦\n   */\n  @Input() angle: number;\n  /**\n   * æ¯å¦èªå¨æè½¬\n   */\n  @Input() autoRotation: boolean;\n  /**\n   * ç¹æ è®°çå¨ç»ææ\n   */\n  @Input() animation: AMap.AnimationName;\n  /**\n   * ç¹æ è®°é´å½±\n   */\n  @Input() shadow: AMap.Icon | string | IIcon;\n  /**\n   * é¼ æ æ»è¿ç¹æ è®°æ¶çæå­æç¤º\n   */\n  @Input() title: string;\n  /**\n   * å¯ç¹å»åºå\n   */\n  @Input() shape: AMap.MarkerShape;\n  /**\n   * ææ¬æ æ³¨\n   */\n  @Input() label: AMap.Marker.Label | IMarkerLabel;\n  /**\n   * é¢å¤: æ¯å¦ç½®é¡¶\n   */\n  @Input() isTop: boolean;\n  /**\n   * é¢å¤: æ¯å¦éè\n   */\n  @Input() hidden = false;\n  /**\n   * é¢å¤: æ¯å¦åå«å¨ç¹èåä¸­\n   */\n  @Input() inCluster = false;\n  /**\n   * é¢å¤: ç¹å»æ¶æ¯å¦æ¾ç¤ºä¿¡æ¯çªä½\n   */\n  @Input() openInfoWindow = true;\n\n  // amap-marker events:\n  @Output() naReady = new EventEmitter();\n  @Output() naMouseOut: EventEmitter<any>;\n  @Output() naDragStart: EventEmitter<any>;\n  @Output() naDragging: EventEmitter<any>;\n  @Output() naDragEnd: EventEmitter<any>;\n  @Output() naMoving: EventEmitter<any>;\n  @Output() naMoveEnd: EventEmitter<any>;\n  @Output() naMoveAlong: EventEmitter<any>;\n\n  // amap info window:\n  @ContentChildren(AmapInfoWindowComponent)\n  infoWindowComponent = new QueryList<AmapInfoWindowComponent>();\n\n  private inited = false;\n  private subscription: Subscription;\n\n  constructor(\n    protected os: AmapMarkerService,\n    protected binder: EventBinderService,\n    private amaps: AMapService,\n    private pixels: PixelService,\n    private icons: IconService,\n    private mlabels: MarkerLabelService,\n    private logger: LoggerService,\n    private ngZone: NgZone,\n  ) {\n    super(os, binder);\n    const target = this.os.get();\n    this.naMouseOut = this.binder.bindEvent(target, 'mouseout');\n    this.naDragStart = this.binder.bindEvent(target, 'dragstart');\n    this.naDragging = this.binder.bindEvent(target, 'dragging');\n    this.naDragEnd = this.binder.bindEvent(target, 'dragend');\n    this.naMoving = this.binder.bindEvent(target, 'moving');\n    this.naMoveEnd = this.binder.bindEvent(target, 'moveend');\n    this.naMoveAlong = this.binder.bindEvent(target, 'movealong');\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n    this.os.destroy();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const filter = ChangeFilter.of(changes);\n    const marker = this.get();\n    if (!this.inited) {\n      // do not draw marker when no poistion defined.\n      if (!this.position) {\n        return;\n      }\n      this.amaps.get().subscribe(() => {\n        this.logger.d(TAG, 'initializing ...');\n        // bind info window events:\n        this.subscription = this.binder.bindEvent(marker, 'click').subscribe(() => {\n          if (this.openInfoWindow) {\n            this.infoWindowComponent.forEach(w => w.open());\n          }\n        });\n        const options = getOptions<AMap.Marker.Options>(this, ALL_OPTIONS);\n        if (this.icon) {\n          options.icon = this.icons.create(this.icon);\n        }\n        if (this.shadow) {\n          options.shadow = this.icons.create(this.shadow);\n        }\n        if (this.label) {\n          options.label = this.mlabels.create(this.label);\n        }\n        if (this.offset) {\n          options.offset = this.pixels.create(this.offset);\n        }\n        this.logger.d(TAG, 'options:', options);\n        this.os.create(options, !this.inCluster).subscribe(m => {\n          this.ngZone.run(() => this.naReady.emit(m));\n          this.logger.d(TAG, 'marker is ready.');\n        });\n        this.inited = true;\n        this.updateInfoWindow();\n        this.updateInfoWindowPosition();\n      });\n    } else {\n      zip(filter.has<string | AMap.Icon | IIcon>('icon'), marker).subscribe(([v, m]) =>\n        m.setIcon(this.icons.create(v)),\n      );\n      zip(filter.has<string | AMap.Icon>('shadow'), marker).subscribe(([v, m]) =>\n        m.setShadow(this.icons.create(v)),\n      );\n      zip(filter.has<AMap.Marker.Label | IMarkerLabel>('label'), marker).subscribe(([v, m]) =>\n        m.setLabel(this.mlabels.create(v)),\n      );\n      zip(filter.has<string>('title'), marker).subscribe(([v, m]) => m.setTitle(v));\n      zip(filter.has<any>('content'), marker).subscribe(([v, m]) => m.setContent(v));\n      zip(filter.has<any>('extData'), marker).subscribe(([v, m]) => m.setExtData(v));\n      zip(filter.has<boolean>('clickable'), marker).subscribe(([v, m]) => m.setClickable(!!v));\n      zip(filter.has<boolean>('draggable'), marker).subscribe(([v, m]) => m.setDraggable(!!v));\n      zip(filter.has<boolean>('visible'), marker).subscribe(([v, m]) => (v ? m.show() : m.hide()));\n      zip(filter.has<string>('cursor'), marker).subscribe(([v, m]) => m.setCursor(v));\n      zip(filter.has<AMap.AnimationName>('animation'), marker).subscribe(([v, m]) =>\n        m.setAnimation(v),\n      );\n      zip(filter.has<number>('angle'), marker).subscribe(([v, m]) => m.setAngle(v));\n      zip(filter.has<number>('zIndex'), marker).subscribe(([v, m]) => m.setzIndex(v));\n      zip(filter.has<AMap.MarkerShape>('shape'), marker).subscribe(([v, m]) => m.setShape(v));\n      zip(filter.notEmpty<AMap.Pixel | IPixel>('offset'), marker).subscribe(([v, m]) =>\n        m.setOffset(this.pixels.create(v)),\n      );\n      zip(filter.notEmpty<AMap.LocationValue>('position'), marker).subscribe(([v, m]) =>\n        m.setPosition(v),\n      );\n    }\n    zip(filter.has<boolean>('isTop'), marker).subscribe(([v, m]) => m.setTop(!!v));\n    zip(filter.has<boolean>('hidden'), marker).subscribe(([v, m]) => (v ? m.hide() : m.show()));\n  }\n\n  ngAfterContentInit() {\n    this.updateInfoWindow();\n    this.infoWindowComponent.changes.subscribe(() => this.updateInfoWindow());\n  }\n\n  private updateInfoWindow() {\n    if (this.infoWindowComponent && this.inited) {\n      if (this.infoWindowComponent.length > 1) {\n        this.logger.e(TAG, 'Expected no more than 1 info window.');\n        return;\n      }\n\n      const marker = this.os.get();\n      this.infoWindowComponent.forEach(component => {\n        component.hostMarker = marker;\n      });\n    }\n  }\n\n  private updateInfoWindowPosition() {\n    if (this.infoWindowComponent && this.inited) {\n      this.infoWindowComponent.forEach(component => {\n        component.toggleOpen();\n      });\n    }\n  }\n\n  /**\n   * è·åå·²åå»ºç AMap.Marker å¯¹è±¡\n   */\n  get() {\n    return this.os.get();\n  }\n}\n","import { Output, EventEmitter } from '@angular/core';\nimport { Getter } from './interfaces';\nimport { AMapOverlay } from './amap-overlay';\nimport { EventBinderService } from '../shared/event-binder.service';\n\nexport class AMapShapeOverlay<T extends AMap.EventEmitter> extends AMapOverlay<T> {\n  // ---- Events ----\n  @Output() naShow: EventEmitter<any>;\n  @Output() naHide: EventEmitter<any>;\n  @Output() naChange: EventEmitter<any>;\n\n  constructor(protected os: Getter<T>, protected binder: EventBinderService) {\n    super(os, binder);\n    const target = os.get();\n    this.naShow = this.binder.bindEvent(target, 'show');\n    this.naHide = this.binder.bindEvent(target, 'hide');\n    this.naChange = this.binder.bindEvent(target, 'change');\n  }\n}\n","import { Input } from '@angular/core';\nimport { Getter } from './interfaces';\nimport { OverlayOptions } from './amap-overlay';\nimport { AMapShapeOverlay } from './amap-shape-overlay';\nimport { EventBinderService } from '../shared/event-binder.service';\n\nexport const PathOverlayOptions = [\n  ...OverlayOptions,\n  'visible',\n  'zIndex',\n  'strokeColor',\n  'strokeOpacity',\n  'strokeWeight',\n  'strokeStyle',\n  'strokeDasharray',\n  'lineJoin',\n  'lineCap',\n];\n\nexport class AMapPathOverlay<T extends AMap.EventEmitter> extends AMapShapeOverlay<T> {\n  // ---- Options ----\n  /**\n   * æ¯å¦å¯è§\n   */\n  @Input() visible: boolean;\n  /**\n   * è¦çç©å±çº§\n   */\n  @Input() zIndex: number;\n  /**\n   * æè¾¹çº¿æ¡é¢è²\n   */\n  @Input() strokeColor: string;\n  /**\n   * æè¾¹çº¿æ¡éæåº¦\n   */\n  @Input() strokeOpacity: number;\n  /**\n   * æè¾¹å®½åº¦\n   */\n  @Input() strokeWeight: number;\n  /**\n   * æè¾¹æ ·å¼\n   */\n  @Input() strokeStyle: AMap.StrokeStyle;\n  /**\n   * èçº¿é´é\n   */\n  @Input() strokeDasharray: number[];\n  /**\n   * æçº¿æç¹çç»å¶æ ·å¼\n   */\n  @Input() lineJoin: AMap.StrokeLineJoin;\n  /**\n   * æçº¿ä¸¤ç«¯çº¿å¸½çç»å¶æ ·å¼\n   */\n  @Input() lineCap: AMap.StrokeLineCap;\n\n  constructor(protected os: Getter<T>, protected binder: EventBinderService) {\n    super(os, binder);\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { ReplaySubject, zip } from 'rxjs';\nimport { map, switchMapTo } from 'rxjs/operators';\nimport { AMapService } from '../../shared/amap.service';\nimport { LoggerService } from '../../shared/logger/logger.service';\nimport { PluginLoaderService } from '../../shared/plugin-loader.service';\nimport { Getter } from '../../base/interfaces';\ndeclare const AMap: any;\n\nconst TAG = 'AmapPolyline';\n\n@Injectable()\nexport class AmapPolylineService implements Getter<AMap.Polyline> {\n  private polyline: any;\n  private polyline$ = new ReplaySubject<any>(1);\n  private editor: any;\n  private editor$ = new ReplaySubject<any>(1);\n\n  constructor(\n    private amaps: AMapService,\n    private logger: LoggerService,\n    private ngZone: NgZone,\n    private plugins: PluginLoaderService,\n  ) {}\n\n  /**\n   * è·åæçº¿\n   */\n  get() {\n    return this.polyline$.asObservable();\n  }\n\n  /**\n   * åå»ºæçº¿ AMap.Polyline\n   * @param options éé¡¹\n   */\n  create(options: AMap.Polyline.Options) {\n    return this.amaps.get().pipe(\n      map(m => {\n        options.map = m;\n        this.polyline = this.ngZone.runOutsideAngular(() => new AMap.Polyline(options));\n        this.logger.d(TAG, 'new Polyline created.');\n        this.polyline$.next(this.polyline);\n        this.polyline$.complete();\n        return this.polyline;\n      }),\n    );\n  }\n\n  /**\n   * éæ¯æçº¿\n   */\n  destroy() {\n    this.get().subscribe(m => {\n      m.setMap(null);\n      this.logger.d(TAG, 'Polyline destroyed.');\n      this.polyline = null;\n    });\n  }\n\n  getEditor() {\n    // plugin is loading:\n    return this.editor$.asObservable();\n  }\n\n  /**\n   * å è½½ç¼è¾æä»¶\n   */\n  loadEditor() {\n    return this.plugins.load('AMap.PolyEditor');\n  }\n\n  /**\n   * åå»ºç¼è¾å¨\n   */\n  createEditor() {\n    return this.loadEditor().pipe(\n      switchMapTo(zip(this.amaps.get(), this.get())),\n      map(([m, p]) => {\n        this.editor = this.ngZone.runOutsideAngular(() => new AMap.PolyEditor(m, p));\n        this.logger.d(TAG, 'new PolyEditor created.');\n        this.editor$.next(this.editor);\n        this.editor$.complete();\n        return this.editor;\n      }),\n    );\n  }\n\n  /**\n   * å¼å³ç¼è¾å¨\n   * @param v å¼å³éé¡¹\n   */\n  toggleEditor(v: boolean) {\n    if (v && !this.editor) {\n      this.createEditor().subscribe(editor => editor.open());\n      return;\n    }\n\n    if (this.editor) {\n      if (v) {\n        this.editor.open();\n      } else {\n        this.editor.close();\n      }\n    }\n  }\n}\n","import {\n  Directive,\n  Input,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  SimpleChanges,\n  OnChanges,\n  NgZone,\n} from '@angular/core';\nimport { zip } from 'rxjs';\nimport { PathOverlayOptions, AMapPathOverlay } from '../../base/amap-path-overlay';\nimport { AmapPolylineService } from './amap-polyline.service';\nimport { LoggerService } from '../../shared/logger/logger.service';\nimport { EventBinderService } from '../../shared/event-binder.service';\nimport { getOptions, ChangeFilter } from '../../utils';\n\nconst TAG = 'amap-polyline';\nconst PolylineOptions = [\n  ...PathOverlayOptions,\n  'isOutline',\n  'outlineColor',\n  'geodesic',\n  'dirColor',\n  'borderWeight',\n  'showDir',\n  'path',\n];\n\n@Directive({\n  selector: 'amap-polyline',\n  exportAs: 'polyline',\n  providers: [AmapPolylineService],\n})\nexport class AmapPolylineDirective extends AMapPathOverlay<AMap.Polyline>\n  implements OnChanges, OnDestroy {\n  // ---- Options ----\n  /**\n   * çº¿æ¡æ¯å¦å¸¦æè¾¹\n   */\n  @Input() isOutline: boolean;\n  /**\n   * çº¿æ¡æè¾¹é¢è²\n   */\n  @Input() outlineColor: string;\n  /**\n   * æ¯å¦ç»å¶æå¤§å°çº¿\n   */\n  @Input() geodesic: boolean;\n  /**\n   * æ¹åç®­å¤´é¢è²\n   */\n  @Input() dirColor: string;\n  /**\n   * æè¾¹çå®½åº¦\n   */\n  @Input() borderWeight: number;\n  /**\n   * æ¯å¦å»¶è·¯å¾æ¾ç¤ºæ¹åç®­å¤´\n   */\n  @Input() showDir: boolean;\n  /**\n   * æçº¿çèç¹æ°ç»\n   */\n  @Input() path: AMap.LocationValue[];\n  /**\n   * é¢å¤: æ¯å¦éè\n   */\n  @Input() hidden = false;\n  /**\n   * é¢å¤: æ¯å¦å¼å¯ç¼è¾å¨\n   */\n  @Input() editor = false;\n  /**\n   * é¢å¤: ä¼è¦çå¶ä»å±æ§çéç½®æ¹å¼\n   */\n  @Input() options: AMap.Polyline.Options;\n\n  // directive events:\n  @Output() naReady = new EventEmitter();\n\n  // editor events:\n  @Output() naEditorAddNode: EventEmitter<any>;\n  @Output() naEditorRemoveNode: EventEmitter<any>;\n  @Output() naEditorAdjust: EventEmitter<any>;\n  @Output() naEditorEnd: EventEmitter<any>;\n\n  private inited = false;\n\n  constructor(\n    protected os: AmapPolylineService,\n    protected binder: EventBinderService,\n    private logger: LoggerService,\n    private ngZone: NgZone,\n  ) {\n    super(os, binder);\n    const editor = this.os.getEditor();\n    this.naEditorAddNode = this.binder.bindEvent(editor, 'addnode');\n    this.naEditorRemoveNode = this.binder.bindEvent(editor, 'removenode');\n    this.naEditorAdjust = this.binder.bindEvent(editor, 'adjust');\n    this.naEditorEnd = this.binder.bindEvent(editor, 'end');\n  }\n\n  ngOnDestroy() {\n    this.os.destroy();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const filter = ChangeFilter.of(changes);\n    const polyline = this.get();\n    if (!this.inited) {\n      this.logger.d(TAG, 'initializing ...');\n      const options = this.options || getOptions<AMap.Polyline.Options>(this, PolylineOptions);\n      this.logger.d(TAG, 'options:', options);\n      this.os.create(options).subscribe(m => {\n        this.ngZone.run(() => this.naReady.emit(m));\n        this.logger.d(TAG, 'polyline is ready.');\n      });\n      this.inited = true;\n    } else {\n      zip(filter.has<AMap.LocationValue[]>('path'), polyline).subscribe(([v, p]) => p.setPath(v));\n      zip(filter.has<AMap.Polyline.Options>('options'), polyline).subscribe(([v, p]) =>\n        p.setOptions(v || {}),\n      );\n      zip(filter.has<any>('extData'), polyline).subscribe(([v, p]) => p.setExtData(v));\n    }\n\n    zip(filter.has<boolean>('hidden'), polyline).subscribe(([v, p]) => (v ? p.hide() : p.show()));\n    filter.has<boolean>('editor').subscribe(v => this.os.toggleEditor(v));\n  }\n\n  /**\n   * è·åå·²åå»ºç AMap.Polyline å¯¹è±¡\n   */\n  get() {\n    return this.os.get();\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AMapService } from '../../shared/amap.service';\nimport { LoggerService } from '../../shared/logger/logger.service';\nimport { Getter } from '../../base/interfaces';\n\nconst TAG = 'AmapText';\n\n@Injectable()\nexport class AmapTextService implements Getter<AMap.Text> {\n  private text: AMap.Text;\n  private text$ = new ReplaySubject<AMap.Text>(1);\n\n  constructor(private amaps: AMapService, private logger: LoggerService, private ngZone: NgZone) {}\n\n  /**\n   * è·åç¹æ è®°\n   */\n  get() {\n    return this.text$.asObservable();\n  }\n\n  /**\n   * åå»ºç¹æ è®° AMap.Text\n   * @param options éé¡¹\n   * @param addToMap æ¯å¦ç´æ¥å è¿å°å¾\n   */\n  create(options: AMap.Text.Options, addToMap = true) {\n    return this.amaps.get().pipe(\n      map(m => {\n        if (addToMap) {\n          options.map = m;\n        }\n        this.text = this.ngZone.runOutsideAngular(() => new AMap.Text(options));\n        this.logger.d(TAG, 'new text created.');\n        this.text$.next(this.text);\n        this.text$.complete();\n        return this.text;\n      }),\n    );\n  }\n\n  /**\n   * éæ¯ç¹æ è®°\n   */\n  destroy() {\n    this.get().subscribe(m => {\n      m.setMap(null);\n      this.logger.d(TAG, 'text destroyed.');\n      this.text = null;\n    });\n  }\n}\n","import {\n  Component,\n  Input,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  SimpleChanges,\n  OnChanges,\n  ContentChildren,\n  QueryList,\n  AfterContentInit,\n  ElementRef,\n  NgZone,\n} from '@angular/core';\nimport { zip, Subscription } from 'rxjs';\nimport { AmapTextService } from './amap-text.service';\nimport { LoggerService } from '../../shared/logger/logger.service';\nimport { AMapOverlay, OverlayOptions } from '../../base/amap-overlay';\nimport { EventBinderService } from '../../shared/event-binder.service';\nimport { getOptions, ChangeFilter } from '../../utils';\nimport { IPixel, IIcon } from '../../interfaces';\nimport { PixelService } from '../../shared/pixel.service';\nimport { IconService } from '../../shared/icon.service';\nimport { AmapInfoWindowComponent } from '../amap-info-window/amap-info-window.component';\nimport { AMapService } from '../../shared/amap.service';\n\nconst TAG = 'amap-text';\nconst ALL_OPTIONS = [\n  ...OverlayOptions,\n  'text',\n  'position',\n  'anchor',\n  'offset',\n  'topWhenClick',\n  'raiseOnDrag',\n  'visible',\n  'zIndex',\n  'angle',\n  'autoRotation',\n  'animation',\n  'shadow',\n  'title',\n  'style',\n];\n\n@Component({\n  selector: 'amap-text',\n  exportAs: 'text',\n  templateUrl: './amap-text.component.html',\n  providers: [AmapTextService],\n})\nexport class AmapTextComponent extends AMapOverlay<AMap.Text>\n  implements OnChanges, OnDestroy, AfterContentInit {\n  // ---- Options ----\n  /**\n   * ç¹æ è®°æ¾ç¤ºåå®¹\n   */\n  @Input() text: string;\n  /**\n   * ç¹æ è®°å¨å°å¾ä¸æ¾ç¤ºçä½ç½®\n   */\n  @Input() position: AMap.LocationValue;\n  /**\n   * æ è®°éç¹\n   */\n  @Input() anchor: AMap.Marker.Anchor;\n  /**\n   * ç¹æ è®°æ¾ç¤ºä½ç½®åç§»é\n   */\n  @Input() offset: AMap.Pixel | IPixel;\n  /**\n   * é¼ æ ç¹å»æ¶markeræ¯å¦ç½®é¡¶\n   */\n  @Input() topWhenClick: boolean;\n  /**\n   * ææ½ç¹æ è®°æ¶æ¯å¦å¼å¯ç¹æ è®°ç¦»å¼å°å¾çææ\n   */\n  @Input() raiseOnDrag: boolean;\n  /**\n   * ç¹æ è®°æ¯å¦å¯è§\n   */\n  @Input() visible: boolean;\n  /**\n   * ç¹æ è®°çå å é¡ºåº\n   */\n  @Input() zIndex: number;\n  /**\n   * ç¹æ è®°çæè½¬è§åº¦\n   */\n  @Input() angle: number;\n  /**\n   * æ¯å¦èªå¨æè½¬\n   */\n  @Input() autoRotation: boolean;\n  /**\n   * ç¹æ è®°çå¨ç»ææ\n   */\n  @Input() animation: AMap.AnimationName;\n  /**\n   * ç¹æ è®°é´å½±\n   */\n  @Input() shadow: AMap.Icon | string | IIcon;\n  /**\n   * é¼ æ æ»è¿ç¹æ è®°æ¶çæå­æç¤º\n   */\n  @Input() title: string;\n  /**\n   * æ ·å¼\n   */\n  @Input() style: { [key: string]: string };\n  /**\n   * é¢å¤: æ¯å¦ç½®é¡¶\n   */\n  @Input() isTop: boolean;\n  /**\n   * é¢å¤: æ¯å¦éè\n   */\n  @Input() hidden = false;\n  /**\n   * é¢å¤: æ¯å¦åå«å¨ç¹èåä¸­\n   */\n  @Input() inCluster = false;\n  /**\n   * é¢å¤: ç¹å»æ¶æ¯å¦æ¾ç¤ºä¿¡æ¯çªä½\n   */\n  @Input() openInfoWindow = true;\n\n  // ---- Events ----\n  @Output() naReady = new EventEmitter();\n  @Output() naMouseOut: EventEmitter<any>;\n  @Output() naDragStart: EventEmitter<any>;\n  @Output() naDragging: EventEmitter<any>;\n  @Output() naDragEnd: EventEmitter<any>;\n  @Output() naMoving: EventEmitter<any>;\n  @Output() naMoveEnd: EventEmitter<any>;\n  @Output() naMoveAlong: EventEmitter<any>;\n\n  // amap info window:\n  @ContentChildren(AmapInfoWindowComponent)\n  infoWindowComponent = new QueryList<AmapInfoWindowComponent>();\n\n  private inited = false;\n  private subscription: Subscription;\n\n  constructor(\n    protected os: AmapTextService,\n    protected binder: EventBinderService,\n    private amaps: AMapService,\n    private el: ElementRef,\n    private pixels: PixelService,\n    private icons: IconService,\n    private logger: LoggerService,\n    private ngZone: NgZone,\n  ) {\n    super(os, binder);\n    const target = this.os.get();\n    this.naMouseOut = this.binder.bindEvent(target, 'mouseout');\n    this.naDragStart = this.binder.bindEvent(target, 'dragstart');\n    this.naDragging = this.binder.bindEvent(target, 'dragging');\n    this.naDragEnd = this.binder.bindEvent(target, 'dragend');\n    this.naMoving = this.binder.bindEvent(target, 'moving');\n    this.naMoveEnd = this.binder.bindEvent(target, 'moveend');\n    this.naMoveAlong = this.binder.bindEvent(target, 'movealong');\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n    this.os.destroy();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const filter = ChangeFilter.of(changes);\n    const marker = this.get();\n    if (!this.inited) {\n      // do not draw text marker when no poistion defined.\n      if (!this.position) {\n        return;\n      }\n      this.amaps.get().subscribe(() => {\n        this.logger.d(TAG, 'initializing ...');\n        // bind info window events:\n        this.subscription = this.binder.bindEvent(marker, 'click').subscribe(() => {\n          if (this.openInfoWindow) {\n            this.infoWindowComponent.forEach(w => w.open());\n          }\n        });\n        const el: HTMLElement = this.el.nativeElement.querySelector('.amap-text-content');\n        this.text = this.text ? this.text : el.innerText;\n        const options = getOptions<AMap.Text.Options>(this, ALL_OPTIONS);\n        if (this.shadow) {\n          options.shadow = this.icons.create(this.shadow);\n        }\n        if (this.offset) {\n          options.offset = this.pixels.create(this.offset);\n        }\n        this.logger.d(TAG, 'options:', options);\n        this.os.create(options).subscribe(m => {\n          this.ngZone.run(() => this.naReady.emit(m));\n          this.logger.d(TAG, 'marker is ready.');\n        });\n        this.inited = true;\n        this.updateInfoWindow();\n        this.updateInfoWindowPosition();\n      });\n    } else {\n      zip(filter.has<string | AMap.Icon>('shadow'), marker).subscribe(([v, m]) =>\n        m.setShadow(this.icons.create(v)),\n      );\n      zip(filter.has<AMap.Pixel | IPixel>('offset'), marker).subscribe(([v, m]) =>\n        m.setOffset(this.pixels.create(v)),\n      );\n      zip(filter.has<string>('title'), marker).subscribe(([v, m]) => m.setTitle(v));\n      zip(filter.has<any>('content'), marker).subscribe(([v, m]) => m.setContent(v));\n      zip(filter.has<any>('extData'), marker).subscribe(([v, m]) => m.setExtData(v));\n      zip(filter.has<boolean>('clickable'), marker).subscribe(([v, m]) => m.setClickable(!!v));\n      zip(filter.has<boolean>('draggable'), marker).subscribe(([v, m]) => m.setDraggable(!!v));\n      zip(filter.has<boolean>('visible'), marker).subscribe(([v, m]) => (v ? m.show() : m.hide()));\n      zip(filter.has<string>('cursor'), marker).subscribe(([v, m]) => m.setCursor(v));\n      zip(filter.has<AMap.AnimationName>('animation'), marker).subscribe(([v, m]) =>\n        m.setAnimation(v),\n      );\n      zip(filter.has<number>('angle'), marker).subscribe(([v, m]) => m.setAngle(v));\n      zip(filter.has<number>('zIndex'), marker).subscribe(([v, m]) => m.setzIndex(v));\n      zip(filter.notEmpty<AMap.LocationValue>('position'), marker).subscribe(([v, m]) =>\n        m.setPosition(v),\n      );\n      zip(filter.notEmpty<any>('style'), marker).subscribe(([v, m]) => m.setStyle(v));\n    }\n    zip(filter.has<boolean>('isTop'), marker).subscribe(([v, m]) => m.setTop(!!v));\n    zip(filter.has<boolean>('hidden'), marker).subscribe(([v, m]) => (v ? m.hide() : m.show()));\n  }\n\n  ngAfterContentInit() {\n    this.updateInfoWindow();\n    this.infoWindowComponent.changes.subscribe(() => this.updateInfoWindow());\n  }\n\n  private updateInfoWindow() {\n    if (this.infoWindowComponent && this.inited) {\n      if (this.infoWindowComponent.length > 1) {\n        this.logger.e(TAG, 'Expected no more than 1 info window.');\n        return;\n      }\n\n      const marker = this.os.get();\n      this.infoWindowComponent.forEach(component => {\n        component.hostMarker = marker;\n      });\n    }\n  }\n\n  private updateInfoWindowPosition() {\n    if (this.infoWindowComponent && this.inited) {\n      this.infoWindowComponent.forEach(component => {\n        component.toggleOpen();\n      });\n    }\n  }\n\n  /**\n   * è·åå·²åå»ºç AMap.Text å¯¹è±¡\n   */\n  get() {\n    return this.os.get();\n  }\n}\n","import { Input, Output, EventEmitter } from '@angular/core';\nimport { WithEditor } from './interfaces';\nimport { AMapPathOverlay, PathOverlayOptions } from './amap-path-overlay';\nimport { EventBinderService } from '../shared/event-binder.service';\n\nexport const PolygonOptions = [...PathOverlayOptions, 'fillColor', 'fillOpacity', 'path'];\n\nexport class AMapPolygon<\n  T extends AMap.EventEmitter,\n  E extends AMap.EventEmitter\n> extends AMapPathOverlay<T> {\n  // ---- Options ----\n  /**\n   * å¤è¾¹å½¢è½®å»çº¿çèç¹åæ æ°ç»\n   */\n  @Input() path?: AMap.LocationValue[] | AMap.LocationValue[][];\n  /**\n   * å¤è¾¹å½¢å¡«åé¢è²\n   */\n  @Input() fillColor?: string;\n  /**\n   * è¾¹å½¢å¡«åéæåº¦\n   */\n  @Input() fillOpacity?: number;\n  /**\n   * é¢å¤: æ¯å¦éè\n   */\n  @Input() hidden = false;\n  /**\n   * é¢å¤: æ¯å¦å¼å¯ç¼è¾å¨\n   */\n  @Input() editor = false;\n  /**\n   * é¢å¤: ä¼è¦çå¶ä»å±æ§çéç½®æ¹å¼\n   */\n  @Input() options: AMap.Polygon.Options;\n\n  // directive events:\n  @Output() naReady = new EventEmitter();\n\n  // editor events:\n  @Output() naEditorAddNode: EventEmitter<any>;\n  @Output() naEditorRemoveNode: EventEmitter<any>;\n  @Output() naEditorAdjust: EventEmitter<any>;\n  @Output() naEditorEnd: EventEmitter<any>;\n\n  constructor(protected os: WithEditor<T, E>, protected binder: EventBinderService) {\n    super(os, binder);\n    const editor = this.os.getEditor();\n    this.naEditorAddNode = this.binder.bindEvent(editor, 'addnode');\n    this.naEditorRemoveNode = this.binder.bindEvent(editor, 'removenode');\n    this.naEditorAdjust = this.binder.bindEvent(editor, 'adjust');\n    this.naEditorEnd = this.binder.bindEvent(editor, 'end');\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { ReplaySubject, zip } from 'rxjs';\nimport { map, switchMapTo } from 'rxjs/operators';\nimport { AMapService } from '../../shared/amap.service';\nimport { LoggerService } from '../../shared/logger/logger.service';\nimport { PluginLoaderService } from '../../shared/plugin-loader.service';\nimport { WithEditor } from '../../base/interfaces';\ndeclare const AMap: any;\n\nconst TAG = 'AmapPolygon';\n\n@Injectable()\nexport class AmapPolygonService implements WithEditor<AMap.Polygon, any> {\n  private polygon: any;\n  private polygon$ = new ReplaySubject<any>(1);\n  private editor: any;\n  private editor$ = new ReplaySubject<any>(1);\n\n  constructor(\n    private amaps: AMapService,\n    private logger: LoggerService,\n    private ngZone: NgZone,\n    private plugins: PluginLoaderService,\n  ) {}\n\n  /**\n   * è·åæçº¿\n   */\n  get() {\n    return this.polygon$.asObservable();\n  }\n\n  /**\n   * åå»ºæçº¿ AMap.Polygon\n   * @param options éé¡¹\n   */\n  create(options: AMap.Polygon.Options) {\n    return this.amaps.get().pipe(\n      map(m => {\n        options.map = m;\n        this.polygon = this.ngZone.runOutsideAngular(() => new AMap.Polygon(options));\n        this.logger.d(TAG, 'new Polygon created.');\n        this.polygon$.next(this.polygon);\n        this.polygon$.complete();\n        return this.polygon;\n      }),\n    );\n  }\n\n  /**\n   * éæ¯æçº¿\n   */\n  destroy() {\n    this.get().subscribe(m => {\n      m.setMap(null);\n      this.logger.d(TAG, 'Polygon destroyed.');\n      this.polygon = null;\n    });\n  }\n\n  getEditor() {\n    // plugin is loading:\n    return this.editor$.asObservable();\n  }\n\n  /**\n   * å è½½ç¼è¾æä»¶\n   */\n  loadEditor() {\n    return this.plugins.load('AMap.PolyEditor');\n  }\n\n  /**\n   * åå»ºç¼è¾å¨\n   */\n  createEditor() {\n    return this.loadEditor().pipe(\n      switchMapTo(zip(this.amaps.get(), this.get())),\n      map(([m, p]) => {\n        this.editor = this.ngZone.runOutsideAngular(() => new AMap.PolyEditor(m, p));\n        this.logger.d(TAG, 'new PolyEditor created.');\n        this.editor$.next(this.editor);\n        this.editor$.complete();\n        return this.editor;\n      }),\n    );\n  }\n\n  /**\n   * å¼å³ç¼è¾å¨\n   * @param v å¼å³éé¡¹\n   */\n  toggleEditor(v: boolean) {\n    if (v && !this.editor) {\n      this.createEditor().subscribe(editor => editor.open());\n      return;\n    }\n\n    if (this.editor) {\n      if (v) {\n        this.editor.open();\n      } else {\n        this.editor.close();\n      }\n    }\n  }\n}\n","import { Directive, OnDestroy, SimpleChanges, OnChanges, NgZone } from '@angular/core';\nimport { zip } from 'rxjs';\nimport { AMapPolygon, PolygonOptions } from '../../base/amap-polygon';\nimport { AmapPolygonService } from './amap-polygon.service';\nimport { LoggerService } from '../../shared/logger/logger.service';\nimport { EventBinderService } from '../../shared/event-binder.service';\nimport { getOptions, ChangeFilter } from '../../utils';\n\nconst TAG = 'amap-polygon';\n\n@Directive({\n  selector: 'amap-polygon',\n  exportAs: 'polygon',\n  providers: [AmapPolygonService],\n})\nexport class AmapPolygonDirective extends AMapPolygon<AMap.Polygon, any>\n  implements OnChanges, OnDestroy {\n  private inited = false;\n\n  constructor(\n    protected os: AmapPolygonService,\n    protected binder: EventBinderService,\n    private logger: LoggerService,\n    private ngZone: NgZone,\n  ) {\n    super(os, binder);\n  }\n\n  ngOnDestroy() {\n    this.os.destroy();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const filter = ChangeFilter.of(changes);\n    const polygon = this.get();\n    if (!this.inited) {\n      this.logger.d(TAG, 'initializing ...');\n      const options = this.options || getOptions<AMap.Polygon.Options>(this, PolygonOptions);\n      this.logger.d(TAG, 'options:', options);\n      this.os.create(options).subscribe(m => {\n        this.ngZone.run(() => this.naReady.emit(m));\n        this.logger.d(TAG, 'polygon is ready.');\n      });\n      this.inited = true;\n    } else {\n      zip(\n        filter.has<AMap.LocationValue[] | AMap.LocationValue[][]>('path'),\n        polygon,\n      ).subscribe(([v, p]) => p.setPath(v));\n      zip(filter.has<AMap.Polygon.Options>('options'), polygon).subscribe(([v, p]) =>\n        p.setOptions(v || {}),\n      );\n      zip(filter.has<any>('extData'), polygon).subscribe(([v, p]) => p.setExtData(v));\n    }\n\n    zip(filter.has<boolean>('hidden'), polygon).subscribe(([v, p]) => (v ? p.hide() : p.show()));\n    filter.has<boolean>('editor').subscribe(v => this.os.toggleEditor(v));\n  }\n\n  /**\n   * è·åå·²åå»ºç AMap.Polygon å¯¹è±¡\n   */\n  get() {\n    return this.os.get();\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { ReplaySubject, zip } from 'rxjs';\nimport { map, switchMapTo } from 'rxjs/operators';\nimport { AMapService } from '../../shared/amap.service';\nimport { LoggerService } from '../../shared/logger/logger.service';\nimport { PluginLoaderService } from '../../shared/plugin-loader.service';\nimport { Getter } from '../../base/interfaces';\ndeclare const AMap: any;\n\nconst TAG = 'AmapBezierCurve';\n\n@Injectable()\nexport class AmapBezierCurveService implements Getter<AMap.BezierCurve> {\n  private bezierCurve: any;\n  private bezierCurve$ = new ReplaySubject<any>(1);\n  private editor: any;\n  private editor$ = new ReplaySubject<any>(1);\n  private polyEditor: any;\n  private polyEditor$ = new ReplaySubject<any>(1);\n\n  constructor(\n    private amaps: AMapService,\n    private logger: LoggerService,\n    private ngZone: NgZone,\n    private plugins: PluginLoaderService,\n  ) {}\n\n  /**\n   * è·åè´çå°æ²çº¿\n   */\n  get() {\n    return this.bezierCurve$.asObservable();\n  }\n\n  /**\n   * åå»ºè´çå°æ²çº¿ AMap.BezierCurve\n   * @param options éé¡¹\n   */\n  create(options: AMap.BezierCurve.Options) {\n    return this.amaps.get().pipe(\n      map(m => {\n        options.map = m;\n        this.bezierCurve = this.ngZone.runOutsideAngular(() => new AMap.BezierCurve(options));\n        this.logger.d(TAG, 'new BezierCurve created.');\n        this.bezierCurve$.next(this.bezierCurve);\n        this.bezierCurve$.complete();\n        return this.bezierCurve;\n      }),\n    );\n  }\n\n  /**\n   * éæ¯è´çå°æ²çº¿\n   */\n  destroy() {\n    this.get().subscribe(m => {\n      m.setMap(null);\n      this.logger.d(TAG, 'BezierCurve destroyed.');\n      this.bezierCurve = null;\n    });\n  }\n\n  getEditor() {\n    // plugin is loading:\n    return this.editor$.asObservable();\n  }\n\n  getPolyEditor() {\n    return this.polyEditor$.asObservable();\n  }\n\n  /**\n   * å è½½ç¼è¾æä»¶\n   */\n  loadEditor() {\n    return this.plugins.load('AMap.BezierCurveEditor');\n  }\n\n  loadPolyEditor() {\n    return this.plugins.load('AMap.PolyEditor');\n  }\n\n  /**\n   * åå»ºç¼è¾å¨\n   */\n  createEditor() {\n    return this.loadEditor().pipe(\n      switchMapTo(zip(this.amaps.get(), this.get())),\n      map(([m, p]) => {\n        this.editor = this.ngZone.runOutsideAngular(() => new AMap.BezierCurveEditor(m, p));\n        this.logger.d(TAG, 'new BezierCurveEditor created.');\n        this.editor$.next(this.editor);\n        this.editor$.complete();\n        return this.editor;\n      }),\n    );\n  }\n\n  createPolyEditor() {\n    return this.loadPolyEditor().pipe(\n      switchMapTo(zip(this.amaps.get(), this.get())),\n      map(([m, p]) => {\n        this.polyEditor = this.ngZone.runOutsideAngular(() => new AMap.PolyEditor(m, p));\n        this.logger.d(TAG, 'new PolyEditor created.');\n        this.polyEditor$.next(this.polyEditor);\n        this.polyEditor$.complete();\n        return this.polyEditor;\n      }),\n    );\n  }\n\n  /**\n   * å¼å³ç¼è¾å¨\n   * @param v å¼å³éé¡¹\n   */\n  toggleEditor(v: boolean) {\n    if (v && !this.editor) {\n      this.createEditor().subscribe(editor => editor.open());\n      return;\n    }\n\n    if (this.editor) {\n      if (v) {\n        this.editor.open();\n      } else {\n        this.editor.close();\n      }\n    }\n  }\n\n  togglePolyEditor(v: boolean) {\n    if (v && !this.polyEditor) {\n      this.createPolyEditor().subscribe(editor => editor.open());\n      return;\n    }\n\n    if (this.polyEditor) {\n      if (v) {\n        this.polyEditor.open();\n      } else {\n        this.polyEditor.close();\n      }\n    }\n  }\n}\n","import {\n  Directive,\n  Input,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  SimpleChanges,\n  OnChanges,\n  NgZone,\n} from '@angular/core';\nimport { zip } from 'rxjs';\nimport { PathOverlayOptions, AMapPathOverlay } from '../../base/amap-path-overlay';\nimport { AmapBezierCurveService } from './amap-bezier-curve.service';\nimport { LoggerService } from '../../shared/logger/logger.service';\nimport { EventBinderService } from '../../shared/event-binder.service';\nimport { getOptions, ChangeFilter } from '../../utils';\n\nconst TAG = 'amap-bezier-curve';\nconst BezierCurveOptions = [\n  ...PathOverlayOptions,\n  'isOutline',\n  'outlineColor',\n  'dirColor',\n  'borderWeight',\n  'showDir',\n  'path',\n];\n\n@Directive({\n  selector: 'amap-bezier-curve',\n  exportAs: 'bezier-curve',\n  providers: [AmapBezierCurveService],\n})\nexport class AmapBezierCurveDirective extends AMapPathOverlay<AMap.BezierCurve>\n  implements OnChanges, OnDestroy {\n  // ---- Options ----\n  /**\n   * çº¿æ¡æ¯å¦å¸¦æè¾¹\n   */\n  @Input() isOutline: boolean;\n  /**\n   * çº¿æ¡æè¾¹é¢è²\n   */\n  @Input() outlineColor: string;\n  /**\n   * æ¹åç®­å¤´é¢è²\n   */\n  @Input() dirColor: string;\n  /**\n   * æè¾¹çå®½åº¦\n   */\n  @Input() borderWeight: number;\n  /**\n   * æ¯å¦å»¶è·¯å¾æ¾ç¤ºæ¹åç®­å¤´\n   */\n  @Input() showDir: boolean;\n  /**\n   * è´çå°æ²çº¿çè·¯å¾\n   */\n  @Input() path: Array<Array<number | string | Array<string | number>>>;\n  /**\n   * é¢å¤: æ¯å¦éè\n   */\n  @Input() hidden = false;\n  /**\n   * é¢å¤: æ¯å¦å¼å¯æ²çº¿ç¼è¾å¨\n   */\n  @Input() editor = false;\n  /**\n   * é¢å¤: æ¯å¦å¼å¯æçº¿ç¼è¾å¨\n   */\n  @Input() polyEditor = false;\n  /**\n   * é¢å¤: ä¼è¦çå¶ä»å±æ§çéç½®æ¹å¼\n   */\n  @Input() options: AMap.BezierCurve.Options;\n\n  // directive events:\n  @Output() naReady = new EventEmitter();\n\n  // editor events:\n  @Output() naEditorAddNode: EventEmitter<any>;\n  @Output() naEditorRemoveNode: EventEmitter<any>;\n  @Output() naEditorAdjust: EventEmitter<any>;\n  @Output() naEditorEnd: EventEmitter<any>;\n  @Output() naPolyEditorAddNode: EventEmitter<any>;\n  @Output() naPolyEditorRemoveNode: EventEmitter<any>;\n  @Output() naPolyEditorAdjust: EventEmitter<any>;\n  @Output() naPolyEditorEnd: EventEmitter<any>;\n\n  private inited = false;\n\n  constructor(\n    protected os: AmapBezierCurveService,\n    protected binder: EventBinderService,\n    private logger: LoggerService,\n    private ngZone: NgZone,\n  ) {\n    super(os, binder);\n    const editor = this.os.getEditor();\n    const polyEditor = this.os.getPolyEditor();\n    this.naEditorAddNode = this.binder.bindEvent(editor, 'addnode');\n    this.naEditorRemoveNode = this.binder.bindEvent(editor, 'removenode');\n    this.naEditorAdjust = this.binder.bindEvent(editor, 'adjust');\n    this.naEditorEnd = this.binder.bindEvent(editor, 'end');\n    this.naPolyEditorAddNode = this.binder.bindEvent(polyEditor, 'addnode');\n    this.naPolyEditorRemoveNode = this.binder.bindEvent(polyEditor, 'removenode');\n    this.naPolyEditorAdjust = this.binder.bindEvent(polyEditor, 'adjust');\n    this.naPolyEditorEnd = this.binder.bindEvent(polyEditor, 'end');\n  }\n\n  ngOnDestroy() {\n    this.os.destroy();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const filter = ChangeFilter.of(changes);\n    const bezierCurve = this.get();\n    if (!this.inited) {\n      this.logger.d(TAG, 'initializing ...');\n      const options =\n        this.options || getOptions<AMap.BezierCurve.Options>(this, BezierCurveOptions);\n      this.logger.d(TAG, 'options:', options);\n      this.os.create(options).subscribe(m => {\n        this.ngZone.run(() => this.naReady.emit(m));\n        this.logger.d(TAG, 'bezierCurve is ready.');\n      });\n      this.inited = true;\n    } else {\n      zip(\n        filter.has<Array<Array<number | string | Array<string | number>>>>('path'),\n        bezierCurve,\n      ).subscribe(([v, p]) => p.setPath(v));\n      zip(filter.has<AMap.BezierCurve.Options>('options'), bezierCurve).subscribe(([v, p]) =>\n        p.setOptions(v || {}),\n      );\n      zip(filter.has<any>('extData'), bezierCurve).subscribe(([v, p]) => p.setExtData(v));\n    }\n\n    zip(filter.has<boolean>('hidden'), bezierCurve).subscribe(([v, p]) =>\n      v ? p.hide() : p.show(),\n    );\n    filter.has<boolean>('editor').subscribe(v => this.os.toggleEditor(v));\n    filter.has<boolean>('polyEditor').subscribe(v => this.os.togglePolyEditor(v));\n  }\n\n  /**\n   * è·åå·²åå»ºç AMap.BezierCurve å¯¹è±¡\n   */\n  get() {\n    return this.os.get();\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { ReplaySubject, zip } from 'rxjs';\nimport { map, switchMapTo } from 'rxjs/operators';\nimport { AMapService } from '../../shared/amap.service';\nimport { LoggerService } from '../../shared/logger/logger.service';\nimport { PluginLoaderService } from '../../shared/plugin-loader.service';\nimport { Getter } from '../../base/interfaces';\ndeclare const AMap: any;\n\nconst TAG = 'AmapRectangle';\n\n@Injectable()\nexport class AmapRectangleService implements Getter<AMap.Rectangle> {\n  private rectangle: any;\n  private rectangle$ = new ReplaySubject<any>(1);\n  private editor: any;\n  private editor$ = new ReplaySubject<any>(1);\n\n  constructor(\n    private amaps: AMapService,\n    private logger: LoggerService,\n    private ngZone: NgZone,\n    private plugins: PluginLoaderService,\n  ) {}\n\n  /**\n   * è·åç©å½¢\n   */\n  get() {\n    return this.rectangle$.asObservable();\n  }\n\n  /**\n   * åå»ºç©å½¢ AMap.Rectangle\n   * @param options éé¡¹\n   */\n  create(options: AMap.Rectangle.Options) {\n    return this.amaps.get().pipe(\n      map(m => {\n        options.map = m;\n        this.rectangle = this.ngZone.runOutsideAngular(() => new AMap.Rectangle(options));\n        this.logger.d(TAG, 'new Rectangle created.');\n        this.rectangle$.next(this.rectangle);\n        this.rectangle$.complete();\n        return this.rectangle;\n      }),\n    );\n  }\n\n  /**\n   * éæ¯ç©å½¢\n   */\n  destroy() {\n    this.get().subscribe(m => {\n      m.setMap(null);\n      this.logger.d(TAG, 'Rectangle destroyed.');\n      this.rectangle = null;\n    });\n  }\n\n  getEditor() {\n    // plugin is loading:\n    return this.editor$.asObservable();\n  }\n\n  /**\n   * å è½½ç¼è¾æä»¶\n   */\n  loadEditor() {\n    return this.plugins.load('AMap.RectangleEditor');\n  }\n\n  /**\n   * åå»ºç¼è¾å¨\n   */\n  createEditor() {\n    return this.loadEditor().pipe(\n      switchMapTo(zip(this.amaps.get(), this.get())),\n      map(([m, p]) => {\n        this.editor = this.ngZone.runOutsideAngular(() => new AMap.RectangleEditor(m, p));\n        this.logger.d(TAG, 'new RectangleEditor created.');\n        this.editor$.next(this.editor);\n        this.editor$.complete();\n        return this.editor;\n      }),\n    );\n  }\n\n  /**\n   * å¼å³ç¼è¾å¨\n   * @param v å¼å³éé¡¹\n   */\n  toggleEditor(v: boolean) {\n    if (v && !this.editor) {\n      this.createEditor().subscribe(editor => editor.open());\n      return;\n    }\n\n    if (this.editor) {\n      if (v) {\n        this.editor.open();\n      } else {\n        this.editor.close();\n      }\n    }\n  }\n}\n","import { Input, Directive, OnDestroy, SimpleChanges, OnChanges, NgZone } from '@angular/core';\nimport { zip } from 'rxjs';\nimport { AMapPolygon, PolygonOptions } from '../../base/amap-polygon';\nimport { AmapRectangleService } from './amap-rectangle.service';\nimport { LoggerService } from '../../shared/logger/logger.service';\nimport { EventBinderService } from '../../shared/event-binder.service';\nimport { getOptions, ChangeFilter } from '../../utils';\n\nconst TAG = 'amap-rectangle';\nconst RectangleOptions = [...PolygonOptions, 'bounds'];\n\n@Directive({\n  selector: 'amap-rectangle',\n  exportAs: 'rectangle',\n  providers: [AmapRectangleService],\n})\nexport class AmapRectangleDirective extends AMapPolygon<AMap.Rectangle, any>\n  implements OnChanges, OnDestroy {\n  // ---- Options ----\n  /**\n   * ç©å½¢çèå´\n   */\n  @Input() bounds?: AMap.Bounds;\n  /**\n   * é¢å¤: ä¼è¦çå¶ä»å±æ§çéç½®æ¹å¼\n   */\n  @Input() options: AMap.Rectangle.Options;\n\n  private inited = false;\n\n  constructor(\n    protected os: AmapRectangleService,\n    protected binder: EventBinderService,\n    private logger: LoggerService,\n    private ngZone: NgZone,\n  ) {\n    super(os, binder);\n  }\n\n  ngOnDestroy() {\n    this.os.destroy();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const filter = ChangeFilter.of(changes);\n    const rectangle = this.get();\n    if (!this.inited) {\n      this.logger.d(TAG, 'initializing ...');\n      const options = this.options || getOptions<AMap.Rectangle.Options>(this, RectangleOptions);\n      this.logger.d(TAG, 'options:', options);\n      this.os.create(options).subscribe(m => {\n        this.ngZone.run(() => this.naReady.emit(m));\n        this.logger.d(TAG, 'rectangle is ready.');\n      });\n      this.inited = true;\n    } else {\n      zip(\n        filter.has<AMap.LocationValue[] | AMap.LocationValue[][]>('path'),\n        rectangle,\n      ).subscribe(([v, p]) => p.setPath(v));\n      zip(filter.has<AMap.Rectangle.Options>('options'), rectangle).subscribe(([v, p]) =>\n        p.setOptions(v || {}),\n      );\n      zip(filter.has<AMap.Bounds>('bounds'), rectangle).subscribe(([v, p]) => p.setBounds(v));\n      zip(filter.has<any>('extData'), rectangle).subscribe(([v, p]) => p.setExtData(v));\n    }\n\n    zip(filter.has<boolean>('hidden'), rectangle).subscribe(([v, p]) => (v ? p.hide() : p.show()));\n    filter.has<boolean>('editor').subscribe(v => this.os.toggleEditor(v));\n  }\n\n  /**\n   * è·åå·²åå»ºç AMap.Rectangle å¯¹è±¡\n   */\n  get() {\n    return this.os.get();\n  }\n}\n","import { Input, Output, EventEmitter } from '@angular/core';\nimport { Getter } from './interfaces';\nimport { AMapShapeOverlay } from './amap-shape-overlay';\nimport { EventBinderService } from '../shared/event-binder.service';\n\nexport const CircleOptions = [\n  'zIndex',\n  'center',\n  'bubble',\n  'cursor',\n  'radius',\n  'strokeColor',\n  'strokeOpacity',\n  'strokeWeight',\n  'fillColor',\n  'fillOpacity',\n  'strokeStyle',\n  'extData',\n  'strokeDasharray',\n];\n\nexport class AMapCircle<T extends AMap.EventEmitter> extends AMapShapeOverlay<T> {\n  // ---- Options ----\n  /**\n   * å±å é¡ºåºï¼é»è®¤zIndex:10\n   */\n  @Input() zIndex: number;\n  /**\n   * åå¿ä½ç½®\n   */\n  @Input() center: AMap.LocationValue;\n  /**\n   * ååå¾ï¼åä½:ç±³\n   */\n  @Input() radius: number;\n  /**\n   * çº¿æ¡é¢è²ï¼ä½¿ç¨16è¿å¶é¢è²ä»£ç èµå¼ãé»è®¤å¼ä¸º#006600\n   */\n  @Input() strokeColor: string;\n  /**\n   * è½®å»çº¿éæåº¦ï¼åå¼èå´[0,1]ï¼0è¡¨ç¤ºå®å¨éæï¼1è¡¨ç¤ºä¸éæãé»è®¤ä¸º0.9\n   */\n  @Input() strokeOpacity: number;\n  /**\n   * è½®å»çº¿å®½åº¦\n   */\n  @Input() strokeWeight: number;\n  /**\n   * åå½¢å¡«åé¢è²,ä½¿ç¨16è¿å¶é¢è²ä»£ç èµå¼ãé»è®¤å¼ä¸º#006600\n   */\n  @Input() fillColor: string;\n  /**\n   * åå½¢å¡«åéæåº¦ï¼åå¼èå´[0,1]ï¼0è¡¨ç¤ºå®å¨éæï¼1è¡¨ç¤ºä¸éæãé»è®¤ä¸º0.9\n   */\n  @Input() fillOpacity: number;\n  /**\n   * è½®å»çº¿æ ·å¼ï¼å®çº¿:solidï¼èçº¿:dashed\n   */\n  @Input() strokeStyle: AMap.StrokeStyle;\n  /**\n   * å¾åå½¢ç¶è½®å»çèçº¿åé´éçæ ·å¼\n   */\n  @Input() strokeDasharray: number[];\n\n  /**\n   * é¢å¤: æ¯å¦éè\n   */\n  @Input() hidden = false;\n  /**\n   * é¢å¤: æ¯å¦å¼å¯ç¼è¾å¨\n   */\n  @Input() editor = false;\n  /**\n   * é¢å¤: ä¼è¦çå¶ä»å±æ§çéç½®æ¹å¼\n   */\n  @Input() options: AMap.Polyline.Options;\n\n  // directive events:\n  @Output() naReady = new EventEmitter();\n\n  constructor(protected os: Getter<T>, protected binder: EventBinderService) {\n    super(os, binder);\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { ReplaySubject, zip } from 'rxjs';\nimport { map, switchMapTo } from 'rxjs/operators';\nimport { AMapService } from '../../shared/amap.service';\nimport { LoggerService } from '../../shared/logger/logger.service';\nimport { PluginLoaderService } from '../../shared/plugin-loader.service';\nimport { Getter } from '../../base/interfaces';\ndeclare const AMap: any;\n\nconst TAG = 'AmapCircle';\n\n@Injectable()\nexport class AmapCircleService implements Getter<AMap.Circle> {\n  private circle: any;\n  private circle$ = new ReplaySubject<any>(1);\n  private editor: any;\n  private editor$ = new ReplaySubject<any>(1);\n\n  constructor(\n    private amaps: AMapService,\n    private logger: LoggerService,\n    private ngZone: NgZone,\n    private plugins: PluginLoaderService,\n  ) {}\n\n  /**\n   * è·ååå½¢\n   */\n  get() {\n    return this.circle$.asObservable();\n  }\n\n  /**\n   * åå»ºåå½¢ AMap.Circle\n   * @param options éé¡¹\n   */\n  create(options: AMap.Circle.Options) {\n    return this.amaps.get().pipe(\n      map(m => {\n        options.map = m;\n        this.circle = this.ngZone.runOutsideAngular(() => new AMap.Circle(options));\n        this.logger.d(TAG, 'new Circle created.');\n        this.circle$.next(this.circle);\n        this.circle$.complete();\n        return this.circle;\n      }),\n    );\n  }\n\n  /**\n   * éæ¯åå½¢\n   */\n  destroy() {\n    this.get().subscribe(m => {\n      m.setMap(null);\n      this.logger.d(TAG, 'Circle destroyed.');\n      this.circle = null;\n    });\n  }\n\n  getEditor() {\n    // plugin is loading:\n    return this.editor$.asObservable();\n  }\n\n  /**\n   * å è½½ç¼è¾æä»¶\n   */\n  loadEditor() {\n    return this.plugins.load('AMap.CircleEditor');\n  }\n\n  /**\n   * åå»ºç¼è¾å¨\n   */\n  createEditor() {\n    return this.loadEditor().pipe(\n      switchMapTo(zip(this.amaps.get(), this.get())),\n      map(([m, p]) => {\n        this.editor = this.ngZone.runOutsideAngular(() => new AMap.CircleEditor(m, p));\n        this.logger.d(TAG, 'new CircleEditor created.');\n        this.editor$.next(this.editor);\n        this.editor$.complete();\n        return this.editor;\n      }),\n    );\n  }\n\n  /**\n   * å¼å³ç¼è¾å¨\n   * @param v å¼å³éé¡¹\n   */\n  toggleEditor(v: boolean) {\n    if (v && !this.editor) {\n      this.createEditor().subscribe(editor => editor.open());\n      return;\n    }\n\n    if (this.editor) {\n      if (v) {\n        this.editor.open();\n      } else {\n        this.editor.close();\n      }\n    }\n  }\n}\n","import {\n  Output,\n  EventEmitter,\n  Directive,\n  OnDestroy,\n  SimpleChanges,\n  OnChanges,\n  NgZone,\n} from '@angular/core';\nimport { zip } from 'rxjs';\nimport { AMapCircle, CircleOptions } from '../../base/amap-circle';\nimport { AmapCircleService } from './amap-circle.service';\nimport { LoggerService } from '../../shared/logger/logger.service';\nimport { EventBinderService } from '../../shared/event-binder.service';\nimport { getOptions, ChangeFilter } from '../../utils';\n\nconst TAG = 'amap-circle';\n\n@Directive({\n  selector: 'amap-circle',\n  exportAs: 'circle',\n  providers: [AmapCircleService],\n})\nexport class AmapCircleDirective extends AMapCircle<AMap.Circle> implements OnChanges, OnDestroy {\n  // editor events:\n  @Output() naEditorAddNode: EventEmitter<any>;\n  @Output() naEditorRemoveNode: EventEmitter<any>;\n  @Output() naEditorAdjust: EventEmitter<any>;\n  @Output() naEditorEnd: EventEmitter<any>;\n\n  private inited = false;\n\n  constructor(\n    protected os: AmapCircleService,\n    protected binder: EventBinderService,\n    private logger: LoggerService,\n    private ngZone: NgZone,\n  ) {\n    super(os, binder);\n    const editor = this.os.getEditor();\n    this.naEditorAddNode = this.binder.bindEvent(editor, 'addnode');\n    this.naEditorRemoveNode = this.binder.bindEvent(editor, 'removenode');\n    this.naEditorAdjust = this.binder.bindEvent(editor, 'adjust');\n    this.naEditorEnd = this.binder.bindEvent(editor, 'end');\n  }\n\n  ngOnDestroy() {\n    this.os.destroy();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const filter = ChangeFilter.of(changes);\n    const circle = this.get();\n    if (!this.inited) {\n      this.logger.d(TAG, 'initializing ...');\n      const options = this.options || getOptions<AMap.Circle.Options>(this, CircleOptions);\n      this.logger.d(TAG, 'options:', options);\n      this.os.create(options).subscribe(m => {\n        this.ngZone.run(() => this.naReady.emit(m));\n        this.logger.d(TAG, 'circle is ready.');\n      });\n      this.inited = true;\n    } else {\n      zip(filter.has<AMap.LocationValue>('center'), circle).subscribe(([v, p]) => p.setCenter(v));\n      zip(filter.has<AMap.Circle.Options>('options'), circle).subscribe(([v, p]) =>\n        p.setOptions(v || {}),\n      );\n      zip(filter.has<number>('radius'), circle).subscribe(([v, p]) => p.setRadius(v));\n      zip(filter.has<any>('extData'), circle).subscribe(([v, p]) => p.setExtData(v));\n    }\n\n    zip(filter.has<boolean>('hidden'), circle).subscribe(([v, p]) => (v ? p.hide() : p.show()));\n    filter.has<boolean>('editor').subscribe(v => this.os.toggleEditor(v));\n  }\n\n  /**\n   * è·åå·²åå»ºç AMap.Circle å¯¹è±¡\n   */\n  get() {\n    return this.os.get();\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AMapService } from '../../shared/amap.service';\nimport { LoggerService } from '../../shared/logger/logger.service';\nimport { Getter } from '../../base/interfaces';\n\nconst TAG = 'AmapCircleMarker';\n\n@Injectable()\nexport class AmapCircleMarkerService implements Getter<AMap.CircleMarker> {\n  private circle: AMap.CircleMarker;\n  private circle$ = new ReplaySubject<AMap.CircleMarker>(1);\n\n  constructor(private amaps: AMapService, private logger: LoggerService, private ngZone: NgZone) {}\n\n  /**\n   * è·ååç¹æ è®°\n   */\n  get() {\n    return this.circle$.asObservable();\n  }\n\n  /**\n   * åå»ºåç¹æ è®° AMap.CircleMarker\n   * @param options éé¡¹\n   */\n  create(options: AMap.Circle.Options) {\n    return this.amaps.get().pipe(\n      map(m => {\n        options.map = m;\n        this.circle = this.ngZone.runOutsideAngular(() => new AMap.CircleMarker(options));\n        this.logger.d(TAG, 'new CircleMarker created.');\n        this.circle$.next(this.circle);\n        this.circle$.complete();\n        return this.circle;\n      }),\n    );\n  }\n\n  /**\n   * éæ¯åç¹æ è®°\n   */\n  destroy() {\n    this.get().subscribe(m => {\n      m.setMap(null);\n      this.logger.d(TAG, 'CircleMarker destroyed.');\n      this.circle = null;\n    });\n  }\n}\n","import {\n  Output,\n  EventEmitter,\n  Directive,\n  OnDestroy,\n  SimpleChanges,\n  OnChanges,\n  NgZone,\n} from '@angular/core';\nimport { zip } from 'rxjs';\nimport { AMapCircle, CircleOptions } from '../../base/amap-circle';\nimport { AmapCircleMarkerService } from './amap-circle-marker.service';\nimport { LoggerService } from '../../shared/logger/logger.service';\nimport { EventBinderService } from '../../shared/event-binder.service';\nimport { getOptions, ChangeFilter } from '../../utils';\n\nconst TAG = 'amap-circle-marker';\n\n@Directive({\n  selector: 'amap-circle-marker',\n  exportAs: 'circle-marker',\n  providers: [AmapCircleMarkerService],\n})\nexport class AmapCircleMarkerDirective extends AMapCircle<AMap.CircleMarker>\n  implements OnChanges, OnDestroy {\n  private inited = false;\n\n  constructor(\n    protected os: AmapCircleMarkerService,\n    protected binder: EventBinderService,\n    private logger: LoggerService,\n    private ngZone: NgZone,\n  ) {\n    super(os, binder);\n  }\n\n  ngOnDestroy() {\n    this.os.destroy();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const filter = ChangeFilter.of(changes);\n    const circle = this.get();\n    if (!this.inited) {\n      this.logger.d(TAG, 'initializing ...');\n      const options = this.options || getOptions<AMap.Circle.Options>(this, CircleOptions);\n      this.logger.d(TAG, 'options:', options);\n      this.os.create(options).subscribe(m => {\n        this.ngZone.run(() => this.naReady.emit(m));\n        this.logger.d(TAG, 'circle marker is ready.');\n      });\n      this.inited = true;\n    } else {\n      zip(filter.has<AMap.LocationValue>('center'), circle).subscribe(([v, p]) => p.setCenter(v));\n      zip(filter.has<AMap.Circle.Options>('options'), circle).subscribe(([v, p]) =>\n        p.setOptions(v || {}),\n      );\n      zip(filter.has<number>('radius'), circle).subscribe(([v, p]) => p.setRadius(v));\n      zip(filter.has<any>('extData'), circle).subscribe(([v, p]) => p.setExtData(v));\n    }\n\n    zip(filter.has<boolean>('hidden'), circle).subscribe(([v, p]) => (v ? p.hide() : p.show()));\n  }\n\n  /**\n   * è·åå·²åå»ºç AMap.CircleMarker å¯¹è±¡\n   */\n  get() {\n    return this.os.get();\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { ReplaySubject, zip } from 'rxjs';\nimport { map, switchMapTo } from 'rxjs/operators';\nimport { AMapService } from '../../shared/amap.service';\nimport { LoggerService } from '../../shared/logger/logger.service';\nimport { PluginLoaderService } from '../../shared/plugin-loader.service';\nimport { WithEditor } from '../../base/interfaces';\ndeclare const AMap: any;\n\nconst TAG = 'AmapEllipse';\n\n@Injectable()\nexport class AmapEllipseService implements WithEditor<AMap.Ellipse, any> {\n  private ellipse: any;\n  private ellipse$ = new ReplaySubject<any>(1);\n  private editor: any;\n  private editor$ = new ReplaySubject<any>(1);\n\n  constructor(\n    private amaps: AMapService,\n    private logger: LoggerService,\n    private ngZone: NgZone,\n    private plugins: PluginLoaderService,\n  ) {}\n\n  /**\n   * è·åæ¤­å\n   */\n  get() {\n    return this.ellipse$.asObservable();\n  }\n\n  /**\n   * åå»ºæ¤­å AMap.Ellipse\n   * @param options éé¡¹\n   */\n  create(options: AMap.Ellipse.Options) {\n    return this.amaps.get().pipe(\n      map(m => {\n        options.map = m;\n        this.ellipse = this.ngZone.runOutsideAngular(() => new AMap.Ellipse(options));\n        this.logger.d(TAG, 'new Ellipse created.');\n        this.ellipse$.next(this.ellipse);\n        this.ellipse$.complete();\n        return this.ellipse;\n      }),\n    );\n  }\n\n  /**\n   * éæ¯æ¤­å\n   */\n  destroy() {\n    this.get().subscribe(m => {\n      m.setMap(null);\n      this.logger.d(TAG, 'Ellipse destroyed.');\n      this.ellipse = null;\n    });\n  }\n\n  getEditor() {\n    // plugin is loading:\n    return this.editor$.asObservable();\n  }\n\n  /**\n   * å è½½ç¼è¾æä»¶\n   */\n  loadEditor() {\n    return this.plugins.load('AMap.EllipseEditor');\n  }\n\n  /**\n   * åå»ºç¼è¾å¨\n   */\n  createEditor() {\n    return this.loadEditor().pipe(\n      switchMapTo(zip(this.amaps.get(), this.get())),\n      map(([m, p]) => {\n        this.editor = this.ngZone.runOutsideAngular(() => new AMap.EllipseEditor(m, p));\n        this.logger.d(TAG, 'new EllipseEditor created.');\n        this.editor$.next(this.editor);\n        this.editor$.complete();\n        return this.editor;\n      }),\n    );\n  }\n\n  /**\n   * å¼å³ç¼è¾å¨\n   * @param v å¼å³éé¡¹\n   */\n  toggleEditor(v: boolean) {\n    if (v && !this.editor) {\n      this.createEditor().subscribe(editor => editor.open());\n      return;\n    }\n\n    if (this.editor) {\n      if (v) {\n        this.editor.open();\n      } else {\n        this.editor.close();\n      }\n    }\n  }\n}\n","import { Input, Directive, OnDestroy, SimpleChanges, OnChanges, NgZone } from '@angular/core';\nimport { zip } from 'rxjs';\nimport { AMapPolygon, PolygonOptions } from '../../base/amap-polygon';\nimport { AmapEllipseService } from './amap-ellipse.service';\nimport { LoggerService } from '../../shared/logger/logger.service';\nimport { EventBinderService } from '../../shared/event-binder.service';\nimport { getOptions, ChangeFilter } from '../../utils';\n\nconst TAG = 'amap-ellipse';\nconst EllipseOptions = [...PolygonOptions, 'center', 'radius'];\n\n@Directive({\n  selector: 'amap-ellipse',\n  exportAs: 'ellipse',\n  providers: [AmapEllipseService],\n})\nexport class AmapEllipseDirective extends AMapPolygon<AMap.Ellipse, any>\n  implements OnChanges, OnDestroy {\n  // ---- Options ----\n  /**\n   * æ¤­åçä¸­å¿\n   */\n  @Input() center: AMap.LocationValue;\n  /**\n   * æ¤­ååå¾\n   */\n  @Input() radius: [number, number];\n  /**\n   * é¢å¤: ä¼è¦çå¶ä»å±æ§çéç½®æ¹å¼\n   */\n  @Input() options: AMap.Ellipse.Options;\n\n  private inited = false;\n\n  constructor(\n    protected os: AmapEllipseService,\n    protected binder: EventBinderService,\n    private logger: LoggerService,\n    private ngZone: NgZone,\n  ) {\n    super(os, binder);\n  }\n\n  ngOnDestroy() {\n    this.os.destroy();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const filter = ChangeFilter.of(changes);\n    const ellipse = this.get();\n    if (!this.inited) {\n      this.logger.d(TAG, 'initializing ...');\n      const options = this.options || getOptions<AMap.Ellipse.Options>(this, EllipseOptions);\n      this.logger.d(TAG, 'options:', options);\n      this.os.create(options).subscribe(m => {\n        this.ngZone.run(() => this.naReady.emit(m));\n        this.logger.d(TAG, 'ellipse is ready.');\n      });\n      this.inited = true;\n    } else {\n      zip(filter.has<AMap.LocationValue>('center'), ellipse).subscribe(([v, p]) => p.setCenter(v));\n      zip(filter.has<AMap.Ellipse.Options>('options'), ellipse).subscribe(([v, p]) =>\n        p.setOptions(v || {}),\n      );\n      zip(filter.has<any>('extData'), ellipse).subscribe(([v, p]) => p.setExtData(v));\n    }\n\n    zip(filter.has<boolean>('hidden'), ellipse).subscribe(([v, p]) => (v ? p.hide() : p.show()));\n    filter.has<boolean>('editor').subscribe(v => this.os.toggleEditor(v));\n  }\n\n  /**\n   * è·åå·²åå»ºç AMap.Ellipse å¯¹è±¡\n   */\n  get() {\n    return this.os.get();\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { ReplaySubject, zip } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AMapService } from '../../shared/amap.service';\nimport { PluginLoaderService } from '../../shared/plugin-loader.service';\nimport { LoggerService } from '../../shared/logger/logger.service';\nimport { Getter } from '../../base/interfaces';\ndeclare const AMap: any;\n\nconst TAG = 'AmapToolBar';\n\nexport namespace AMapToolBar {\n  export interface Options {\n    /**\n     * ç¸å¯¹äºå°å¾å®¹å¨å·¦ä¸è§çåç§»é\n     */\n    offset?: AMap.Pixel;\n    /**\n     * æ§ä»¶åé ä½ç½®\n     * LT:å·¦ä¸è§;\n     * RT:å³ä¸è§;\n     * LB:å·¦ä¸è§;\n     * RB:å³ä¸è§;\n     */\n    position?: Position;\n    /**\n     * æ å°ºé®çæ¯å¦å¯è§\n     */\n    ruler?: boolean;\n    /**\n     * å®ä½å¤±è´¥åï¼æ¯å¦å¼å¯IPå®ä½\n     */\n    noIpLocate?: boolean;\n    /**\n     * æ¯å¦æ¾ç¤ºå®ä½æé®\n     */\n    locate?: boolean;\n    /**\n     * æ¯å¦ä½¿ç¨ç²¾ç®æ¨¡å¼\n     */\n    liteStyle?: boolean;\n    /**\n     * æ¹åé®çæ¯å¦å¯è§\n     */\n    direction?: boolean;\n    /**\n     * æ¯å¦èªå¨å®ä½ï¼å³å°å¾åå§åå è½½å®æåï¼æ¯å¦èªå¨å®ä½çç¨æ·æå¨å°ï¼ä»å¨æ¯æHTML5çæµè§å¨ä¸­ææ\n     */\n    autoPosition?: boolean;\n    /**\n     * èªå®ä¹å®ä½å¾æ ï¼å¼ä¸ºMarkerå¯¹è±¡\n     */\n    locationMarker?: AMap.Marker;\n    /**\n     * æ¯å¦ä½¿ç¨é«å¾·å®ä½sdkç¨æ¥è¾å©ä¼åå®ä½ææ\n     */\n    useNative?: boolean;\n    // internal\n    timeout?: number;\n  }\n  export type Position = 'LT' | 'RT' | 'LB' | 'RB';\n}\n\n@Injectable()\nexport class AmapToolBarService implements Getter<any> {\n  private toolBar: any;\n  private toolBar$ = new ReplaySubject<any>(1);\n\n  constructor(\n    private amaps: AMapService,\n    private plugin: PluginLoaderService,\n    private logger: LoggerService,\n    private ngZone: NgZone,\n  ) {}\n\n  /**\n   * è·åå·¥å·æ¡\n   */\n  get() {\n    return this.toolBar$.asObservable();\n  }\n\n  /**\n   * åå»ºå·¥å·æ¡ AMap.ToolBar\n   * @param options éé¡¹\n   */\n  create(options: AMapToolBar.Options) {\n    return zip(this.amaps.get(), this.plugin.load('AMap.ToolBar')).pipe(\n      map(([m]) => {\n        this.toolBar = this.ngZone.runOutsideAngular(() => new AMap.ToolBar(options));\n        this.logger.d(TAG, 'new toolBar created.');\n        m.addControl(this.toolBar);\n        this.toolBar$.next(this.toolBar);\n        this.toolBar$.complete();\n        return this.toolBar;\n      }),\n    );\n  }\n\n  /**\n   * éæ¯å·¥å·æ¡\n   */\n  destroy() {\n    zip(this.amaps.get(), this.get()).subscribe(([m, toolBar]) => {\n      m.removeControl(toolBar);\n      this.logger.d(TAG, 'toolBar destroyed.');\n      this.toolBar = null;\n    });\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { ReplaySubject, zip } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AMapService } from '../../shared/amap.service';\nimport { PluginLoaderService } from '../../shared/plugin-loader.service';\nimport { LoggerService } from '../../shared/logger/logger.service';\nimport { Getter } from '../../base/interfaces';\ndeclare const AMap: any;\n\nexport namespace AMapMarkerClusterer {\n  export interface StyleObject {\n    url?: string;\n    size?: AMap.Size;\n    offset?: AMap.Pixel;\n    imageOffset?: AMap.Pixel;\n    textColor?: string;\n    textSize?: number;\n  }\n\n  export interface Options {\n    /**\n     * èåè®¡ç®æ¶ç½æ ¼çåç´ å¤§å°ï¼é»è®¤60\n     */\n    gridSize?: number;\n    /**\n     * èåçæå°æ°éãé»è®¤å¼ä¸º2ï¼å³å°äº2ä¸ªç¹åä¸è½æä¸ºä¸ä¸ªèå\n     */\n    minClusterSize?: number;\n    /**\n     * æå¤§çèåçº§å«ï¼å¤§äºè¯¥çº§å«å°±ä¸è¿è¡ç¸åºçèåãé»è®¤å¼ä¸º18\n     */\n    maxZoom?: number;\n    /**\n     * èåç¹çå¾æ ä½ç½®æ¯å¦æ¯ææèååç¹çä¸­å¿ç¹ãé»è®¤ä¸ºå¦\n     */\n    averageCenter?: boolean;\n    /**\n     * æå®èååçç¹æ è®°çå¾æ æ ·å¼ï¼å¯ç¼ºçï¼ç¼ºçæ¶ä¸ºé»è®¤æ ·å¼\n     */\n    styles?: StyleObject[];\n    /**\n     * è¯¥æ¹æ³ç¨æ¥å®ç°èåç¹çèªå®ä¹ç»å¶\n     */\n    renderClusterMarker?: (obj: {\n      count: number;\n      markers: AMap.Marker<any>[];\n      marker: AMap.Marker<any>;\n    }) => void;\n    /**\n     * ç¹å»èåç¹æ¶ï¼æ¯å¦æ£å¼ï¼é»è®¤å¼ä¸ºï¼true\n     */\n    zoomOnClick?: boolean;\n  }\n}\n\nconst TAG = 'AmapMarkerCluster';\n\n@Injectable()\nexport class AmapMarkerClustererService implements Getter<any> {\n  private markerClusterer: any;\n  private markerClusterer$ = new ReplaySubject<any>(1);\n\n  constructor(\n    private amaps: AMapService,\n    private plugins: PluginLoaderService,\n    private logger: LoggerService,\n    private ngZone: NgZone,\n  ) {}\n\n  /**\n   * è·åç¹èå\n   */\n  get() {\n    return this.markerClusterer$.asObservable();\n  }\n\n  /**\n   * åå»ºç¹èå AMap.MarkerClusterer\n   * @param options éé¡¹\n   */\n  create(options: AMapMarkerClusterer.Options) {\n    return zip(this.amaps.get(), this.plugins.load('AMap.MarkerClusterer')).pipe(\n      map(([m]) => {\n        this.markerClusterer = this.ngZone.runOutsideAngular(\n          () => new AMap.MarkerClusterer(m, [], options),\n        );\n        this.logger.d(TAG, 'new markerClusterer created.');\n        this.markerClusterer$.next(this.markerClusterer);\n        this.markerClusterer$.complete();\n        return this.markerClusterer;\n      }),\n    );\n  }\n\n  /**\n   * éæ¯ç¹èå\n   */\n  destroy() {\n    this.get().subscribe(m => {\n      m.clearMarkers();\n      m.setMap(null);\n      this.logger.d(TAG, 'markerClusterer destroyed.');\n      this.markerClusterer = null;\n    });\n  }\n}\n","import {\n  Directive,\n  Input,\n  OnInit,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  SimpleChanges,\n  OnChanges,\n  NgZone,\n} from '@angular/core';\nimport { zip } from 'rxjs';\nimport { AmapToolBarService, AMapToolBar } from './amap-tool-bar.service';\nimport { LoggerService } from '../../shared/logger/logger.service';\nimport { EventBinderService } from '../../shared/event-binder.service';\nimport { getOptions, ChangeFilter } from '../../utils';\nimport { IPixel } from '../../interfaces';\nimport { PixelService } from '../../shared/pixel.service';\nimport { AMapService } from '../../shared/amap.service';\n\nconst TAG = 'amap-tool-bar';\nconst ToolBarOptions = [\n  'offset',\n  'position',\n  'ruler',\n  'noIpLocate',\n  'locate',\n  'liteStyle',\n  'direction',\n  'autoPosition',\n  'locationMarker',\n  'useNative',\n];\n\n@Directive({\n  selector: 'amap-tool-bar',\n  exportAs: 'tool-bar',\n  providers: [AmapToolBarService],\n})\nexport class AmapToolBarDirective implements OnInit, OnChanges, OnDestroy {\n  // ---- Options ----\n  /**\n   * ç¸å¯¹äºå°å¾å®¹å¨å·¦ä¸è§çåç§»é\n   */\n  @Input() offset: AMap.Pixel | IPixel;\n  /**\n   * æ§ä»¶åé ä½ç½®\n   * LT: å·¦ä¸è§\n   * RT: å³ä¸è§\n   * LB: å·¦ä¸è§\n   * RB: å³ä¸è§\n   */\n  @Input() position: AMapToolBar.Position;\n  /**\n   * æ å°ºé®çæ¯å¦å¯è§\n   */\n  @Input() ruler: boolean;\n  /**\n   * å®ä½å¤±è´¥åï¼æ¯å¦å¼å¯ IP å®ä½\n   */\n  @Input() noIpLocate: boolean;\n  /**\n   * æ¯å¦æ¾ç¤ºå®ä½æé®\n   */\n  @Input() locate: boolean;\n  /**\n   * æ¯å¦ä½¿ç¨ç²¾ç®æ¨¡å¼\n   */\n  @Input() liteStyle: boolean;\n  /**\n   * æ¹åé®çæ¯å¦å¯è§\n   */\n  @Input() direction: boolean;\n  /**\n   * æ¯å¦èªå¨å®ä½ï¼å³å°å¾åå§åå è½½å®æåï¼æ¯å¦èªå¨å®ä½çç¨æ·æå¨å°ï¼ä»å¨æ¯æ HTML5 çæµè§å¨ä¸­ææ\n   */\n  @Input() autoPosition: boolean;\n  /**\n   * èªå®ä¹å®ä½å¾æ ï¼å¼ä¸º Marker å¯¹è±¡\n   */\n  @Input() locationMarker: AMap.Marker;\n  /**\n   * æ¯å¦ä½¿ç¨é«å¾·å®ä½ SDK ç¨æ¥è¾å©ä¼åå®ä½ææ\n   */\n  @Input() useNative: boolean;\n  /**\n   * é¢å¤: æ¯å¦éè\n   */\n  @Input() hidden = false;\n\n  // amap-tool-bar events:\n  @Output() naReady = new EventEmitter();\n  @Output() naShow: EventEmitter<any>;\n  @Output() naHide: EventEmitter<any>;\n  @Output() naLocation: EventEmitter<any>;\n  @Output() naZoomChanged: EventEmitter<any>;\n\n  private inited = false;\n\n  constructor(\n    protected os: AmapToolBarService,\n    protected binder: EventBinderService,\n    private amaps: AMapService,\n    private pixels: PixelService,\n    private logger: LoggerService,\n    private ngZone: NgZone,\n  ) {\n    const target = this.os.get();\n    this.naShow = this.binder.bindEvent(target, 'show');\n    this.naHide = this.binder.bindEvent(target, 'hide');\n    this.naLocation = this.binder.bindEvent(target, 'location');\n    this.naZoomChanged = this.binder.bindEvent(target, 'zoomchanged');\n  }\n\n  ngOnDestroy() {\n    this.os.destroy();\n  }\n\n  ngOnInit() {\n    this.amaps.get().subscribe(() => {\n      this.logger.d(TAG, 'initializing ...');\n      const options = getOptions<AMapToolBar.Options>(this, ToolBarOptions);\n      if (this.offset) {\n        options.offset = this.pixels.create(this.offset);\n      }\n      this.logger.d(TAG, 'options:', options);\n      this.os.create(options).subscribe(m => {\n        this.ngZone.run(() => this.naReady.emit(m));\n        this.logger.d(TAG, 'toolbar is ready.');\n      });\n      this.inited = true;\n      this.get().subscribe(m => {\n        this.hidden ? m.hide() : m.show();\n      });\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const filter = ChangeFilter.of(changes);\n    const toolbar = this.get();\n    if (!this.inited) {\n      return;\n    }\n    zip(filter.notEmpty<AMap.Pixel | IPixel>('offset'), toolbar).subscribe(([v, m]) =>\n      m.setOffset(this.pixels.create(v)),\n    );\n    zip(filter.has<boolean>('hidden'), toolbar).subscribe(([v, m]) => (v ? m.hide() : m.show()));\n  }\n\n  /**\n   * è·åå·²åå»ºç AMap.ToolBar å¯¹è±¡\n   */\n  get() {\n    return this.os.get();\n  }\n\n  doLocation() {\n    this.os.get().subscribe(toolbar => {\n      toolbar.doLocation();\n    });\n  }\n}\n","import {\n  Directive,\n  Input,\n  OnInit,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  SimpleChanges,\n  OnChanges,\n  ContentChildren,\n  QueryList,\n  AfterContentInit,\n  NgZone,\n} from '@angular/core';\nimport { zip, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AmapMarkerClustererService, AMapMarkerClusterer } from './amap-marker-clusterer.service';\nimport { LoggerService } from '../../shared/logger/logger.service';\nimport { EventBinderService } from '../../shared/event-binder.service';\nimport { getOptions, ChangeFilter } from '../../utils';\nimport { PixelService } from '../../shared/pixel.service';\nimport { SizeService } from '../../shared/size.service';\nimport { AmapMarkerDirective } from '../amap-marker/amap-marker.directive';\nimport { AMapService } from '../../shared/amap.service';\n\nconst TAG = 'amap-marker-clusterer';\nconst MarkerClusterOptions = [\n  'gridSize',\n  'minClusterSize',\n  'maxZoom',\n  'averageCenter',\n  'styles',\n  'renderClusterMarker',\n  'zoomOnClick',\n];\n\n@Directive({\n  selector: 'amap-marker-clusterer',\n  exportAs: 'marker-clusterer',\n  providers: [AmapMarkerClustererService],\n})\nexport class AmapMarkerClustererDirective\n  implements OnInit, OnChanges, OnDestroy, AfterContentInit {\n  // ---- Options ----\n  /**\n   * èåè®¡ç®æ¶ç½æ ¼çåç´ å¤§å°ï¼é»è®¤60\n   */\n  @Input() gridSize: number;\n  /**\n   * èåçæå°æ°éãé»è®¤å¼ä¸º2ï¼å³å°äº2ä¸ªç¹åä¸è½æä¸ºä¸ä¸ªèå\n   */\n  @Input() minClusterSize: number;\n  /**\n   * æå¤§çèåçº§å«ï¼å¤§äºè¯¥çº§å«å°±ä¸è¿è¡ç¸åºçèåãé»è®¤å¼ä¸º18\n   */\n  @Input() maxZoom: number;\n  /**\n   * èåç¹çå¾æ ä½ç½®æ¯å¦æ¯ææèååç¹çä¸­å¿ç¹ãé»è®¤ä¸ºå¦\n   */\n  @Input() averageCenter: boolean;\n  /**\n   * æå®èååçç¹æ è®°çå¾æ æ ·å¼ï¼å¯ç¼ºçï¼ç¼ºçæ¶ä¸ºé»è®¤æ ·å¼\n   */\n  @Input() styles: AMapMarkerClusterer.StyleObject[];\n  /**\n   * è¯¥æ¹æ³ç¨æ¥å®ç°èåç¹çèªå®ä¹ç»å¶\n   */\n  @Input() renderClusterMarker: (obj: {\n    count: number;\n    markers: AMap.Marker<any>[];\n    marker: AMap.Marker<any>;\n  }) => void;\n  /**\n   * ç¹å»èåç¹æ¶ï¼æ¯å¦æ£å¼ï¼é»è®¤å¼ä¸ºï¼true\n   */\n  @Input() zoomOnClick: boolean;\n\n  // ---- Events ----\n  @Output() naReady = new EventEmitter();\n  @Output() naClick: EventEmitter<any>;\n\n  // amap-marker directives:\n  @ContentChildren(AmapMarkerDirective) markerList = new QueryList<AmapMarkerDirective>();\n\n  private inited = false;\n\n  constructor(\n    protected os: AmapMarkerClustererService,\n    protected binder: EventBinderService,\n    private amaps: AMapService,\n    private pixels: PixelService,\n    private sizes: SizeService,\n    private logger: LoggerService,\n    private ngZone: NgZone,\n  ) {\n    const target = this.os.get();\n    this.naClick = this.binder.bindEvent(target, 'click');\n  }\n\n  ngOnDestroy() {\n    this.os.destroy();\n  }\n\n  ngOnInit() {\n    this.amaps.get().subscribe(() => {\n      this.logger.d(TAG, 'initializing ...');\n      const options = getOptions<AMapMarkerClusterer.Options>(this, MarkerClusterOptions);\n      if (options.styles) {\n        options.styles = options.styles.map(style => {\n          if (style.size) {\n            style.size = this.sizes.create(style.size) as AMap.Size;\n          }\n          if (style.offset) {\n            style.offset = this.pixels.create(style.offset);\n          }\n          if (style.imageOffset) {\n            style.imageOffset = this.pixels.create(style.imageOffset);\n          }\n          return style;\n        });\n      }\n      this.logger.d(TAG, 'options:', options);\n      this.os.create(options).subscribe();\n      this.inited = true;\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.inited) {\n      return;\n    }\n    const filter = ChangeFilter.of(changes);\n    const cluster = this.get();\n    zip(filter.notEmpty<number>('gridSize'), cluster).subscribe(([v, c]) => c.setGridSize(v));\n    zip(filter.notEmpty<number>('minClusterSize'), cluster).subscribe(([v, c]) =>\n      c.setMinClusterSize(v),\n    );\n    zip(filter.has<number>('maxZoom'), cluster).subscribe(([v, c]) => c.setMaxZoom(v));\n    zip(filter.has<boolean>('averageCenter'), cluster).subscribe(([v, c]) => c.setAverageCenter(v));\n    zip(filter.has<AMapMarkerClusterer.StyleObject[]>('styles'), cluster).subscribe(([v, c]) =>\n      c.setStyles(v),\n    );\n  }\n\n  ngAfterContentInit() {\n    this.updateMarkers().subscribe(c => {\n      this.ngZone.run(() => this.naReady.emit(c));\n      this.logger.d(TAG, 'markerClusterer is ready.');\n    });\n    this.markerList.changes.subscribe(() => this.updateMarkers().subscribe());\n  }\n\n  private updateMarkers() {\n    return zip(combineLatest(this.markerList.map(d => d.get())), this.get()).pipe(\n      map(([markers, cluster]) => {\n        cluster.setMarkers(markers);\n        return cluster;\n      }),\n    );\n  }\n\n  /**\n   * è·åå·²åå»ºç AMap.MarkerClusterer å¯¹è±¡\n   */\n  get() {\n    return this.os.get();\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { ReplaySubject, zip } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AMapService } from '../../shared/amap.service';\nimport { PluginLoaderService } from '../../shared/plugin-loader.service';\nimport { LoggerService } from '../../shared/logger/logger.service';\nimport { Getter } from '../../base/interfaces';\ndeclare const AMap: any;\n\nconst TAG = 'AmapHeatmap';\n\nexport namespace AMapHeatmap {\n  export interface Options {\n    /**\n     * ç­åå¾ä¸­åä¸ªç¹çåå¾ï¼é»è®¤ï¼30ï¼åä½ï¼pixel\n     */\n    radius?: number;\n    /**\n     * ç­åå¾çæ¸ååºé´\n     */\n    gradient?: { [key: string]: string };\n    /**\n     * ç­åå¾éæåº¦æ°ç»ï¼åå¼èå´[0,1]ï¼0è¡¨ç¤ºå®å¨éæï¼1è¡¨ç¤ºä¸éæ\n     * é»è®¤ï¼[0,1]\n     */\n    opacity?: [number, number];\n    /**\n     * æ¯æçç¼©æ¾çº§å«èå´ï¼åå¼èå´[3-18]\n     * é»è®¤ï¼[3,18]\n     */\n    zooms?: [number, number];\n\n    rejectMapMask?: boolean;\n    visible?: boolean;\n    radiusUnit?: string;\n    blur?: number;\n    zIndex?: number;\n    renderOnZooming?: boolean;\n    ['3d']?: {\n      heightScale?: number;\n      heightBezier?: number[];\n      gridSize?: number;\n      drawGridLine?: boolean;\n    };\n  }\n  export interface Data {\n    /**\n     * ç»åº¦\n     */\n    lng: number;\n    /**\n     * ç»´åº¦\n     */\n    lat: number;\n    /**\n     * æé\n     */\n    count: number;\n  }\n  export interface DataSet {\n    /**\n     * æéçæå¤§å¼\n     */\n    max?: number;\n    /**\n     * åæ æ°æ®é\n     */\n    data: Data[];\n  }\n}\n\n@Injectable()\nexport class AmapHeatmapService implements Getter<any> {\n  private heatmap: any;\n  private heatmap$ = new ReplaySubject<any>(1);\n\n  constructor(\n    private amaps: AMapService,\n    private plugin: PluginLoaderService,\n    private logger: LoggerService,\n    private ngZone: NgZone,\n  ) {}\n\n  /**\n   * è·åç­åå¾\n   */\n  get() {\n    return this.heatmap$.asObservable();\n  }\n\n  /**\n   * åå»ºç­åå¾ AMap.Heatmap\n   * @param options éé¡¹\n   */\n  create(options: AMapHeatmap.Options) {\n    return zip(this.amaps.get(), this.plugin.load('AMap.Heatmap')).pipe(\n      map(([m]) => {\n        this.heatmap = this.ngZone.runOutsideAngular(() => new AMap.Heatmap(m, options));\n        this.logger.d(TAG, 'new Heatmap created.');\n        this.heatmap$.next(this.heatmap);\n        this.heatmap$.complete();\n        return this.heatmap;\n      }),\n    );\n  }\n\n  /**\n   * éæ¯ç­åå¾\n   */\n  destroy() {\n    this.get().subscribe(heatmap => {\n      heatmap.setMap(null);\n      this.logger.d(TAG, 'Heatmap destroyed.');\n      this.heatmap = null;\n    });\n  }\n}\n","import {\n  Input,\n  Output,\n  EventEmitter,\n  Directive,\n  OnDestroy,\n  SimpleChanges,\n  OnChanges,\n  NgZone,\n} from '@angular/core';\nimport { zip } from 'rxjs';\nimport { AmapHeatmapService, AMapHeatmap } from './amap-heatmap.service';\nimport { LoggerService } from '../../shared/logger/logger.service';\nimport { getOptions, ChangeFilter } from '../../utils';\n\nconst TAG = 'amap-heatmap';\nconst HeatmapOptions = ['radius', 'gradient', 'opacity', 'zooms'];\n\n@Directive({\n  selector: 'amap-heatmap',\n  exportAs: 'heatmap',\n  providers: [AmapHeatmapService],\n})\nexport class AmapHeatmapDirective implements OnChanges, OnDestroy {\n  // ---- Options ----\n  /**\n   * ç­åå¾ä¸­åä¸ªç¹çåå¾ï¼é»è®¤ï¼30ï¼åä½ï¼pixel\n   */\n  @Input() radius: number;\n  /**\n   * ç­åå¾çæ¸ååºé´\n   */\n  @Input() gradient: { [key: string]: string };\n  /**\n   * ç­åå¾éæåº¦æ°ç»ï¼åå¼èå´[0,1]ï¼0è¡¨ç¤ºå®å¨éæï¼1è¡¨ç¤ºä¸éæ\n   * é»è®¤ï¼[0,1]\n   */\n  @Input() opacity: [number, number];\n  /**\n   * æ¯æçç¼©æ¾çº§å«èå´ï¼åå¼èå´[3-18]\n   * é»è®¤ï¼[3,18]\n   */\n  @Input() zooms: [number, number];\n  /**\n   * é¢å¤: æ¯å¦éè\n   */\n  @Input() hidden = false;\n  /**\n   * é¢å¤: ä¼è¦çå¶ä»å±æ§çéç½®æ¹å¼\n   */\n  @Input() options: AMapHeatmap.Options;\n  /**\n   * é¢å¤: åæ æ°æ®é\n   */\n  @Input() dataset: AMapHeatmap.DataSet;\n\n  // ---- Events ----\n  @Output() naReady = new EventEmitter();\n\n  private inited = false;\n\n  constructor(\n    protected os: AmapHeatmapService,\n    private logger: LoggerService,\n    private ngZone: NgZone,\n  ) {}\n\n  ngOnDestroy() {\n    this.os.destroy();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const filter = ChangeFilter.of(changes);\n    const heatmap = this.get();\n    if (!this.inited) {\n      this.logger.d(TAG, 'initializing ...');\n      const options = this.options || getOptions<AMapHeatmap.Options>(this, HeatmapOptions);\n      this.logger.d(TAG, 'options:', options);\n      this.os.create(options).subscribe(m => {\n        this.ngZone.run(() => this.naReady.emit(m));\n        this.logger.d(TAG, 'heatmap is ready.');\n      });\n      this.inited = true;\n    } else {\n      zip(filter.has<AMapHeatmap.Options>('options'), heatmap).subscribe(([v, p]) =>\n        p.setOptions(v || {}),\n      );\n    }\n\n    zip(filter.notEmpty<AMapHeatmap.DataSet>('dataset'), heatmap).subscribe(([v, p]) => {\n      p.setDataSet(v);\n    });\n    zip(filter.has<boolean>('hidden'), heatmap).subscribe(([v, p]) => (v ? p.hide() : p.show()));\n  }\n\n  /**\n   * è·åå·²åå»ºç AMap.Heatmap å¯¹è±¡\n   */\n  get() {\n    return this.os.get();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { LoggerService } from './logger/logger.service';\nimport { AMapLoaderService } from './amap-loader.service';\n\nconst TAG = 'PluginLoader';\n\n@Injectable()\nexport class AmapPluginLoaderService {\n  private state = new Map<string, ReplaySubject<void>>();\n\n  constructor(private mapLoader: AMapLoaderService, private logger: LoggerService) {}\n\n  /**\n   * å è½½ä¸ä¸ªæå¤ä¸ªæä»¶\n   */\n  load(name: string | string[]): Observable<void> {\n    let pKey = '';\n    if (Array.isArray(name)) {\n      pKey = name.join(',');\n    } else {\n      pKey = name;\n    }\n    if (this.state.has(pKey)) {\n      return this.state.get(pKey).asObservable();\n    }\n\n    this.logger.d(TAG, 'loading plugin:', pKey, '...');\n    return this.mapLoader.load().pipe(\n      switchMap(() => {\n        const loading$ = new ReplaySubject<void>(1);\n        AMap.plugin(name, () => {\n          this.logger.d(TAG, 'loading plugin:', pKey, 'COMPLETE');\n          loading$.next();\n          loading$.complete();\n        });\n        this.state.set(pKey, loading$);\n        return loading$.asObservable();\n      }),\n    );\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { ReplaySubject, Observable, Subscriber } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { AmapPluginLoaderService } from '../../shared/amap-plugin-loader.service';\nimport { EventBinderService } from '../../shared/event-binder.service';\nimport { LoggerService } from '../../shared/logger/logger.service';\nimport { Getter } from '../../base/interfaces';\ndeclare const AMap: any;\n\nconst TAG = 'AmapAutocomplete';\n\nexport namespace AMapAutocomplete {\n  export type DataType = 'all' | 'bus' | 'poi' | 'busline';\n  export interface Options {\n    /**\n     * è¾å¥æç¤ºæ¶éå®POIç±»åï¼å¤ä¸ªç±»åç¨â|âåé\n     */\n    type?: string;\n    /**\n     * è¾å¥æç¤ºæ¶éå®åå¸\n     */\n    city?: string;\n    /**\n     * è¿åçæ°æ®ç±»å\n     */\n    datatype?: DataType;\n    /**\n     * æ¯å¦å¼ºå¶éå¶å¨è®¾ç½®çåå¸åæç´¢\n     */\n    citylimit?: boolean;\n    /**\n     * æå®è¾å¥æ¡\n     */\n    input?: string | HTMLInputElement;\n    /**\n     * æå®è¾åºé¢æ¿\n     */\n    output?: string | HTMLDivElement;\n    /**\n     * æ¯å¦å¨inputä½äºé¡µé¢è¾ä¸æ¹çæ¶åèªå¨å°è¾å¥é¢æ¿æ¾ç¤ºå¨inputä¸æ¹ä»¥é¿åè¢«é®æ¡\n     */\n    outPutDirAuto?: boolean;\n  }\n  export interface Tip {\n    /**\n     * åç§°\n     */\n    name: string;\n    /**\n     * æå±åºå\n     */\n    district: string;\n    /**\n     * åºåç¼ç \n     */\n    adcode: string;\n    /**\n     * å°å\n     */\n    address: string;\n    /**\n     * åå¸\n     */\n    city: any[];\n    /**\n     * ID\n     */\n    id: string;\n    /**\n     * åæ ç»çº¬åº¦\n     */\n    location: AMap.LngLat;\n    /**\n     * ç±»åç¼ç \n     */\n    typecode: string;\n  }\n  export interface SearchResult {\n    /**\n     * æ¥è¯¢ç¶æè¯´æ\n     */\n    info: string;\n    /**\n     * è¾å¥æç¤ºæ¡æ°\n     */\n    count: number;\n    /**\n     * è¾å¥æç¤ºåè¡¨\n     */\n    tips: Tip[];\n  }\n  export type SearchStatus = 'complete' | 'error' | 'no_data';\n}\n\nexport interface AutocompleteSearchResult {\n  status: AMapAutocomplete.SearchStatus;\n  result: string | AMapAutocomplete.SearchResult;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AmapAutocompleteService implements Getter<any> {\n  private ac: any;\n  private ac$ = new ReplaySubject<any>(1);\n\n  constructor(\n    private plugin: AmapPluginLoaderService,\n    private binder: EventBinderService,\n    private logger: LoggerService,\n    private ngZone: NgZone,\n  ) {}\n\n  /**\n   * è·åæä»¶\n   */\n  get() {\n    return this.ac$.asObservable();\n  }\n\n  /**\n   * ä¾¦å¬äºä»¶\n   */\n  on(event: string) {\n    return this.binder.bindEvent(this.get(), event);\n  }\n\n  /**\n   * åå»ºæä»¶\n   */\n  create(options: AMapAutocomplete.Options) {\n    return this.plugin.load('AMap.Autocomplete').pipe(\n      map(() => {\n        this.ac = this.ngZone.runOutsideAngular(() => new AMap.Autocomplete(options));\n        this.logger.d(TAG, 'new autocomplete created.');\n        this.ac$.next(this.ac);\n        this.ac$.complete();\n        return this.ac;\n      }),\n    );\n  }\n\n  /**\n   * æç´¢\n   */\n  search(address: string) {\n    return this.get().pipe(\n      switchMap(\n        ac =>\n          new Observable((observer: Subscriber<AutocompleteSearchResult>) => {\n            ac.search(address, (status, result) => {\n              observer.next({ status, result });\n              observer.complete();\n            });\n          }),\n      ),\n    );\n  }\n}\n","import {\n  Input,\n  Output,\n  EventEmitter,\n  Directive,\n  ElementRef,\n  SimpleChanges,\n  OnChanges,\n  NgZone,\n} from '@angular/core';\nimport { zip } from 'rxjs';\nimport {\n  AmapAutocompleteService,\n  AMapAutocomplete,\n} from '../../services/amap-autocomplete/amap-autocomplete.service';\nimport { LoggerService } from '../../shared/logger/logger.service';\nimport { EventBinderService } from '../../shared/event-binder.service';\nimport { getOptions, ChangeFilter } from '../../utils';\n\nconst TAG = 'amap-autocomplete';\nconst AutocompleteOptions = ['type', 'city', 'datatype', 'citylimit'];\n\n@Directive({\n  selector: 'input[amapAutocomplete]',\n})\nexport class InputAmapAutocompleteDirective implements OnChanges {\n  // ---- Options ----\n  /**\n   * è¾å¥æç¤ºæ¶éå®POIç±»åï¼å¤ä¸ªç±»åç¨â|âåé\n   */\n  @Input() type: string;\n  /**\n   * è¾å¥æç¤ºæ¶éå®åå¸\n   */\n  @Input() city: string;\n  /**\n   * è¿åçæ°æ®ç±»å\n   */\n  @Input() datatype: AMapAutocomplete.DataType;\n  /**\n   * æ¯å¦å¼ºå¶éå¶å¨è®¾ç½®çåå¸åæç´¢\n   */\n  @Input() citylimit: boolean;\n\n  // ---- Events ----\n  @Output() naReady = new EventEmitter();\n  @Output() naComplete: EventEmitter<any>;\n  @Output() naSelect: EventEmitter<any>;\n  @Output() naChoose: EventEmitter<any>;\n  @Output() naError: EventEmitter<any>;\n\n  private inited = false;\n  constructor(\n    protected os: AmapAutocompleteService,\n    protected binder: EventBinderService,\n    private el: ElementRef,\n    private logger: LoggerService,\n    private ngZone: NgZone,\n  ) {\n    const target = this.os.get();\n    this.naComplete = this.binder.bindEvent(target, 'complete');\n    this.naSelect = this.binder.bindEvent(target, 'select');\n    this.naChoose = this.binder.bindEvent(target, 'choose');\n    this.naError = this.binder.bindEvent(target, 'error');\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const filter = ChangeFilter.of(changes);\n    const plugin = this.os.get();\n    if (!this.inited) {\n      this.logger.d(TAG, 'initializing ...');\n      const options = getOptions<AMapAutocomplete.Options>(this, AutocompleteOptions);\n      options.input = this.el.nativeElement;\n      this.logger.d(TAG, 'options:', options);\n      this.os.create(options).subscribe(m => {\n        this.ngZone.run(() => this.naReady.emit(m));\n        this.logger.d(TAG, 'autocomplete is ready.');\n      });\n      this.inited = true;\n    } else {\n      zip(filter.has<string>('city'), plugin).subscribe(([v, p]) => p.setCity(v));\n      zip(filter.has<string>('type'), plugin).subscribe(([v, p]) => p.setType(v));\n      zip(filter.has<boolean>('citylimit'), plugin).subscribe(([v, p]) => p.setCityLimit(v));\n    }\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { ReplaySubject, zip, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AMapService } from '../../shared/amap.service';\nimport { AmapUILoaderService } from '../../shared/amap-ui-loader.service';\nimport { LoggerService } from '../../shared/logger/logger.service';\nimport { Getter } from '../../base/interfaces';\n\nexport namespace AMapUISimpleMarker {\n  export interface Options<ExtraData = any> extends AMap.Marker.Options<ExtraData> {\n    /**\n     * æ ·å¼ä¸»é¢\n     */\n    iconTheme?: 'default' | 'fresh' | 'numv1' | 'numv2';\n    /**\n     * èæ¯å¾æ æ ·å¼\n     */\n    iconStyle?: string | object;\n    /**\n     * å¾æ åæ¯æå­\n     */\n    iconLabel?: string | object;\n    /**\n     * æ¯å¦æ¾ç¤ºå®ä½ç¹\n     */\n    showPositionPoint?: boolean | object;\n    /**\n     * åå»ºçDomå®¹å¨ä¸éå¸¦çclassï¼å¤ä¸ªclass nameç¨ç©ºæ ¼åå¼\n     */\n    containerClassNames?: string;\n  }\n}\n\nconst TAG = 'UISimpleMarker';\n\n@Injectable()\nexport class UISimpleMarkerService implements Getter<any> {\n  private marker: any;\n  private marker$ = new ReplaySubject<any>(1);\n  private ui = this.uiLoader.load('overlay/SimpleMarker') as Observable<any>;\n\n  constructor(\n    private amaps: AMapService,\n    private uiLoader: AmapUILoaderService,\n    private logger: LoggerService,\n    private ngZone: NgZone,\n  ) {}\n\n  /**\n   * è·åç¹æ è®°\n   */\n  get() {\n    return this.marker$.asObservable();\n  }\n\n  /**\n   * åå»ºç¹æ è®° AMap.SimpleMarker\n   * @param options éé¡¹\n   * @param addToMap æ¯å¦ç´æ¥å è¿å°å¾\n   */\n  create(options: AMapUISimpleMarker.Options, addToMap = true) {\n    return zip(this.ui, this.amaps.get()).pipe(\n      map(([SimpleMarker, m]) => {\n        if (addToMap) {\n          options.map = m;\n        }\n        this.marker = this.ngZone.runOutsideAngular(() => new SimpleMarker(options));\n        this.logger.d(TAG, 'new simple marker created.');\n        this.marker$.next(this.marker);\n        this.marker$.complete();\n        return this.marker;\n      }),\n    );\n  }\n\n  /**\n   * éæ¯ç¹æ è®°\n   */\n  destroy() {\n    this.get().subscribe(m => {\n      m.setMap(null);\n      this.logger.d(TAG, 'simple marker destroyed.');\n      this.marker = null;\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { LoggerService } from './logger/logger.service';\nimport { AMapLoaderService } from './amap-loader.service';\n\ndeclare const AMapUI: any;\nconst TAG = 'AMapUILoader';\n\n@Injectable()\nexport class AmapUILoaderService {\n  private state = new Map<string, ReplaySubject<any>>();\n\n  constructor(private amap: AMapLoaderService, private logger: LoggerService) {}\n\n  load(name: string | string[]): Observable<any> {\n    let pKey = '';\n    if (Array.isArray(name)) {\n      pKey = name.join(',');\n    } else {\n      pKey = name;\n    }\n    if (this.state.has(pKey)) {\n      return this.state.get(pKey).asObservable();\n    }\n\n    this.logger.d(TAG, 'loading ui:', pKey, '...');\n    const loading$ = new ReplaySubject(1);\n    this.amap.load().subscribe({\n      next: () => {\n        this.amap.loadUI().subscribe({\n          next: () => {\n            AMapUI.loadUI(Array.isArray(name) ? name : [name], u => {\n              this.logger.d(TAG, 'loading ui:', pKey, 'COMPLETE');\n              loading$.next(u);\n              loading$.complete();\n            });\n            this.state.set(pKey, loading$);\n          },\n        });\n      },\n    });\n    return loading$.asObservable();\n  }\n}\n","import {\n  Input,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  SimpleChanges,\n  OnChanges,\n  ContentChildren,\n  QueryList,\n  AfterContentInit,\n  NgZone,\n} from '@angular/core';\nimport { zip, Subscription } from 'rxjs';\nimport { AMapOverlay, OverlayOptions } from '../../base/amap-overlay';\nimport { EventBinderService } from '../../shared/event-binder.service';\nimport { IPixel, IIcon, IMarkerLabel } from '../../interfaces';\nimport { AmapInfoWindowComponent } from '../../components/amap-info-window/amap-info-window.component';\nimport { AMapService } from '../../shared/amap.service';\nimport { WithCreate } from '../../base/interfaces';\nimport { LoggerService } from '../../shared/logger/logger.service';\nimport { getOptions, ChangeFilter } from '../../utils';\nimport { PixelService } from '../../shared/pixel.service';\nimport { IconService } from '../../shared/icon.service';\nimport { MarkerLabelService } from '../../shared/marker-label.service';\nimport { AMapUISimpleMarker } from './ui-simple-marker.service';\n\nexport const SimpleMarkerOptions = [\n  ...OverlayOptions,\n  // Marker options without cotent\n  'position',\n  'anchor',\n  'offset',\n  'icon',\n  'topWhenClick',\n  'raiseOnDrag',\n  'visible',\n  'zIndex',\n  'angle',\n  'autoRotation',\n  'animation',\n  'shadow',\n  'title',\n  'shape',\n  'label',\n  // Own options\n  'iconTheme',\n  'iconStyle',\n  'iconLabel',\n  'showPositionPoint',\n  'containerClassNames',\n];\n\nexport class UISimpleMarker extends AMapOverlay<any>\n  implements OnDestroy, OnChanges, AfterContentInit {\n  TAG = 'ui-simple-marker';\n  // ---- Options ----\n  /**\n   * æ ·å¼ä¸»é¢\n   */\n  @Input() iconTheme: 'default' | 'fresh' | 'numv1' | 'numv2';\n  /**\n   * èæ¯å¾æ æ ·å¼\n   */\n  @Input() iconStyle: string | object;\n  /**\n   * å¾æ åæ¯æå­\n   */\n  @Input() iconLabel: string | object;\n  /**\n   * æ¯å¦æ¾ç¤ºå®ä½ç¹\n   */\n  @Input() showPositionPoint: boolean | object;\n  /**\n   * åå»ºçDomå®¹å¨ä¸éå¸¦çclassï¼å¤ä¸ªclass nameç¨ç©ºæ ¼åå¼\n   */\n  @Input() containerClassNames: string;\n  /**\n   * ç¹æ è®°å¨å°å¾ä¸æ¾ç¤ºçä½ç½®\n   */\n  @Input() position: AMap.LocationValue;\n  /**\n   * æ è®°éç¹\n   */\n  @Input() anchor: AMap.Marker.Anchor;\n  /**\n   * ç¹æ è®°æ¾ç¤ºä½ç½®åç§»é\n   */\n  @Input() offset: AMap.Pixel | IPixel;\n  /**\n   * éå¨ç¹æ è®°ä¸­æ¾ç¤ºçå¾æ \n   */\n  @Input() icon: string | AMap.Icon | IIcon;\n  /**\n   * é¼ æ ç¹å»æ¶markeræ¯å¦ç½®é¡¶\n   */\n  @Input() topWhenClick: boolean;\n  /**\n   * ææ½ç¹æ è®°æ¶æ¯å¦å¼å¯ç¹æ è®°ç¦»å¼å°å¾çææ\n   */\n  @Input() raiseOnDrag: boolean;\n  /**\n   * ç¹æ è®°æ¯å¦å¯è§\n   */\n  @Input() visible: boolean;\n  /**\n   * ç¹æ è®°çå å é¡ºåº\n   */\n  @Input() zIndex: number;\n  /**\n   * ç¹æ è®°çæè½¬è§åº¦\n   */\n  @Input() angle: number;\n  /**\n   * æ¯å¦èªå¨æè½¬\n   */\n  @Input() autoRotation: boolean;\n  /**\n   * ç¹æ è®°çå¨ç»ææ\n   */\n  @Input() animation: AMap.AnimationName;\n  /**\n   * ç¹æ è®°é´å½±\n   */\n  @Input() shadow: AMap.Icon | string | IIcon;\n  /**\n   * é¼ æ æ»è¿ç¹æ è®°æ¶çæå­æç¤º\n   */\n  @Input() title: string;\n  /**\n   * å¯ç¹å»åºå\n   */\n  @Input() shape: AMap.MarkerShape;\n  /**\n   * ææ¬æ æ³¨\n   */\n  @Input() label: AMap.Marker.Label | IMarkerLabel;\n  /**\n   * é¢å¤: æ¯å¦ç½®é¡¶\n   */\n  @Input() isTop: boolean;\n  /**\n   * é¢å¤: æ¯å¦éè\n   */\n  @Input() hidden = false;\n  /**\n   * é¢å¤: æ¯å¦åå«å¨ç¹èåä¸­\n   */\n  @Input() inCluster = false;\n  /**\n   * é¢å¤: ç¹å»æ¶æ¯å¦æ¾ç¤ºä¿¡æ¯çªä½\n   */\n  @Input() openInfoWindow = true;\n\n  // amap-marker events:\n  @Output() naReady = new EventEmitter();\n  @Output() naMouseOut: EventEmitter<any>;\n  @Output() naDragStart: EventEmitter<any>;\n  @Output() naDragging: EventEmitter<any>;\n  @Output() naDragEnd: EventEmitter<any>;\n  @Output() naMoving: EventEmitter<any>;\n  @Output() naMoveEnd: EventEmitter<any>;\n  @Output() naMoveAlong: EventEmitter<any>;\n\n  // amap info window:\n  @ContentChildren(AmapInfoWindowComponent)\n  infoWindowComponent = new QueryList<AmapInfoWindowComponent>();\n\n  protected inited = false;\n  protected subscription: Subscription;\n\n  constructor(\n    protected os: WithCreate<any>,\n    protected binder: EventBinderService,\n    protected amaps: AMapService,\n    protected pixels: PixelService,\n    protected icons: IconService,\n    protected mlabels: MarkerLabelService,\n    protected logger: LoggerService,\n    protected ngZone: NgZone,\n  ) {\n    super(os, binder);\n    const target = this.os.get();\n    this.naMouseOut = this.binder.bindEvent(target, 'mouseout');\n    this.naDragStart = this.binder.bindEvent(target, 'dragstart');\n    this.naDragging = this.binder.bindEvent(target, 'dragging');\n    this.naDragEnd = this.binder.bindEvent(target, 'dragend');\n    this.naMoving = this.binder.bindEvent(target, 'moving');\n    this.naMoveEnd = this.binder.bindEvent(target, 'moveend');\n    this.naMoveAlong = this.binder.bindEvent(target, 'movealong');\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n    this.os.destroy();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const filter = ChangeFilter.of(changes);\n    const marker = this.get();\n    if (!this.inited) {\n      // do not draw marker when no poistion defined.\n      if (!this.position) {\n        return;\n      }\n      this.amaps.get().subscribe(() => {\n        this.logger.d(this.TAG, 'initializing ...');\n        // bind info window events:\n        this.subscription = this.binder.bindEvent(marker, 'click').subscribe(() => {\n          if (this.openInfoWindow) {\n            this.infoWindowComponent.forEach(w => w.open());\n          }\n        });\n        const options = this.getOptions();\n        if (this.icon) {\n          options.icon = this.icons.create(this.icon);\n        }\n        if (this.shadow) {\n          options.shadow = this.icons.create(this.shadow);\n        }\n        if (this.label) {\n          options.label = this.mlabels.create(this.label);\n        }\n        if (this.offset) {\n          options.offset = this.pixels.create(this.offset);\n        }\n        this.logger.d(this.TAG, 'options:', options);\n        this.os.create(options).subscribe(m => {\n          this.ngZone.run(() => this.naReady.emit(m));\n          this.logger.d(this.TAG, 'marker is ready.');\n        });\n        this.inited = true;\n        this.updateInfoWindow();\n        this.updateInfoWindowPosition();\n      });\n    } else {\n      zip(filter.has<string | AMap.Icon | IIcon>('icon'), marker).subscribe(([v, m]) =>\n        m.setIcon(this.icons.create(v)),\n      );\n      zip(filter.has<string | AMap.Icon>('shadow'), marker).subscribe(([v, m]) =>\n        m.setShadow(this.icons.create(v)),\n      );\n      zip(filter.has<AMap.Marker.Label | IMarkerLabel>('label'), marker).subscribe(([v, m]) =>\n        m.setLabel(this.mlabels.create(v)),\n      );\n      zip(filter.has<string>('title'), marker).subscribe(([v, m]) => m.setTitle(v));\n      zip(filter.has<any>('extData'), marker).subscribe(([v, m]) => m.setExtData(v));\n      zip(filter.has<boolean>('clickable'), marker).subscribe(([v, m]) => m.setClickable(!!v));\n      zip(filter.has<boolean>('draggable'), marker).subscribe(([v, m]) => m.setDraggable(!!v));\n      zip(filter.has<boolean>('visible'), marker).subscribe(([v, m]) => (v ? m.show() : m.hide()));\n      zip(filter.has<string>('cursor'), marker).subscribe(([v, m]) => m.setCursor(v));\n      zip(filter.has<AMap.AnimationName>('animation'), marker).subscribe(([v, m]) =>\n        m.setAnimation(v),\n      );\n      zip(filter.has<number>('angle'), marker).subscribe(([v, m]) => m.setAngle(v));\n      zip(filter.has<number>('zIndex'), marker).subscribe(([v, m]) => m.setzIndex(v));\n      zip(filter.has<AMap.MarkerShape>('shape'), marker).subscribe(([v, m]) => m.setShape(v));\n      zip(filter.notEmpty<AMap.Pixel | IPixel>('offset'), marker).subscribe(([v, m]) =>\n        m.setOffset(this.pixels.create(v)),\n      );\n      zip(filter.notEmpty<AMap.LocationValue>('position'), marker).subscribe(([v, m]) =>\n        m.setPosition(v),\n      );\n      zip(filter.has<boolean | object>('showPositionPoint'), marker).subscribe(([v, m]) => {\n        if (!!v) {\n          m.showPositionPoint();\n        } else {\n          m.hidePositionPoint();\n        }\n      });\n      zip(filter.notEmpty<string | object>('iconStyle'), marker).subscribe(([v, m]) => {\n        if (changes.iconTheme && changes.iconTheme.currentValue) {\n          m.setIconThemeAndStyle(changes.iconTheme.currentValue, v);\n        } else {\n          m.setIconStyle(v);\n        }\n      });\n      zip(filter.notEmpty<string | object>('iconLabel'), marker).subscribe(([v, m]) =>\n        m.setIconLabel(v),\n      );\n      zip(filter.notEmpty<string>('containerClassNames'), marker).subscribe(([v, m]) =>\n        m.setContainerClassNames(v),\n      );\n    }\n    zip(filter.has<boolean>('isTop'), marker).subscribe(([v, m]) => m.setTop(!!v));\n    zip(filter.has<boolean>('hidden'), marker).subscribe(([v, m]) => (v ? m.hide() : m.show()));\n  }\n\n  ngAfterContentInit() {\n    this.updateInfoWindow();\n    this.infoWindowComponent.changes.subscribe(() => this.updateInfoWindow());\n  }\n\n  private updateInfoWindow() {\n    if (this.infoWindowComponent && this.inited) {\n      if (this.infoWindowComponent.length > 1) {\n        this.logger.e(this.TAG, 'Expected no more than 1 info window.');\n        return;\n      }\n\n      const marker = this.os.get();\n      this.infoWindowComponent.forEach(component => {\n        component.hostMarker = marker;\n      });\n    }\n  }\n\n  private updateInfoWindowPosition() {\n    if (this.infoWindowComponent && this.inited) {\n      this.infoWindowComponent.forEach(component => {\n        component.toggleOpen();\n      });\n    }\n  }\n\n  getOptions() {\n    return getOptions<AMapUISimpleMarker.Options>(this, SimpleMarkerOptions);\n  }\n\n  /**\n   * è·åå·²åå»ºç AMapUI å¯¹è±¡\n   */\n  get() {\n    return this.os.get();\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { ReplaySubject, zip, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AMapService } from '../../shared/amap.service';\nimport { AmapUILoaderService } from '../../shared/amap-ui-loader.service';\nimport { LoggerService } from '../../shared/logger/logger.service';\nimport { Getter } from '../../base/interfaces';\nimport { AMapUISimpleMarker } from '../ui-simple-marker/ui-simple-marker.service';\n\nexport namespace AMapUIAwesomeMarker {\n  export interface Options<ExtraData = any> extends AMapUISimpleMarker.Options<ExtraData> {\n    /**\n     * icon çåç§°ï¼å¯ç¨ç icons åè§ Font Awesome å®ç½\n     */\n    awesomeIcon?: string;\n    /**\n     * è¿åå­ä½èç¹ä¸ç classNames\n     */\n    getClassnamesOfAwesomeIcon?: (awesomeIcon: string) => string;\n  }\n}\n\nconst TAG = 'UIAwesomeMarker';\n\n@Injectable()\nexport class UIAwesomeMarkerService implements Getter<any> {\n  private marker: any;\n  private marker$ = new ReplaySubject<any>(1);\n  private ui = this.uiLoader.load('overlay/AwesomeMarker') as Observable<any>;\n\n  constructor(\n    private amaps: AMapService,\n    private uiLoader: AmapUILoaderService,\n    private logger: LoggerService,\n    private ngZone: NgZone,\n  ) {}\n\n  /**\n   * è·åç¹æ è®°\n   */\n  get() {\n    return this.marker$.asObservable();\n  }\n\n  /**\n   * åå»ºç¹æ è®° AMap.AwesomeMarker\n   * @param options éé¡¹\n   * @param addToMap æ¯å¦ç´æ¥å è¿å°å¾\n   */\n  create(options: AMapUIAwesomeMarker.Options, addToMap = true) {\n    return zip(this.ui, this.amaps.get()).pipe(\n      map(([AwesomeMarker, m]) => {\n        if (addToMap) {\n          options.map = m;\n        }\n        this.marker = this.ngZone.runOutsideAngular(() => new AwesomeMarker(options));\n        this.logger.d(TAG, 'new awesome marker created.');\n        this.marker$.next(this.marker);\n        this.marker$.complete();\n        return this.marker;\n      }),\n    );\n  }\n\n  /**\n   * éæ¯ç¹æ è®°\n   */\n  destroy() {\n    this.get().subscribe(m => {\n      m.setMap(null);\n      this.logger.d(TAG, 'awesome marker destroyed.');\n      this.marker = null;\n    });\n  }\n}\n","import { Directive, NgZone } from '@angular/core';\nimport { UISimpleMarkerService } from './ui-simple-marker.service';\nimport { UISimpleMarker } from './ui-simple-marker';\nimport { EventBinderService } from '../../shared/event-binder.service';\nimport { AMapService } from '../../shared/amap.service';\nimport { PixelService } from '../../shared/pixel.service';\nimport { IconService } from '../../shared/icon.service';\nimport { MarkerLabelService } from '../../shared/marker-label.service';\nimport { LoggerService } from '../../shared/logger/logger.service';\n\n@Directive({\n  selector: 'ui-simple-marker',\n  exportAs: 'simpleMarker',\n  providers: [UISimpleMarkerService],\n})\nexport class UISimpleMarkerDirective extends UISimpleMarker {\n  constructor(\n    protected os: UISimpleMarkerService,\n    protected binder: EventBinderService,\n    protected amaps: AMapService,\n    protected pixels: PixelService,\n    protected icons: IconService,\n    protected mlabels: MarkerLabelService,\n    protected logger: LoggerService,\n    protected ngZone: NgZone,\n  ) {\n    super(os, binder, amaps, pixels, icons, mlabels, logger, ngZone);\n  }\n}\n","import { Directive, Input, OnChanges, SimpleChanges, NgZone } from '@angular/core';\nimport { zip } from 'rxjs';\nimport { UIAwesomeMarkerService, AMapUIAwesomeMarker } from './ui-awesome-marker.service';\nimport { UISimpleMarker, SimpleMarkerOptions } from '../ui-simple-marker/ui-simple-marker';\nimport { getOptions, ChangeFilter } from '../../utils';\nimport { EventBinderService } from '../../shared/event-binder.service';\nimport { AMapService } from '../../shared/amap.service';\nimport { PixelService } from '../../shared/pixel.service';\nimport { IconService } from '../../shared/icon.service';\nimport { MarkerLabelService } from '../../shared/marker-label.service';\nimport { LoggerService } from '../../shared/logger/logger.service';\n\nconst AwesomeMarkerOptions = [...SimpleMarkerOptions, 'awesomeIcon', 'getClassnamesOfAwesomeIcon'];\n\n@Directive({\n  selector: 'ui-awesome-marker',\n  exportAs: 'awesomeMarker',\n  providers: [UIAwesomeMarkerService],\n})\nexport class UIAwesomeMarkerDirective extends UISimpleMarker implements OnChanges {\n  TAG = 'ui-awesome-marker';\n  // ---- Options ----\n  /**\n   * icon çåç§°ï¼å¯ç¨ç icons åè§ Font Awesome å®ç½\n   */\n  @Input() awesomeIcon: string;\n  /**\n   * è¿åå­ä½èç¹ä¸ç classNames\n   */\n  @Input() getClassnamesOfAwesomeIcon: (icon: string) => string;\n\n  constructor(\n    protected os: UIAwesomeMarkerService,\n    protected binder: EventBinderService,\n    protected amaps: AMapService,\n    protected pixels: PixelService,\n    protected icons: IconService,\n    protected mlabels: MarkerLabelService,\n    protected logger: LoggerService,\n    protected ngZone: NgZone,\n  ) {\n    super(os, binder, amaps, pixels, icons, mlabels, logger, ngZone);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n    const filter = ChangeFilter.of(changes);\n    const marker = this.get();\n    if (this.inited) {\n      zip(filter.has<string>('awesomeIcon'), marker).subscribe(([v, m]) => m.setAwesomeIcon(v));\n    }\n  }\n\n  getOptions() {\n    return getOptions<AMapUIAwesomeMarker.Options>(this, AwesomeMarkerOptions);\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { NgxAmapConfig, NGX_AMAP_CONFIG } from './shared/ngx-amap-config';\nimport { LoggerService } from './shared/logger/logger.service';\nimport { DebugLoggerService } from './shared/logger/debug-logger.service';\nimport { NgxAmapComponent } from './components/ngx-amap/ngx-amap.component';\nimport { AmapMarkerDirective } from './directives/amap-marker/amap-marker.directive';\nimport { AmapPolylineDirective } from './directives/amap-polyline/amap-polyline.directive';\nimport { AmapInfoWindowComponent } from './components/amap-info-window/amap-info-window.component';\nimport { AmapTextComponent } from './components/amap-text/amap-text.component';\nimport { AmapPolygonDirective } from './directives/amap-polygon/amap-polygon.directive';\nimport { AmapBezierCurveDirective } from './directives/amap-bezier-curve/amap-bezier-curve.directive';\nimport { AmapRectangleDirective } from './directives/amap-rectangle/amap-rectangle.directive';\nimport { AmapCircleDirective } from './directives/amap-circle/amap-circle.directive';\nimport { AmapCircleMarkerDirective } from './directives/amap-circle-marker/amap-circle-marker.directive';\nimport { AmapEllipseDirective } from './directives/amap-ellipse/amap-ellipse.directive';\nimport { AmapToolBarDirective } from './directives/amap-tool-bar/amap-tool-bar.directive';\nimport { AmapMarkerClustererDirective } from './directives/amap-marker-clusterer/amap-marker-clusterer.directive';\nimport { AmapHeatmapDirective } from './directives/amap-heatmap/amap-heatmap.directive';\nimport { InputAmapAutocompleteDirective } from './directives/input-amap-autocomplete/input-amap-autocomplete.directive';\nimport { AmapPluginLoaderService } from './shared/amap-plugin-loader.service';\nimport { AmapUILoaderService } from './shared/amap-ui-loader.service';\nimport { AMapLoaderService } from './shared/amap-loader.service';\nimport { AmapAutocompleteService } from './services/amap-autocomplete/amap-autocomplete.service';\nimport { UISimpleMarkerDirective } from './directives/ui-simple-marker/ui-simple-marker.directive';\nimport { UIAwesomeMarkerDirective } from './directives/ui-awesome-marker/ui-awesome-marker.directive';\nimport { EventBinderService } from './shared/event-binder.service';\n\n@NgModule({\n  declarations: [\n    NgxAmapComponent,\n    AmapMarkerDirective,\n    AmapPolylineDirective,\n    AmapInfoWindowComponent,\n    AmapTextComponent,\n    AmapPolygonDirective,\n    AmapBezierCurveDirective,\n    AmapRectangleDirective,\n    AmapCircleDirective,\n    AmapCircleMarkerDirective,\n    AmapEllipseDirective,\n    AmapToolBarDirective,\n    AmapMarkerClustererDirective,\n    AmapHeatmapDirective,\n    InputAmapAutocompleteDirective,\n    UISimpleMarkerDirective,\n    UIAwesomeMarkerDirective,\n  ],\n  imports: [],\n  exports: [\n    NgxAmapComponent,\n    AmapMarkerDirective,\n    AmapPolylineDirective,\n    AmapInfoWindowComponent,\n    AmapTextComponent,\n    AmapPolygonDirective,\n    AmapBezierCurveDirective,\n    AmapRectangleDirective,\n    AmapCircleDirective,\n    AmapCircleMarkerDirective,\n    AmapEllipseDirective,\n    AmapToolBarDirective,\n    AmapMarkerClustererDirective,\n    AmapHeatmapDirective,\n    InputAmapAutocompleteDirective,\n    UISimpleMarkerDirective,\n    UIAwesomeMarkerDirective,\n  ],\n})\nexport class NgxAmapModule {\n  static forRoot(mapConfig?: NgxAmapConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxAmapModule,\n      providers: [\n        { provide: NGX_AMAP_CONFIG, useValue: mapConfig || {} },\n        {\n          provide: LoggerService,\n          useClass: mapConfig && mapConfig.debug ? DebugLoggerService : LoggerService,\n        },\n        AMapLoaderService,\n        AmapPluginLoaderService,\n        AmapUILoaderService,\n        EventBinderService,\n      ],\n    };\n  }\n}\n\nexport {\n  NgxAmapComponent,\n  AmapMarkerDirective,\n  AmapPolylineDirective,\n  AmapInfoWindowComponent,\n  AmapTextComponent,\n  AmapPolygonDirective,\n  AmapBezierCurveDirective,\n  AmapRectangleDirective,\n  AmapCircleDirective,\n  AmapCircleMarkerDirective,\n  AmapEllipseDirective,\n  AmapToolBarDirective,\n  AmapMarkerClustererDirective,\n  AmapHeatmapDirective,\n  InputAmapAutocompleteDirective,\n  AmapPluginLoaderService,\n  AmapUILoaderService,\n  AMapLoaderService,\n  AmapAutocompleteService,\n  UISimpleMarkerDirective,\n  UIAwesomeMarkerDirective,\n  EventBinderService,\n};\n"]}