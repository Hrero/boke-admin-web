/// <reference types="@types/amap-js-api" />
import { OnInit, ElementRef, OnDestroy, EventEmitter, SimpleChanges, OnChanges, NgZone } from '@angular/core';
import { AMapService } from '../../shared/amap.service';
import { EventBinderService } from '../../shared/event-binder.service';
import { PluginLoaderService } from '../../shared/plugin-loader.service';
import { LoggerService } from '../../shared/logger/logger.service';
import * as ɵngcc0 from '@angular/core';
export declare class NgxAmapComponent implements OnInit, OnDestroy, OnChanges {
    private el;
    private amap;
    private pluginLoader;
    private logger;
    private binder;
    private ngZone;
    /**
     * 地图视口，用于控制影响地图静态显示的属性
     */
    view: AMap.View2D;
    /**
     * 地图图层数组，数组可以是图层 中的一个或多个，默认为普通二维地图
     */
    layers: AMap.Layer[];
    /**
     * 地图显示的缩放级别
     */
    zoom: number;
    /**
     * 地图中心点坐标值
     */
    center: AMap.LocationValue;
    /**
     * 地图标注显示顺序
     */
    labelzIndex: number;
    /**
     * 地图显示的缩放级别范围
     */
    zooms: [number, number];
    /**
     * 地图语言类型
     */
    lang: AMap.Lang;
    /**
     * 地图默认鼠标样式
     */
    defaultCursor: string;
    /**
     * 地图显示的参考坐标系
     */
    crs: 'EPSG3857' | 'EPSG3395' | 'EPSG4326';
    /**
     * 地图平移过程中是否使用动画
     */
    animateEnable: boolean;
    /**
     * 是否开启地图热点和标注的hover效果
     */
    isHotspot: boolean;
    /**
     * 当前地图中默认显示的图层
     */
    defaultLayer: AMap.TileLayer;
    /**
     * 地图是否可旋转
     */
    rotateEnable: boolean;
    /**
     * 是否监控地图容器尺寸变化
     */
    resizeEnable: boolean;
    /**
     * 是否在有矢量底图的时候自动展示室内地图
     */
    showIndoorMap: boolean;
    /**
     * 在展示矢量图的时候自动展示室内地图图层
     */
    indoorMap: any;
    /**
     * 是否支持可以扩展最大缩放级别
     */
    expandZoomRange: boolean;
    /**
     * 地图是否可通过鼠标拖拽平移
     */
    dragEnable: boolean;
    /**
     * 地图是否可缩放
     */
    zoomEnable: boolean;
    /**
     * 地图是否可通过双击鼠标放大地图
     */
    doubleClickZoom: boolean;
    /**
     * 地图是否可通过键盘控制
     */
    keyboardEnable: boolean;
    /**
     * 地图是否使用缓动效果
     */
    jogEnable: boolean;
    /**
     * 地图是否可通过鼠标滚轮缩放浏览
     */
    scrollWheel: boolean;
    /**
     * 地图在移动终端上是否可通过多点触控缩放浏览地图
     */
    touchZoom: boolean;
    /**
     * 当touchZoomCenter=1的时候，手机端双指缩放的以地图中心为中心，否则默认以双指中间点为中心
     */
    touchZoomCenter: number;
    /**
     * 设置地图的显示样式
     */
    mapStyle: string;
    /**
     * 设置地图上显示的元素种类
     */
    features: AMap.Map.Feature[] | 'all' | AMap.Map.Feature;
    /**
     * 设置地图显示3D楼块效果
     */
    showBuildingBlock: boolean;
    /**
     * 视图模式
     */
    viewMode: AMap.Map.ViewMode;
    /**
     * 俯仰角度
     */
    pitch: number;
    /**
     * 是否允许设置俯仰角度
     */
    pitchEnable: boolean;
    /**
     * 楼块出现和消失的时候是否显示动画过程
     */
    buildingAnimation: boolean;
    /**
     * 调整天空颜色
     */
    skyColor: string;
    /**
     * 设置地图的预加载模式
     */
    preloadMode: boolean;
    /**
     * 为 Map 实例指定掩模的路径，各图层将只显示路径范围内图像
     */
    mask: [number, number][] | [number, number][][] | [number, number][][][];
    maxPitch: number;
    rotation: number;
    forceVector: boolean;
    gridMapForeign: boolean;
    /**
     * 额外: 海外⽮量地图样式
     */
    vectorMapForeign: string;
    /**
     * 额外: 设置城市
     */
    city: string;
    /**
     * 额外: 设置地图名
     */
    name: string;
    /**
     * 额外：加载插件
     */
    plugins: string[];
    naReady: EventEmitter<any>;
    naComplete: EventEmitter<any>;
    naClick: EventEmitter<any>;
    naDblClick: EventEmitter<any>;
    naRightClick: EventEmitter<any>;
    naMouseMove: EventEmitter<any>;
    naMouseOver: EventEmitter<any>;
    naMouseWheel: EventEmitter<any>;
    naMouseUp: EventEmitter<any>;
    naMouseOut: EventEmitter<any>;
    naMouseDown: EventEmitter<any>;
    naTouchStart: EventEmitter<any>;
    naTouchMove: EventEmitter<any>;
    naTouchEnd: EventEmitter<any>;
    naHotspotClick: EventEmitter<any>;
    naHotspotOver: EventEmitter<any>;
    naHotspotOut: EventEmitter<any>;
    naDragStart: EventEmitter<any>;
    naDragging: EventEmitter<any>;
    naDragEnd: EventEmitter<any>;
    naResize: EventEmitter<any>;
    naZoomStart: EventEmitter<any>;
    naZoomEnd: EventEmitter<any>;
    naZoomChange: EventEmitter<any>;
    naMoveStart: EventEmitter<any>;
    naMoveEnd: EventEmitter<any>;
    naMove: EventEmitter<any>;
    naPluginsLoaded: EventEmitter<AMap.Map>;
    private inited;
    constructor(el: ElementRef, amap: AMapService, pluginLoader: PluginLoaderService, logger: LoggerService, binder: EventBinderService, ngZone: NgZone);
    ngOnInit(): void;
    ngOnDestroy(): void;
    ngOnChanges(changes: SimpleChanges): void;
    /**
     * 获取已创建的 AMap.Map 对象
     */
    get(): import("rxjs").Observable<AMap.Map>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgxAmapComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NgxAmapComponent, "ngx-amap", ["amap"], { "view": "view"; "layers": "layers"; "zoom": "zoom"; "center": "center"; "labelzIndex": "labelzIndex"; "zooms": "zooms"; "lang": "lang"; "defaultCursor": "defaultCursor"; "crs": "crs"; "animateEnable": "animateEnable"; "isHotspot": "isHotspot"; "defaultLayer": "defaultLayer"; "rotateEnable": "rotateEnable"; "resizeEnable": "resizeEnable"; "showIndoorMap": "showIndoorMap"; "indoorMap": "indoorMap"; "expandZoomRange": "expandZoomRange"; "dragEnable": "dragEnable"; "zoomEnable": "zoomEnable"; "doubleClickZoom": "doubleClickZoom"; "keyboardEnable": "keyboardEnable"; "jogEnable": "jogEnable"; "scrollWheel": "scrollWheel"; "touchZoom": "touchZoom"; "touchZoomCenter": "touchZoomCenter"; "mapStyle": "mapStyle"; "features": "features"; "showBuildingBlock": "showBuildingBlock"; "viewMode": "viewMode"; "pitch": "pitch"; "pitchEnable": "pitchEnable"; "buildingAnimation": "buildingAnimation"; "skyColor": "skyColor"; "preloadMode": "preloadMode"; "mask": "mask"; "maxPitch": "maxPitch"; "rotation": "rotation"; "forceVector": "forceVector"; "gridMapForeign": "gridMapForeign"; "vectorMapForeign": "vectorMapForeign"; "city": "city"; "name": "name"; "plugins": "plugins"; }, { "naReady": "naReady"; "naPluginsLoaded": "naPluginsLoaded"; "naComplete": "naComplete"; "naClick": "naClick"; "naDblClick": "naDblClick"; "naRightClick": "naRightClick"; "naMouseMove": "naMouseMove"; "naMouseOver": "naMouseOver"; "naMouseWheel": "naMouseWheel"; "naMouseUp": "naMouseUp"; "naMouseOut": "naMouseOut"; "naMouseDown": "naMouseDown"; "naTouchStart": "naTouchStart"; "naTouchMove": "naTouchMove"; "naTouchEnd": "naTouchEnd"; "naHotspotClick": "naHotspotClick"; "naHotspotOver": "naHotspotOver"; "naHotspotOut": "naHotspotOut"; "naDragStart": "naDragStart"; "naDragging": "naDragging"; "naDragEnd": "naDragEnd"; "naResize": "naResize"; "naZoomStart": "naZoomStart"; "naZoomEnd": "naZoomEnd"; "naZoomChange": "naZoomChange"; "naMoveStart": "naMoveStart"; "naMoveEnd": "naMoveEnd"; "naMove": "naMove"; }, never, ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,