/// <reference types="@types/amap-js-api" />
import { OnDestroy, EventEmitter, SimpleChanges, OnChanges, ElementRef, NgZone } from '@angular/core';
import { Observable } from 'rxjs';
import { LoggerService } from '../../shared/logger/logger.service';
import { EventBinderService } from '../../shared/event-binder.service';
import { AmapInfoWindowService } from './amap-info-window.service';
import { IPixel, ISize } from '../../interfaces';
import { PixelService } from '../../shared/pixel.service';
import { SizeService } from '../../shared/size.service';
import { AMapService } from '../../shared/amap.service';
import * as ɵngcc0 from '@angular/core';
export declare class AmapInfoWindowComponent implements OnChanges, OnDestroy {
    protected os: AmapInfoWindowService;
    protected binder: EventBinderService;
    private amaps;
    private el;
    private logger;
    private pixels;
    private sizes;
    private ngZone;
    /**
     * 是否自定义窗体
     */
    isCustom: boolean;
    /**
     * 是否自动调整窗体到视野内
     */
    autoMove: boolean;
    /**
     * 控制是否在鼠标点击地图后关闭信息窗体
     */
    closeWhenClickMap: boolean;
    /**
     * 显示内容
     */
    content: string | HTMLElement;
    /**
     * 信息窗体尺寸
     */
    size: AMap.SizeValue | ISize;
    /**
     * 信息窗体锚点
     */
    anchor: AMap.InfoWindow.Anchor;
    /**
     * 信息窗体显示位置偏移量
     */
    offset: AMap.Pixel | IPixel;
    /**
     * 信息窗体显示基点位置
     */
    position: AMap.LocationValue;
    /**
     * 是否显示信息窗体阴影
     */
    showShadow: boolean;
    /**
     * 额外：是否开启
     */
    isOpen: boolean;
    naReady: EventEmitter<any>;
    naOpen: EventEmitter<any>;
    naClose: EventEmitter<any>;
    naChange: EventEmitter<any>;
    isOpenChange: EventEmitter<boolean>;
    hostMarker: Observable<AMap.Marker | AMap.Text>;
    private inited;
    private subscriptions;
    constructor(os: AmapInfoWindowService, binder: EventBinderService, amaps: AMapService, el: ElementRef, logger: LoggerService, pixels: PixelService, sizes: SizeService, ngZone: NgZone);
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    /**
     * 获取已创建的 AMap.InfoWindow 对象
     */
    get(): Observable<AMap.InfoWindow<any>>;
    /**
     * 开关窗体
     */
    toggleOpen(): void;
    /**
     * 打开窗体
     */
    open(): void;
    /**
     * 关闭窗体
     */
    close(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AmapInfoWindowComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<AmapInfoWindowComponent, "amap-info-window", never, { "isOpen": "isOpen"; "content": "content"; "isCustom": "isCustom"; "autoMove": "autoMove"; "closeWhenClickMap": "closeWhenClickMap"; "size": "size"; "anchor": "anchor"; "offset": "offset"; "position": "position"; "showShadow": "showShadow"; }, { "naReady": "naReady"; "isOpenChange": "isOpenChange"; "naOpen": "naOpen"; "naClose": "naClose"; "naChange": "naChange"; }, never, ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW1hcC1pbmZvLXdpbmRvdy5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiYW1hcC1pbmZvLXdpbmRvdy5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvLy8gPHJlZmVyZW5jZSB0eXBlcz1cIkB0eXBlcy9hbWFwLWpzLWFwaVwiIC8+XG5pbXBvcnQgeyBPbkRlc3Ryb3ksIEV2ZW50RW1pdHRlciwgU2ltcGxlQ2hhbmdlcywgT25DaGFuZ2VzLCBFbGVtZW50UmVmLCBOZ1pvbmUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IExvZ2dlclNlcnZpY2UgfSBmcm9tICcuLi8uLi9zaGFyZWQvbG9nZ2VyL2xvZ2dlci5zZXJ2aWNlJztcbmltcG9ydCB7IEV2ZW50QmluZGVyU2VydmljZSB9IGZyb20gJy4uLy4uL3NoYXJlZC9ldmVudC1iaW5kZXIuc2VydmljZSc7XG5pbXBvcnQgeyBBbWFwSW5mb1dpbmRvd1NlcnZpY2UgfSBmcm9tICcuL2FtYXAtaW5mby13aW5kb3cuc2VydmljZSc7XG5pbXBvcnQgeyBJUGl4ZWwsIElTaXplIH0gZnJvbSAnLi4vLi4vaW50ZXJmYWNlcyc7XG5pbXBvcnQgeyBQaXhlbFNlcnZpY2UgfSBmcm9tICcuLi8uLi9zaGFyZWQvcGl4ZWwuc2VydmljZSc7XG5pbXBvcnQgeyBTaXplU2VydmljZSB9IGZyb20gJy4uLy4uL3NoYXJlZC9zaXplLnNlcnZpY2UnO1xuaW1wb3J0IHsgQU1hcFNlcnZpY2UgfSBmcm9tICcuLi8uLi9zaGFyZWQvYW1hcC5zZXJ2aWNlJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEFtYXBJbmZvV2luZG93Q29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzLCBPbkRlc3Ryb3kge1xuICAgIHByb3RlY3RlZCBvczogQW1hcEluZm9XaW5kb3dTZXJ2aWNlO1xuICAgIHByb3RlY3RlZCBiaW5kZXI6IEV2ZW50QmluZGVyU2VydmljZTtcbiAgICBwcml2YXRlIGFtYXBzO1xuICAgIHByaXZhdGUgZWw7XG4gICAgcHJpdmF0ZSBsb2dnZXI7XG4gICAgcHJpdmF0ZSBwaXhlbHM7XG4gICAgcHJpdmF0ZSBzaXplcztcbiAgICBwcml2YXRlIG5nWm9uZTtcbiAgICAvKipcbiAgICAgKiDmmK/lkKboh6rlrprkuYnnqpfkvZNcbiAgICAgKi9cbiAgICBpc0N1c3RvbTogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiDmmK/lkKboh6rliqjosIPmlbTnqpfkvZPliLDop4bph47lhoVcbiAgICAgKi9cbiAgICBhdXRvTW92ZTogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiDmjqfliLbmmK/lkKblnKjpvKDmoIfngrnlh7vlnLDlm77lkI7lhbPpl63kv6Hmga/nqpfkvZNcbiAgICAgKi9cbiAgICBjbG9zZVdoZW5DbGlja01hcDogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiDmmL7npLrlhoXlrrlcbiAgICAgKi9cbiAgICBjb250ZW50OiBzdHJpbmcgfCBIVE1MRWxlbWVudDtcbiAgICAvKipcbiAgICAgKiDkv6Hmga/nqpfkvZPlsLrlr7hcbiAgICAgKi9cbiAgICBzaXplOiBBTWFwLlNpemVWYWx1ZSB8IElTaXplO1xuICAgIC8qKlxuICAgICAqIOS/oeaBr+eql+S9k+mUmueCuVxuICAgICAqL1xuICAgIGFuY2hvcjogQU1hcC5JbmZvV2luZG93LkFuY2hvcjtcbiAgICAvKipcbiAgICAgKiDkv6Hmga/nqpfkvZPmmL7npLrkvY3nva7lgY/np7vph49cbiAgICAgKi9cbiAgICBvZmZzZXQ6IEFNYXAuUGl4ZWwgfCBJUGl4ZWw7XG4gICAgLyoqXG4gICAgICog5L+h5oGv56qX5L2T5pi+56S65Z+654K55L2N572uXG4gICAgICovXG4gICAgcG9zaXRpb246IEFNYXAuTG9jYXRpb25WYWx1ZTtcbiAgICAvKipcbiAgICAgKiDmmK/lkKbmmL7npLrkv6Hmga/nqpfkvZPpmLTlvbFcbiAgICAgKi9cbiAgICBzaG93U2hhZG93OiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIOmineWklu+8muaYr+WQpuW8gOWQr1xuICAgICAqL1xuICAgIGlzT3BlbjogYm9vbGVhbjtcbiAgICBuYVJlYWR5OiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBuYU9wZW46IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIG5hQ2xvc2U6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIG5hQ2hhbmdlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBpc09wZW5DaGFuZ2U6IEV2ZW50RW1pdHRlcjxib29sZWFuPjtcbiAgICBob3N0TWFya2VyOiBPYnNlcnZhYmxlPEFNYXAuTWFya2VyIHwgQU1hcC5UZXh0PjtcbiAgICBwcml2YXRlIGluaXRlZDtcbiAgICBwcml2YXRlIHN1YnNjcmlwdGlvbnM7XG4gICAgY29uc3RydWN0b3Iob3M6IEFtYXBJbmZvV2luZG93U2VydmljZSwgYmluZGVyOiBFdmVudEJpbmRlclNlcnZpY2UsIGFtYXBzOiBBTWFwU2VydmljZSwgZWw6IEVsZW1lbnRSZWYsIGxvZ2dlcjogTG9nZ2VyU2VydmljZSwgcGl4ZWxzOiBQaXhlbFNlcnZpY2UsIHNpemVzOiBTaXplU2VydmljZSwgbmdab25lOiBOZ1pvbmUpO1xuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICog6I635Y+W5bey5Yib5bu655qEIEFNYXAuSW5mb1dpbmRvdyDlr7nosaFcbiAgICAgKi9cbiAgICBnZXQoKTogT2JzZXJ2YWJsZTxBTWFwLkluZm9XaW5kb3c8YW55Pj47XG4gICAgLyoqXG4gICAgICog5byA5YWz56qX5L2TXG4gICAgICovXG4gICAgdG9nZ2xlT3BlbigpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIOaJk+W8gOeql+S9k1xuICAgICAqL1xuICAgIG9wZW4oKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiDlhbPpl63nqpfkvZNcbiAgICAgKi9cbiAgICBjbG9zZSgpOiB2b2lkO1xufVxuIl19