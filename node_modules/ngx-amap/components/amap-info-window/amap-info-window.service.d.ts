/// <reference types="@types/amap-js-api" />
import { NgZone } from '@angular/core';
import { Observable } from 'rxjs';
import { AMapService } from '../../shared/amap.service';
import { LoggerService } from '../../shared/logger/logger.service';
import { Getter } from '../../base/interfaces';
import * as ɵngcc0 from '@angular/core';
export declare class AmapInfoWindowService implements Getter<AMap.InfoWindow> {
    private amaps;
    private logger;
    private ngZone;
    private map;
    private infoWindow;
    private infoWindow$;
    constructor(amaps: AMapService, logger: LoggerService, ngZone: NgZone);
    /**
     * 获取信息窗体
     */
    get(): Observable<AMap.InfoWindow<any>>;
    /**
     * 创建 AMap.InfoWindow
     * @param options 选项
     */
    create(options: AMap.InfoWindow.Options): Observable<AMap.InfoWindow<any>>;
    /**
     * 销毁
     */
    destroy(): void;
    /**
     * 打开
     */
    open(position?: AMap.LocationValue): void;
    /**
     * 在覆盖物上打开窗体
     */
    openOnMark(marker: Observable<AMap.Marker | AMap.Text>): void;
    /**
     * 关闭
     */
    close(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AmapInfoWindowService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<AmapInfoWindowService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW1hcC1pbmZvLXdpbmRvdy5zZXJ2aWNlLmQudHMiLCJzb3VyY2VzIjpbImFtYXAtaW5mby13aW5kb3cuc2VydmljZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLy8vIDxyZWZlcmVuY2UgdHlwZXM9XCJAdHlwZXMvYW1hcC1qcy1hcGlcIiAvPlxuaW1wb3J0IHsgTmdab25lIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBBTWFwU2VydmljZSB9IGZyb20gJy4uLy4uL3NoYXJlZC9hbWFwLnNlcnZpY2UnO1xuaW1wb3J0IHsgTG9nZ2VyU2VydmljZSB9IGZyb20gJy4uLy4uL3NoYXJlZC9sb2dnZXIvbG9nZ2VyLnNlcnZpY2UnO1xuaW1wb3J0IHsgR2V0dGVyIH0gZnJvbSAnLi4vLi4vYmFzZS9pbnRlcmZhY2VzJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEFtYXBJbmZvV2luZG93U2VydmljZSBpbXBsZW1lbnRzIEdldHRlcjxBTWFwLkluZm9XaW5kb3c+IHtcbiAgICBwcml2YXRlIGFtYXBzO1xuICAgIHByaXZhdGUgbG9nZ2VyO1xuICAgIHByaXZhdGUgbmdab25lO1xuICAgIHByaXZhdGUgbWFwO1xuICAgIHByaXZhdGUgaW5mb1dpbmRvdztcbiAgICBwcml2YXRlIGluZm9XaW5kb3ckO1xuICAgIGNvbnN0cnVjdG9yKGFtYXBzOiBBTWFwU2VydmljZSwgbG9nZ2VyOiBMb2dnZXJTZXJ2aWNlLCBuZ1pvbmU6IE5nWm9uZSk7XG4gICAgLyoqXG4gICAgICog6I635Y+W5L+h5oGv56qX5L2TXG4gICAgICovXG4gICAgZ2V0KCk6IE9ic2VydmFibGU8QU1hcC5JbmZvV2luZG93PGFueT4+O1xuICAgIC8qKlxuICAgICAqIOWIm+W7uiBBTWFwLkluZm9XaW5kb3dcbiAgICAgKiBAcGFyYW0gb3B0aW9ucyDpgInpoblcbiAgICAgKi9cbiAgICBjcmVhdGUob3B0aW9uczogQU1hcC5JbmZvV2luZG93Lk9wdGlvbnMpOiBPYnNlcnZhYmxlPEFNYXAuSW5mb1dpbmRvdzxhbnk+PjtcbiAgICAvKipcbiAgICAgKiDplIDmr4FcbiAgICAgKi9cbiAgICBkZXN0cm95KCk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICog5omT5byAXG4gICAgICovXG4gICAgb3Blbihwb3NpdGlvbj86IEFNYXAuTG9jYXRpb25WYWx1ZSk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICog5Zyo6KaG55uW54mp5LiK5omT5byA56qX5L2TXG4gICAgICovXG4gICAgb3Blbk9uTWFyayhtYXJrZXI6IE9ic2VydmFibGU8QU1hcC5NYXJrZXIgfCBBTWFwLlRleHQ+KTogdm9pZDtcbiAgICAvKipcbiAgICAgKiDlhbPpl61cbiAgICAgKi9cbiAgICBjbG9zZSgpOiB2b2lkO1xufVxuIl19