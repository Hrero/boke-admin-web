/**
 * @fileoverview added by tsickle
 * Generated from: ngx-amap.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Generated bundle index. Do not edit.
 */
export { NgxAmapModule, NgxAmapComponent, AmapMarkerDirective, AmapPolylineDirective, AmapInfoWindowComponent, AmapTextComponent, AmapPolygonDirective, AmapBezierCurveDirective, AmapRectangleDirective, AmapCircleDirective, AmapCircleMarkerDirective, AmapEllipseDirective, AmapToolBarDirective, AmapMarkerClustererDirective, AmapHeatmapDirective, InputAmapAutocompleteDirective, AmapPluginLoaderService, AmapUILoaderService, AMapLoaderService, AmapAutocompleteService, UISimpleMarkerDirective, UIAwesomeMarkerDirective, EventBinderService } from './public-api';
export { AMapCircle as ɵx } from './base/amap-circle';
export { AMapOverlay as ɵf } from './base/amap-overlay';
export { AMapPathOverlay as ɵp } from './base/amap-path-overlay';
export { AMapPolygon as ɵt } from './base/amap-polygon';
export { AMapShapeOverlay as ɵq } from './base/amap-shape-overlay';
export { AmapInfoWindowService as ɵk } from './components/amap-info-window/amap-info-window.service';
export { AmapTextService as ɵs } from './components/amap-text/amap-text.service';
export { AmapBezierCurveService as ɵv } from './directives/amap-bezier-curve/amap-bezier-curve.service';
export { AmapCircleMarkerService as ɵz } from './directives/amap-circle-marker/amap-circle-marker.service';
export { AmapCircleService as ɵy } from './directives/amap-circle/amap-circle.service';
export { AmapEllipseService as ɵba } from './directives/amap-ellipse/amap-ellipse.service';
export { AmapHeatmapService as ɵbd } from './directives/amap-heatmap/amap-heatmap.service';
export { AmapMarkerClustererService as ɵbc } from './directives/amap-marker-clusterer/amap-marker-clusterer.service';
export { AmapMarkerService as ɵj } from './directives/amap-marker/amap-marker.service';
export { AmapPolygonService as ɵu } from './directives/amap-polygon/amap-polygon.service';
export { AmapPolylineService as ɵr } from './directives/amap-polyline/amap-polyline.service';
export { AmapRectangleService as ɵw } from './directives/amap-rectangle/amap-rectangle.service';
export { AmapToolBarService as ɵbb } from './directives/amap-tool-bar/amap-tool-bar.service';
export { UIAwesomeMarkerService as ɵbg } from './directives/ui-awesome-marker/ui-awesome-marker.service';
export { UISimpleMarker as ɵbe } from './directives/ui-simple-marker/ui-simple-marker';
export { UISimpleMarkerService as ɵbf } from './directives/ui-simple-marker/ui-simple-marker.service';
export { AMapService as ɵa } from './shared/amap.service';
export { IconService as ɵn } from './shared/icon.service';
export { DebugLoggerService as ɵbh } from './shared/logger/debug-logger.service';
export { LoggerService as ɵd } from './shared/logger/logger.service';
export { MarkerLabelService as ɵo } from './shared/marker-label.service';
export { NGX_AMAP_CONFIG as ɵc } from './shared/ngx-amap-config';
export { PixelService as ɵl } from './shared/pixel.service';
export { PluginLoaderService as ɵe } from './shared/plugin-loader.service';
export { SizeService as ɵm } from './shared/size.service';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWFtYXAuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtYW1hcC8iLCJzb3VyY2VzIjpbIm5neC1hbWFwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBSUEsaWlCQUFjLGNBQWMsQ0FBQztBQUU3QixPQUFPLEVBQUMsVUFBVSxJQUFJLEVBQUUsRUFBQyxNQUFNLG9CQUFvQixDQUFDO0FBQ3BELE9BQU8sRUFBQyxXQUFXLElBQUksRUFBRSxFQUFDLE1BQU0scUJBQXFCLENBQUM7QUFDdEQsT0FBTyxFQUFDLGVBQWUsSUFBSSxFQUFFLEVBQUMsTUFBTSwwQkFBMEIsQ0FBQztBQUMvRCxPQUFPLEVBQUMsV0FBVyxJQUFJLEVBQUUsRUFBQyxNQUFNLHFCQUFxQixDQUFDO0FBQ3RELE9BQU8sRUFBQyxnQkFBZ0IsSUFBSSxFQUFFLEVBQUMsTUFBTSwyQkFBMkIsQ0FBQztBQUVqRSxPQUFPLEVBQUMscUJBQXFCLElBQUksRUFBRSxFQUFDLE1BQU0sd0RBQXdELENBQUM7QUFDbkcsT0FBTyxFQUFDLGVBQWUsSUFBSSxFQUFFLEVBQUMsTUFBTSwwQ0FBMEMsQ0FBQztBQUMvRSxPQUFPLEVBQUMsc0JBQXNCLElBQUksRUFBRSxFQUFDLE1BQU0sMERBQTBELENBQUM7QUFDdEcsT0FBTyxFQUFDLHVCQUF1QixJQUFJLEVBQUUsRUFBQyxNQUFNLDREQUE0RCxDQUFDO0FBQ3pHLE9BQU8sRUFBQyxpQkFBaUIsSUFBSSxFQUFFLEVBQUMsTUFBTSw4Q0FBOEMsQ0FBQztBQUNyRixPQUFPLEVBQUMsa0JBQWtCLElBQUksR0FBRyxFQUFDLE1BQU0sZ0RBQWdELENBQUM7QUFDekYsT0FBTyxFQUFDLGtCQUFrQixJQUFJLEdBQUcsRUFBQyxNQUFNLGdEQUFnRCxDQUFDO0FBQ3pGLE9BQU8sRUFBQywwQkFBMEIsSUFBSSxHQUFHLEVBQUMsTUFBTSxrRUFBa0UsQ0FBQztBQUNuSCxPQUFPLEVBQUMsaUJBQWlCLElBQUksRUFBRSxFQUFDLE1BQU0sOENBQThDLENBQUM7QUFDckYsT0FBTyxFQUFDLGtCQUFrQixJQUFJLEVBQUUsRUFBQyxNQUFNLGdEQUFnRCxDQUFDO0FBQ3hGLE9BQU8sRUFBQyxtQkFBbUIsSUFBSSxFQUFFLEVBQUMsTUFBTSxrREFBa0QsQ0FBQztBQUMzRixPQUFPLEVBQUMsb0JBQW9CLElBQUksRUFBRSxFQUFDLE1BQU0sb0RBQW9ELENBQUM7QUFDOUYsT0FBTyxFQUFDLGtCQUFrQixJQUFJLEdBQUcsRUFBQyxNQUFNLGtEQUFrRCxDQUFDO0FBQzNGLE9BQU8sRUFBQyxzQkFBc0IsSUFBSSxHQUFHLEVBQUMsTUFBTSwwREFBMEQsQ0FBQztBQUN2RyxPQUFPLEVBQUMsY0FBYyxJQUFJLEdBQUcsRUFBQyxNQUFNLGdEQUFnRCxDQUFDO0FBQ3JGLE9BQU8sRUFBQyxxQkFBcUIsSUFBSSxHQUFHLEVBQUMsTUFBTSx3REFBd0QsQ0FBQztBQUNwRyxPQUFPLEVBQUMsV0FBVyxJQUFJLEVBQUUsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBQ3hELE9BQU8sRUFBQyxXQUFXLElBQUksRUFBRSxFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFDeEQsT0FBTyxFQUFDLGtCQUFrQixJQUFJLEdBQUcsRUFBQyxNQUFNLHNDQUFzQyxDQUFDO0FBQy9FLE9BQU8sRUFBQyxhQUFhLElBQUksRUFBRSxFQUFDLE1BQU0sZ0NBQWdDLENBQUM7QUFDbkUsT0FBTyxFQUFDLGtCQUFrQixJQUFJLEVBQUUsRUFBQyxNQUFNLCtCQUErQixDQUFDO0FBQ3ZFLE9BQU8sRUFBQyxlQUFlLElBQUksRUFBRSxFQUFxQixNQUFNLDBCQUEwQixDQUFDO0FBQ25GLE9BQU8sRUFBQyxZQUFZLElBQUksRUFBRSxFQUFDLE1BQU0sd0JBQXdCLENBQUM7QUFDMUQsT0FBTyxFQUFDLG1CQUFtQixJQUFJLEVBQUUsRUFBQyxNQUFNLGdDQUFnQyxDQUFDO0FBQ3pFLE9BQU8sRUFBQyxXQUFXLElBQUksRUFBRSxFQUFDLE1BQU0sdUJBQXVCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdlbmVyYXRlZCBidW5kbGUgaW5kZXguIERvIG5vdCBlZGl0LlxuICovXG5cbmV4cG9ydCAqIGZyb20gJy4vcHVibGljLWFwaSc7XG5cbmV4cG9ydCB7QU1hcENpcmNsZSBhcyDJtXh9IGZyb20gJy4vYmFzZS9hbWFwLWNpcmNsZSc7XG5leHBvcnQge0FNYXBPdmVybGF5IGFzIMm1Zn0gZnJvbSAnLi9iYXNlL2FtYXAtb3ZlcmxheSc7XG5leHBvcnQge0FNYXBQYXRoT3ZlcmxheSBhcyDJtXB9IGZyb20gJy4vYmFzZS9hbWFwLXBhdGgtb3ZlcmxheSc7XG5leHBvcnQge0FNYXBQb2x5Z29uIGFzIMm1dH0gZnJvbSAnLi9iYXNlL2FtYXAtcG9seWdvbic7XG5leHBvcnQge0FNYXBTaGFwZU92ZXJsYXkgYXMgybVxfSBmcm9tICcuL2Jhc2UvYW1hcC1zaGFwZS1vdmVybGF5JztcbmV4cG9ydCB7R2V0dGVyIGFzIMm1ZyxXaXRoQ3JlYXRlIGFzIMm1aSxXaXRoRWRpdG9yIGFzIMm1aH0gZnJvbSAnLi9iYXNlL2ludGVyZmFjZXMnO1xuZXhwb3J0IHtBbWFwSW5mb1dpbmRvd1NlcnZpY2UgYXMgybVrfSBmcm9tICcuL2NvbXBvbmVudHMvYW1hcC1pbmZvLXdpbmRvdy9hbWFwLWluZm8td2luZG93LnNlcnZpY2UnO1xuZXhwb3J0IHtBbWFwVGV4dFNlcnZpY2UgYXMgybVzfSBmcm9tICcuL2NvbXBvbmVudHMvYW1hcC10ZXh0L2FtYXAtdGV4dC5zZXJ2aWNlJztcbmV4cG9ydCB7QW1hcEJlemllckN1cnZlU2VydmljZSBhcyDJtXZ9IGZyb20gJy4vZGlyZWN0aXZlcy9hbWFwLWJlemllci1jdXJ2ZS9hbWFwLWJlemllci1jdXJ2ZS5zZXJ2aWNlJztcbmV4cG9ydCB7QW1hcENpcmNsZU1hcmtlclNlcnZpY2UgYXMgybV6fSBmcm9tICcuL2RpcmVjdGl2ZXMvYW1hcC1jaXJjbGUtbWFya2VyL2FtYXAtY2lyY2xlLW1hcmtlci5zZXJ2aWNlJztcbmV4cG9ydCB7QW1hcENpcmNsZVNlcnZpY2UgYXMgybV5fSBmcm9tICcuL2RpcmVjdGl2ZXMvYW1hcC1jaXJjbGUvYW1hcC1jaXJjbGUuc2VydmljZSc7XG5leHBvcnQge0FtYXBFbGxpcHNlU2VydmljZSBhcyDJtWJhfSBmcm9tICcuL2RpcmVjdGl2ZXMvYW1hcC1lbGxpcHNlL2FtYXAtZWxsaXBzZS5zZXJ2aWNlJztcbmV4cG9ydCB7QW1hcEhlYXRtYXBTZXJ2aWNlIGFzIMm1YmR9IGZyb20gJy4vZGlyZWN0aXZlcy9hbWFwLWhlYXRtYXAvYW1hcC1oZWF0bWFwLnNlcnZpY2UnO1xuZXhwb3J0IHtBbWFwTWFya2VyQ2x1c3RlcmVyU2VydmljZSBhcyDJtWJjfSBmcm9tICcuL2RpcmVjdGl2ZXMvYW1hcC1tYXJrZXItY2x1c3RlcmVyL2FtYXAtbWFya2VyLWNsdXN0ZXJlci5zZXJ2aWNlJztcbmV4cG9ydCB7QW1hcE1hcmtlclNlcnZpY2UgYXMgybVqfSBmcm9tICcuL2RpcmVjdGl2ZXMvYW1hcC1tYXJrZXIvYW1hcC1tYXJrZXIuc2VydmljZSc7XG5leHBvcnQge0FtYXBQb2x5Z29uU2VydmljZSBhcyDJtXV9IGZyb20gJy4vZGlyZWN0aXZlcy9hbWFwLXBvbHlnb24vYW1hcC1wb2x5Z29uLnNlcnZpY2UnO1xuZXhwb3J0IHtBbWFwUG9seWxpbmVTZXJ2aWNlIGFzIMm1cn0gZnJvbSAnLi9kaXJlY3RpdmVzL2FtYXAtcG9seWxpbmUvYW1hcC1wb2x5bGluZS5zZXJ2aWNlJztcbmV4cG9ydCB7QW1hcFJlY3RhbmdsZVNlcnZpY2UgYXMgybV3fSBmcm9tICcuL2RpcmVjdGl2ZXMvYW1hcC1yZWN0YW5nbGUvYW1hcC1yZWN0YW5nbGUuc2VydmljZSc7XG5leHBvcnQge0FtYXBUb29sQmFyU2VydmljZSBhcyDJtWJifSBmcm9tICcuL2RpcmVjdGl2ZXMvYW1hcC10b29sLWJhci9hbWFwLXRvb2wtYmFyLnNlcnZpY2UnO1xuZXhwb3J0IHtVSUF3ZXNvbWVNYXJrZXJTZXJ2aWNlIGFzIMm1Ymd9IGZyb20gJy4vZGlyZWN0aXZlcy91aS1hd2Vzb21lLW1hcmtlci91aS1hd2Vzb21lLW1hcmtlci5zZXJ2aWNlJztcbmV4cG9ydCB7VUlTaW1wbGVNYXJrZXIgYXMgybViZX0gZnJvbSAnLi9kaXJlY3RpdmVzL3VpLXNpbXBsZS1tYXJrZXIvdWktc2ltcGxlLW1hcmtlcic7XG5leHBvcnQge1VJU2ltcGxlTWFya2VyU2VydmljZSBhcyDJtWJmfSBmcm9tICcuL2RpcmVjdGl2ZXMvdWktc2ltcGxlLW1hcmtlci91aS1zaW1wbGUtbWFya2VyLnNlcnZpY2UnO1xuZXhwb3J0IHtBTWFwU2VydmljZSBhcyDJtWF9IGZyb20gJy4vc2hhcmVkL2FtYXAuc2VydmljZSc7XG5leHBvcnQge0ljb25TZXJ2aWNlIGFzIMm1bn0gZnJvbSAnLi9zaGFyZWQvaWNvbi5zZXJ2aWNlJztcbmV4cG9ydCB7RGVidWdMb2dnZXJTZXJ2aWNlIGFzIMm1Ymh9IGZyb20gJy4vc2hhcmVkL2xvZ2dlci9kZWJ1Zy1sb2dnZXIuc2VydmljZSc7XG5leHBvcnQge0xvZ2dlclNlcnZpY2UgYXMgybVkfSBmcm9tICcuL3NoYXJlZC9sb2dnZXIvbG9nZ2VyLnNlcnZpY2UnO1xuZXhwb3J0IHtNYXJrZXJMYWJlbFNlcnZpY2UgYXMgybVvfSBmcm9tICcuL3NoYXJlZC9tYXJrZXItbGFiZWwuc2VydmljZSc7XG5leHBvcnQge05HWF9BTUFQX0NPTkZJRyBhcyDJtWMsTmd4QW1hcENvbmZpZyBhcyDJtWJ9IGZyb20gJy4vc2hhcmVkL25neC1hbWFwLWNvbmZpZyc7XG5leHBvcnQge1BpeGVsU2VydmljZSBhcyDJtWx9IGZyb20gJy4vc2hhcmVkL3BpeGVsLnNlcnZpY2UnO1xuZXhwb3J0IHtQbHVnaW5Mb2FkZXJTZXJ2aWNlIGFzIMm1ZX0gZnJvbSAnLi9zaGFyZWQvcGx1Z2luLWxvYWRlci5zZXJ2aWNlJztcbmV4cG9ydCB7U2l6ZVNlcnZpY2UgYXMgybVtfSBmcm9tICcuL3NoYXJlZC9zaXplLnNlcnZpY2UnOyJdfQ==