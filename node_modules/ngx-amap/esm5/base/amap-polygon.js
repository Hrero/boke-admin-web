/**
 * @fileoverview added by tsickle
 * Generated from: base/amap-polygon.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Input, Output, EventEmitter } from '@angular/core';
import { AMapPathOverlay, PathOverlayOptions } from './amap-path-overlay';
/** @type {?} */
export var PolygonOptions = tslib_1.__spread(PathOverlayOptions, ['fillColor', 'fillOpacity', 'path']);
/**
 * @template T, E
 */
var AMapPolygon = /** @class */ (function (_super) {
    tslib_1.__extends(AMapPolygon, _super);
    function AMapPolygon(os, binder) {
        var _this = _super.call(this, os, binder) || this;
        _this.os = os;
        _this.binder = binder;
        /**
         * 额外: 是否隐藏
         */
        _this.hidden = false;
        /**
         * 额外: 是否开启编辑器
         */
        _this.editor = false;
        // directive events:
        _this.naReady = new EventEmitter();
        /** @type {?} */
        var editor = _this.os.getEditor();
        _this.naEditorAddNode = _this.binder.bindEvent(editor, 'addnode');
        _this.naEditorRemoveNode = _this.binder.bindEvent(editor, 'removenode');
        _this.naEditorAdjust = _this.binder.bindEvent(editor, 'adjust');
        _this.naEditorEnd = _this.binder.bindEvent(editor, 'end');
        return _this;
    }
    AMapPolygon.propDecorators = {
        path: [{ type: Input }],
        fillColor: [{ type: Input }],
        fillOpacity: [{ type: Input }],
        hidden: [{ type: Input }],
        editor: [{ type: Input }],
        options: [{ type: Input }],
        naReady: [{ type: Output }],
        naEditorAddNode: [{ type: Output }],
        naEditorRemoveNode: [{ type: Output }],
        naEditorAdjust: [{ type: Output }],
        naEditorEnd: [{ type: Output }]
    };
    return AMapPolygon;
}(AMapPathOverlay));
export { AMapPolygon };
if (false) {
    /**
     * 多边形轮廓线的节点坐标数组
     * @type {?}
     */
    AMapPolygon.prototype.path;
    /**
     * 多边形填充颜色
     * @type {?}
     */
    AMapPolygon.prototype.fillColor;
    /**
     * 边形填充透明度
     * @type {?}
     */
    AMapPolygon.prototype.fillOpacity;
    /**
     * 额外: 是否隐藏
     * @type {?}
     */
    AMapPolygon.prototype.hidden;
    /**
     * 额外: 是否开启编辑器
     * @type {?}
     */
    AMapPolygon.prototype.editor;
    /**
     * 额外: 会覆盖其他属性的配置方式
     * @type {?}
     */
    AMapPolygon.prototype.options;
    /** @type {?} */
    AMapPolygon.prototype.naReady;
    /** @type {?} */
    AMapPolygon.prototype.naEditorAddNode;
    /** @type {?} */
    AMapPolygon.prototype.naEditorRemoveNode;
    /** @type {?} */
    AMapPolygon.prototype.naEditorAdjust;
    /** @type {?} */
    AMapPolygon.prototype.naEditorEnd;
    /**
     * @type {?}
     * @protected
     */
    AMapPolygon.prototype.os;
    /**
     * @type {?}
     * @protected
     */
    AMapPolygon.prototype.binder;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW1hcC1wb2x5Z29uLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWFtYXAvIiwic291cmNlcyI6WyJiYXNlL2FtYXAtcG9seWdvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFNUQsT0FBTyxFQUFFLGVBQWUsRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDOztBQUcxRSxNQUFNLEtBQU8sY0FBYyxvQkFBTyxrQkFBa0IsR0FBRSxXQUFXLEVBQUUsYUFBYSxFQUFFLE1BQU0sRUFBQzs7OztBQUV6RjtJQUdVLHVDQUFrQjtJQW9DMUIscUJBQXNCLEVBQW9CLEVBQVksTUFBMEI7UUFBaEYsWUFDRSxrQkFBTSxFQUFFLEVBQUUsTUFBTSxDQUFDLFNBTWxCO1FBUHFCLFFBQUUsR0FBRixFQUFFLENBQWtCO1FBQVksWUFBTSxHQUFOLE1BQU0sQ0FBb0I7Ozs7UUFuQnZFLFlBQU0sR0FBRyxLQUFLLENBQUM7Ozs7UUFJZixZQUFNLEdBQUcsS0FBSyxDQUFDOztRQU9kLGFBQU8sR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDOztZQVUvQixNQUFNLEdBQUcsS0FBSSxDQUFDLEVBQUUsQ0FBQyxTQUFTLEVBQUU7UUFDbEMsS0FBSSxDQUFDLGVBQWUsR0FBRyxLQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDaEUsS0FBSSxDQUFDLGtCQUFrQixHQUFHLEtBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLE1BQU0sRUFBRSxZQUFZLENBQUMsQ0FBQztRQUN0RSxLQUFJLENBQUMsY0FBYyxHQUFHLEtBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQztRQUM5RCxLQUFJLENBQUMsV0FBVyxHQUFHLEtBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQzs7SUFDMUQsQ0FBQzs7dUJBdENBLEtBQUs7NEJBSUwsS0FBSzs4QkFJTCxLQUFLO3lCQUlMLEtBQUs7eUJBSUwsS0FBSzswQkFJTCxLQUFLOzBCQUdMLE1BQU07a0NBR04sTUFBTTtxQ0FDTixNQUFNO2lDQUNOLE1BQU07OEJBQ04sTUFBTTs7SUFVVCxrQkFBQztDQUFBLEFBL0NELENBR1UsZUFBZSxHQTRDeEI7U0EvQ1ksV0FBVzs7Ozs7O0lBUXRCLDJCQUE4RDs7Ozs7SUFJOUQsZ0NBQTRCOzs7OztJQUk1QixrQ0FBOEI7Ozs7O0lBSTlCLDZCQUF3Qjs7Ozs7SUFJeEIsNkJBQXdCOzs7OztJQUl4Qiw4QkFBdUM7O0lBR3ZDLDhCQUF1Qzs7SUFHdkMsc0NBQTZDOztJQUM3Qyx5Q0FBZ0Q7O0lBQ2hELHFDQUE0Qzs7SUFDNUMsa0NBQXlDOzs7OztJQUU3Qix5QkFBOEI7Ozs7O0lBQUUsNkJBQW9DIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBXaXRoRWRpdG9yIH0gZnJvbSAnLi9pbnRlcmZhY2VzJztcbmltcG9ydCB7IEFNYXBQYXRoT3ZlcmxheSwgUGF0aE92ZXJsYXlPcHRpb25zIH0gZnJvbSAnLi9hbWFwLXBhdGgtb3ZlcmxheSc7XG5pbXBvcnQgeyBFdmVudEJpbmRlclNlcnZpY2UgfSBmcm9tICcuLi9zaGFyZWQvZXZlbnQtYmluZGVyLnNlcnZpY2UnO1xuXG5leHBvcnQgY29uc3QgUG9seWdvbk9wdGlvbnMgPSBbLi4uUGF0aE92ZXJsYXlPcHRpb25zLCAnZmlsbENvbG9yJywgJ2ZpbGxPcGFjaXR5JywgJ3BhdGgnXTtcblxuZXhwb3J0IGNsYXNzIEFNYXBQb2x5Z29uPFxuICBUIGV4dGVuZHMgQU1hcC5FdmVudEVtaXR0ZXIsXG4gIEUgZXh0ZW5kcyBBTWFwLkV2ZW50RW1pdHRlclxuPiBleHRlbmRzIEFNYXBQYXRoT3ZlcmxheTxUPiB7XG4gIC8vIC0tLS0gT3B0aW9ucyAtLS0tXG4gIC8qKlxuICAgKiDlpJrovrnlvaLova7lu5Pnur/nmoToioLngrnlnZDmoIfmlbDnu4RcbiAgICovXG4gIEBJbnB1dCgpIHBhdGg/OiBBTWFwLkxvY2F0aW9uVmFsdWVbXSB8IEFNYXAuTG9jYXRpb25WYWx1ZVtdW107XG4gIC8qKlxuICAgKiDlpJrovrnlvaLloavlhYXpopzoibJcbiAgICovXG4gIEBJbnB1dCgpIGZpbGxDb2xvcj86IHN0cmluZztcbiAgLyoqXG4gICAqIOi+ueW9ouWhq+WFhemAj+aYjuW6plxuICAgKi9cbiAgQElucHV0KCkgZmlsbE9wYWNpdHk/OiBudW1iZXI7XG4gIC8qKlxuICAgKiDpop3lpJY6IOaYr+WQpumakOiXj1xuICAgKi9cbiAgQElucHV0KCkgaGlkZGVuID0gZmFsc2U7XG4gIC8qKlxuICAgKiDpop3lpJY6IOaYr+WQpuW8gOWQr+e8lui+keWZqFxuICAgKi9cbiAgQElucHV0KCkgZWRpdG9yID0gZmFsc2U7XG4gIC8qKlxuICAgKiDpop3lpJY6IOS8muimhuebluWFtuS7luWxnuaAp+eahOmFjee9ruaWueW8j1xuICAgKi9cbiAgQElucHV0KCkgb3B0aW9uczogQU1hcC5Qb2x5Z29uLk9wdGlvbnM7XG5cbiAgLy8gZGlyZWN0aXZlIGV2ZW50czpcbiAgQE91dHB1dCgpIG5hUmVhZHkgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgLy8gZWRpdG9yIGV2ZW50czpcbiAgQE91dHB1dCgpIG5hRWRpdG9yQWRkTm9kZTogRXZlbnRFbWl0dGVyPGFueT47XG4gIEBPdXRwdXQoKSBuYUVkaXRvclJlbW92ZU5vZGU6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICBAT3V0cHV0KCkgbmFFZGl0b3JBZGp1c3Q6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICBAT3V0cHV0KCkgbmFFZGl0b3JFbmQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuXG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBvczogV2l0aEVkaXRvcjxULCBFPiwgcHJvdGVjdGVkIGJpbmRlcjogRXZlbnRCaW5kZXJTZXJ2aWNlKSB7XG4gICAgc3VwZXIob3MsIGJpbmRlcik7XG4gICAgY29uc3QgZWRpdG9yID0gdGhpcy5vcy5nZXRFZGl0b3IoKTtcbiAgICB0aGlzLm5hRWRpdG9yQWRkTm9kZSA9IHRoaXMuYmluZGVyLmJpbmRFdmVudChlZGl0b3IsICdhZGRub2RlJyk7XG4gICAgdGhpcy5uYUVkaXRvclJlbW92ZU5vZGUgPSB0aGlzLmJpbmRlci5iaW5kRXZlbnQoZWRpdG9yLCAncmVtb3Zlbm9kZScpO1xuICAgIHRoaXMubmFFZGl0b3JBZGp1c3QgPSB0aGlzLmJpbmRlci5iaW5kRXZlbnQoZWRpdG9yLCAnYWRqdXN0Jyk7XG4gICAgdGhpcy5uYUVkaXRvckVuZCA9IHRoaXMuYmluZGVyLmJpbmRFdmVudChlZGl0b3IsICdlbmQnKTtcbiAgfVxufVxuIl19