/**
 * @fileoverview added by tsickle
 * Generated from: base/amap-overlay.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Input, Output, EventEmitter } from '@angular/core';
/** @type {?} */
export var OverlayOptions = ['cursor', 'extData', 'bubble', 'clickable', 'draggable'];
/**
 * @template T
 */
var AMapOverlay = /** @class */ (function () {
    function AMapOverlay(os, binder) {
        this.os = os;
        this.binder = binder;
        /** @type {?} */
        var target = os.get();
        this.naTouchStart = this.binder.bindEvent(target, 'touchstart');
        this.naTouchMove = this.binder.bindEvent(target, 'touchmove');
        this.naTouchEnd = this.binder.bindEvent(target, 'touchend');
        this.naClick = this.binder.bindEvent(target, 'click');
        this.naDblClick = this.binder.bindEvent(target, 'dblclick');
        this.naRightClick = this.binder.bindEvent(target, 'rightclick');
        this.naMouseOver = this.binder.bindEvent(target, 'mouseover');
        this.naMouseUp = this.binder.bindEvent(target, 'mouseup');
        this.naMouseOut = this.binder.bindEvent(target, 'mouseout');
        this.naMouseDown = this.binder.bindEvent(target, 'mousedown');
    }
    AMapOverlay.propDecorators = {
        cursor: [{ type: Input }],
        extData: [{ type: Input }],
        bubble: [{ type: Input }],
        clickable: [{ type: Input }],
        draggable: [{ type: Input }],
        naTouchStart: [{ type: Output }],
        naTouchMove: [{ type: Output }],
        naTouchEnd: [{ type: Output }],
        naClick: [{ type: Output }],
        naDblClick: [{ type: Output }],
        naRightClick: [{ type: Output }],
        naMouseOver: [{ type: Output }],
        naMouseUp: [{ type: Output }],
        naMouseOut: [{ type: Output }],
        naMouseDown: [{ type: Output }]
    };
    return AMapOverlay;
}());
export { AMapOverlay };
if (false) {
    /**
     * 鼠标悬停时的鼠标样式
     * @type {?}
     */
    AMapOverlay.prototype.cursor;
    /**
     * 自定义数据
     * @type {?}
     */
    AMapOverlay.prototype.extData;
    /**
     * 事件是否穿透到地图
     * @type {?}
     */
    AMapOverlay.prototype.bubble;
    /**
     * 是否支持点击
     * @type {?}
     */
    AMapOverlay.prototype.clickable;
    /**
     * 是否支持拖拽
     * @type {?}
     */
    AMapOverlay.prototype.draggable;
    /** @type {?} */
    AMapOverlay.prototype.naTouchStart;
    /** @type {?} */
    AMapOverlay.prototype.naTouchMove;
    /** @type {?} */
    AMapOverlay.prototype.naTouchEnd;
    /** @type {?} */
    AMapOverlay.prototype.naClick;
    /** @type {?} */
    AMapOverlay.prototype.naDblClick;
    /** @type {?} */
    AMapOverlay.prototype.naRightClick;
    /** @type {?} */
    AMapOverlay.prototype.naMouseOver;
    /** @type {?} */
    AMapOverlay.prototype.naMouseUp;
    /** @type {?} */
    AMapOverlay.prototype.naMouseOut;
    /** @type {?} */
    AMapOverlay.prototype.naMouseDown;
    /**
     * @type {?}
     * @protected
     */
    AMapOverlay.prototype.os;
    /**
     * @type {?}
     * @protected
     */
    AMapOverlay.prototype.binder;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW1hcC1vdmVybGF5LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWFtYXAvIiwic291cmNlcyI6WyJiYXNlL2FtYXAtb3ZlcmxheS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFJNUQsTUFBTSxLQUFPLGNBQWMsR0FBRyxDQUFDLFFBQVEsRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLFdBQVcsRUFBRSxXQUFXLENBQUM7Ozs7QUFFdkY7SUFtQ0UscUJBQXNCLEVBQWEsRUFBWSxNQUEwQjtRQUFuRCxPQUFFLEdBQUYsRUFBRSxDQUFXO1FBQVksV0FBTSxHQUFOLE1BQU0sQ0FBb0I7O1lBQ2pFLE1BQU0sR0FBRyxFQUFFLENBQUMsR0FBRyxFQUFFO1FBQ3ZCLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsTUFBTSxFQUFFLFlBQVksQ0FBQyxDQUFDO1FBQ2hFLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsTUFBTSxFQUFFLFdBQVcsQ0FBQyxDQUFDO1FBQzlELElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsTUFBTSxFQUFFLFVBQVUsQ0FBQyxDQUFDO1FBQzVELElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsTUFBTSxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBQ3RELElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsTUFBTSxFQUFFLFVBQVUsQ0FBQyxDQUFDO1FBQzVELElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsTUFBTSxFQUFFLFlBQVksQ0FBQyxDQUFDO1FBQ2hFLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsTUFBTSxFQUFFLFdBQVcsQ0FBQyxDQUFDO1FBQzlELElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsTUFBTSxFQUFFLFNBQVMsQ0FBQyxDQUFDO1FBQzFELElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsTUFBTSxFQUFFLFVBQVUsQ0FBQyxDQUFDO1FBQzVELElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsTUFBTSxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBQ2hFLENBQUM7O3lCQTFDQSxLQUFLOzBCQUlMLEtBQUs7eUJBSUwsS0FBSzs0QkFJTCxLQUFLOzRCQUlMLEtBQUs7K0JBR0wsTUFBTTs4QkFDTixNQUFNOzZCQUNOLE1BQU07MEJBQ04sTUFBTTs2QkFDTixNQUFNOytCQUNOLE1BQU07OEJBQ04sTUFBTTs0QkFDTixNQUFNOzZCQUNOLE1BQU07OEJBQ04sTUFBTTs7SUFlVCxrQkFBQztDQUFBLEFBaERELElBZ0RDO1NBaERZLFdBQVc7Ozs7OztJQUt0Qiw2QkFBd0I7Ozs7O0lBSXhCLDhCQUFzQjs7Ozs7SUFJdEIsNkJBQXlCOzs7OztJQUl6QixnQ0FBNEI7Ozs7O0lBSTVCLGdDQUE0Qjs7SUFHNUIsbUNBQTBDOztJQUMxQyxrQ0FBeUM7O0lBQ3pDLGlDQUF3Qzs7SUFDeEMsOEJBQXFDOztJQUNyQyxpQ0FBd0M7O0lBQ3hDLG1DQUEwQzs7SUFDMUMsa0NBQXlDOztJQUN6QyxnQ0FBdUM7O0lBQ3ZDLGlDQUF3Qzs7SUFDeEMsa0NBQXlDOzs7OztJQUU3Qix5QkFBdUI7Ozs7O0lBQUUsNkJBQW9DIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBHZXR0ZXIgfSBmcm9tICcuL2ludGVyZmFjZXMnO1xuaW1wb3J0IHsgRXZlbnRCaW5kZXJTZXJ2aWNlIH0gZnJvbSAnLi4vc2hhcmVkL2V2ZW50LWJpbmRlci5zZXJ2aWNlJztcblxuZXhwb3J0IGNvbnN0IE92ZXJsYXlPcHRpb25zID0gWydjdXJzb3InLCAnZXh0RGF0YScsICdidWJibGUnLCAnY2xpY2thYmxlJywgJ2RyYWdnYWJsZSddO1xuXG5leHBvcnQgY2xhc3MgQU1hcE92ZXJsYXk8VCBleHRlbmRzIEFNYXAuRXZlbnRFbWl0dGVyPiB7XG4gIC8vIC0tLS0gT3B0aW9ucyAtLS0tXG4gIC8qKlxuICAgKiDpvKDmoIfmgqzlgZzml7bnmoTpvKDmoIfmoLflvI9cbiAgICovXG4gIEBJbnB1dCgpIGN1cnNvcjogc3RyaW5nO1xuICAvKipcbiAgICog6Ieq5a6a5LmJ5pWw5o2uXG4gICAqL1xuICBASW5wdXQoKSBleHREYXRhOiBhbnk7XG4gIC8qKlxuICAgKiDkuovku7bmmK/lkKbnqb/pgI/liLDlnLDlm75cbiAgICovXG4gIEBJbnB1dCgpIGJ1YmJsZTogYm9vbGVhbjtcbiAgLyoqXG4gICAqIOaYr+WQpuaUr+aMgeeCueWHu1xuICAgKi9cbiAgQElucHV0KCkgY2xpY2thYmxlOiBib29sZWFuO1xuICAvKipcbiAgICog5piv5ZCm5pSv5oyB5ouW5ou9XG4gICAqL1xuICBASW5wdXQoKSBkcmFnZ2FibGU6IGJvb2xlYW47XG5cbiAgLy8gLS0tLSBFdmVudHMgLS0tLVxuICBAT3V0cHV0KCkgbmFUb3VjaFN0YXJ0OiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgQE91dHB1dCgpIG5hVG91Y2hNb3ZlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgQE91dHB1dCgpIG5hVG91Y2hFbmQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICBAT3V0cHV0KCkgbmFDbGljazogRXZlbnRFbWl0dGVyPGFueT47XG4gIEBPdXRwdXQoKSBuYURibENsaWNrOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgQE91dHB1dCgpIG5hUmlnaHRDbGljazogRXZlbnRFbWl0dGVyPGFueT47XG4gIEBPdXRwdXQoKSBuYU1vdXNlT3ZlcjogRXZlbnRFbWl0dGVyPGFueT47XG4gIEBPdXRwdXQoKSBuYU1vdXNlVXA6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICBAT3V0cHV0KCkgbmFNb3VzZU91dDogRXZlbnRFbWl0dGVyPGFueT47XG4gIEBPdXRwdXQoKSBuYU1vdXNlRG93bjogRXZlbnRFbWl0dGVyPGFueT47XG5cbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIG9zOiBHZXR0ZXI8VD4sIHByb3RlY3RlZCBiaW5kZXI6IEV2ZW50QmluZGVyU2VydmljZSkge1xuICAgIGNvbnN0IHRhcmdldCA9IG9zLmdldCgpO1xuICAgIHRoaXMubmFUb3VjaFN0YXJ0ID0gdGhpcy5iaW5kZXIuYmluZEV2ZW50KHRhcmdldCwgJ3RvdWNoc3RhcnQnKTtcbiAgICB0aGlzLm5hVG91Y2hNb3ZlID0gdGhpcy5iaW5kZXIuYmluZEV2ZW50KHRhcmdldCwgJ3RvdWNobW92ZScpO1xuICAgIHRoaXMubmFUb3VjaEVuZCA9IHRoaXMuYmluZGVyLmJpbmRFdmVudCh0YXJnZXQsICd0b3VjaGVuZCcpO1xuICAgIHRoaXMubmFDbGljayA9IHRoaXMuYmluZGVyLmJpbmRFdmVudCh0YXJnZXQsICdjbGljaycpO1xuICAgIHRoaXMubmFEYmxDbGljayA9IHRoaXMuYmluZGVyLmJpbmRFdmVudCh0YXJnZXQsICdkYmxjbGljaycpO1xuICAgIHRoaXMubmFSaWdodENsaWNrID0gdGhpcy5iaW5kZXIuYmluZEV2ZW50KHRhcmdldCwgJ3JpZ2h0Y2xpY2snKTtcbiAgICB0aGlzLm5hTW91c2VPdmVyID0gdGhpcy5iaW5kZXIuYmluZEV2ZW50KHRhcmdldCwgJ21vdXNlb3ZlcicpO1xuICAgIHRoaXMubmFNb3VzZVVwID0gdGhpcy5iaW5kZXIuYmluZEV2ZW50KHRhcmdldCwgJ21vdXNldXAnKTtcbiAgICB0aGlzLm5hTW91c2VPdXQgPSB0aGlzLmJpbmRlci5iaW5kRXZlbnQodGFyZ2V0LCAnbW91c2VvdXQnKTtcbiAgICB0aGlzLm5hTW91c2VEb3duID0gdGhpcy5iaW5kZXIuYmluZEV2ZW50KHRhcmdldCwgJ21vdXNlZG93bicpO1xuICB9XG59XG4iXX0=