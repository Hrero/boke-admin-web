/**
 * @fileoverview added by tsickle
 * Generated from: base/amap-circle.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Input, Output, EventEmitter } from '@angular/core';
import { AMapShapeOverlay } from './amap-shape-overlay';
/** @type {?} */
export var CircleOptions = [
    'zIndex',
    'center',
    'bubble',
    'cursor',
    'radius',
    'strokeColor',
    'strokeOpacity',
    'strokeWeight',
    'fillColor',
    'fillOpacity',
    'strokeStyle',
    'extData',
    'strokeDasharray',
];
/**
 * @template T
 */
var AMapCircle = /** @class */ (function (_super) {
    tslib_1.__extends(AMapCircle, _super);
    function AMapCircle(os, binder) {
        var _this = _super.call(this, os, binder) || this;
        _this.os = os;
        _this.binder = binder;
        /**
         * 额外: 是否隐藏
         */
        _this.hidden = false;
        /**
         * 额外: 是否开启编辑器
         */
        _this.editor = false;
        // directive events:
        _this.naReady = new EventEmitter();
        return _this;
    }
    AMapCircle.propDecorators = {
        zIndex: [{ type: Input }],
        center: [{ type: Input }],
        radius: [{ type: Input }],
        strokeColor: [{ type: Input }],
        strokeOpacity: [{ type: Input }],
        strokeWeight: [{ type: Input }],
        fillColor: [{ type: Input }],
        fillOpacity: [{ type: Input }],
        strokeStyle: [{ type: Input }],
        strokeDasharray: [{ type: Input }],
        hidden: [{ type: Input }],
        editor: [{ type: Input }],
        options: [{ type: Input }],
        naReady: [{ type: Output }]
    };
    return AMapCircle;
}(AMapShapeOverlay));
export { AMapCircle };
if (false) {
    /**
     * 层叠顺序，默认zIndex:10
     * @type {?}
     */
    AMapCircle.prototype.zIndex;
    /**
     * 圆心位置
     * @type {?}
     */
    AMapCircle.prototype.center;
    /**
     * 圆半径，单位:米
     * @type {?}
     */
    AMapCircle.prototype.radius;
    /**
     * 线条颜色，使用16进制颜色代码赋值。默认值为#006600
     * @type {?}
     */
    AMapCircle.prototype.strokeColor;
    /**
     * 轮廓线透明度，取值范围[0,1]，0表示完全透明，1表示不透明。默认为0.9
     * @type {?}
     */
    AMapCircle.prototype.strokeOpacity;
    /**
     * 轮廓线宽度
     * @type {?}
     */
    AMapCircle.prototype.strokeWeight;
    /**
     * 圆形填充颜色,使用16进制颜色代码赋值。默认值为#006600
     * @type {?}
     */
    AMapCircle.prototype.fillColor;
    /**
     * 圆形填充透明度，取值范围[0,1]，0表示完全透明，1表示不透明。默认为0.9
     * @type {?}
     */
    AMapCircle.prototype.fillOpacity;
    /**
     * 轮廓线样式，实线:solid，虚线:dashed
     * @type {?}
     */
    AMapCircle.prototype.strokeStyle;
    /**
     * 勾勒形状轮廓的虚线和间隙的样式
     * @type {?}
     */
    AMapCircle.prototype.strokeDasharray;
    /**
     * 额外: 是否隐藏
     * @type {?}
     */
    AMapCircle.prototype.hidden;
    /**
     * 额外: 是否开启编辑器
     * @type {?}
     */
    AMapCircle.prototype.editor;
    /**
     * 额外: 会覆盖其他属性的配置方式
     * @type {?}
     */
    AMapCircle.prototype.options;
    /** @type {?} */
    AMapCircle.prototype.naReady;
    /**
     * @type {?}
     * @protected
     */
    AMapCircle.prototype.os;
    /**
     * @type {?}
     * @protected
     */
    AMapCircle.prototype.binder;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW1hcC1jaXJjbGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtYW1hcC8iLCJzb3VyY2VzIjpbImJhc2UvYW1hcC1jaXJjbGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTVELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDOztBQUd4RCxNQUFNLEtBQU8sYUFBYSxHQUFHO0lBQzNCLFFBQVE7SUFDUixRQUFRO0lBQ1IsUUFBUTtJQUNSLFFBQVE7SUFDUixRQUFRO0lBQ1IsYUFBYTtJQUNiLGVBQWU7SUFDZixjQUFjO0lBQ2QsV0FBVztJQUNYLGFBQWE7SUFDYixhQUFhO0lBQ2IsU0FBUztJQUNULGlCQUFpQjtDQUNsQjs7OztBQUVEO0lBQTZELHNDQUFtQjtJQTJEOUUsb0JBQXNCLEVBQWEsRUFBWSxNQUEwQjtRQUF6RSxZQUNFLGtCQUFNLEVBQUUsRUFBRSxNQUFNLENBQUMsU0FDbEI7UUFGcUIsUUFBRSxHQUFGLEVBQUUsQ0FBVztRQUFZLFlBQU0sR0FBTixNQUFNLENBQW9COzs7O1FBYmhFLFlBQU0sR0FBRyxLQUFLLENBQUM7Ozs7UUFJZixZQUFNLEdBQUcsS0FBSyxDQUFDOztRQU9kLGFBQU8sR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDOztJQUl2QyxDQUFDOzt5QkF4REEsS0FBSzt5QkFJTCxLQUFLO3lCQUlMLEtBQUs7OEJBSUwsS0FBSztnQ0FJTCxLQUFLOytCQUlMLEtBQUs7NEJBSUwsS0FBSzs4QkFJTCxLQUFLOzhCQUlMLEtBQUs7a0NBSUwsS0FBSzt5QkFLTCxLQUFLO3lCQUlMLEtBQUs7MEJBSUwsS0FBSzswQkFHTCxNQUFNOztJQUtULGlCQUFDO0NBQUEsQUE5REQsQ0FBNkQsZ0JBQWdCLEdBOEQ1RTtTQTlEWSxVQUFVOzs7Ozs7SUFLckIsNEJBQXdCOzs7OztJQUl4Qiw0QkFBb0M7Ozs7O0lBSXBDLDRCQUF3Qjs7Ozs7SUFJeEIsaUNBQTZCOzs7OztJQUk3QixtQ0FBK0I7Ozs7O0lBSS9CLGtDQUE4Qjs7Ozs7SUFJOUIsK0JBQTJCOzs7OztJQUkzQixpQ0FBNkI7Ozs7O0lBSTdCLGlDQUF1Qzs7Ozs7SUFJdkMscUNBQW1DOzs7OztJQUtuQyw0QkFBd0I7Ozs7O0lBSXhCLDRCQUF3Qjs7Ozs7SUFJeEIsNkJBQXdDOztJQUd4Qyw2QkFBdUM7Ozs7O0lBRTNCLHdCQUF1Qjs7Ozs7SUFBRSw0QkFBb0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEdldHRlciB9IGZyb20gJy4vaW50ZXJmYWNlcyc7XG5pbXBvcnQgeyBBTWFwU2hhcGVPdmVybGF5IH0gZnJvbSAnLi9hbWFwLXNoYXBlLW92ZXJsYXknO1xuaW1wb3J0IHsgRXZlbnRCaW5kZXJTZXJ2aWNlIH0gZnJvbSAnLi4vc2hhcmVkL2V2ZW50LWJpbmRlci5zZXJ2aWNlJztcblxuZXhwb3J0IGNvbnN0IENpcmNsZU9wdGlvbnMgPSBbXG4gICd6SW5kZXgnLFxuICAnY2VudGVyJyxcbiAgJ2J1YmJsZScsXG4gICdjdXJzb3InLFxuICAncmFkaXVzJyxcbiAgJ3N0cm9rZUNvbG9yJyxcbiAgJ3N0cm9rZU9wYWNpdHknLFxuICAnc3Ryb2tlV2VpZ2h0JyxcbiAgJ2ZpbGxDb2xvcicsXG4gICdmaWxsT3BhY2l0eScsXG4gICdzdHJva2VTdHlsZScsXG4gICdleHREYXRhJyxcbiAgJ3N0cm9rZURhc2hhcnJheScsXG5dO1xuXG5leHBvcnQgY2xhc3MgQU1hcENpcmNsZTxUIGV4dGVuZHMgQU1hcC5FdmVudEVtaXR0ZXI+IGV4dGVuZHMgQU1hcFNoYXBlT3ZlcmxheTxUPiB7XG4gIC8vIC0tLS0gT3B0aW9ucyAtLS0tXG4gIC8qKlxuICAgKiDlsYLlj6Dpobrluo/vvIzpu5jorqR6SW5kZXg6MTBcbiAgICovXG4gIEBJbnB1dCgpIHpJbmRleDogbnVtYmVyO1xuICAvKipcbiAgICog5ZyG5b+D5L2N572uXG4gICAqL1xuICBASW5wdXQoKSBjZW50ZXI6IEFNYXAuTG9jYXRpb25WYWx1ZTtcbiAgLyoqXG4gICAqIOWchuWNiuW+hO+8jOWNleS9jTrnsbNcbiAgICovXG4gIEBJbnB1dCgpIHJhZGl1czogbnVtYmVyO1xuICAvKipcbiAgICog57q/5p2h6aKc6Imy77yM5L2/55SoMTbov5vliLbpopzoibLku6PnoIHotYvlgLzjgILpu5jorqTlgLzkuLojMDA2NjAwXG4gICAqL1xuICBASW5wdXQoKSBzdHJva2VDb2xvcjogc3RyaW5nO1xuICAvKipcbiAgICog6L2u5buT57q/6YCP5piO5bqm77yM5Y+W5YC86IyD5Zu0WzAsMV3vvIww6KGo56S65a6M5YWo6YCP5piO77yMMeihqOekuuS4jemAj+aYjuOAgum7mOiupOS4ujAuOVxuICAgKi9cbiAgQElucHV0KCkgc3Ryb2tlT3BhY2l0eTogbnVtYmVyO1xuICAvKipcbiAgICog6L2u5buT57q/5a695bqmXG4gICAqL1xuICBASW5wdXQoKSBzdHJva2VXZWlnaHQ6IG51bWJlcjtcbiAgLyoqXG4gICAqIOWchuW9ouWhq+WFheminOiJsizkvb/nlKgxNui/m+WItuminOiJsuS7o+eggei1i+WAvOOAgum7mOiupOWAvOS4uiMwMDY2MDBcbiAgICovXG4gIEBJbnB1dCgpIGZpbGxDb2xvcjogc3RyaW5nO1xuICAvKipcbiAgICog5ZyG5b2i5aGr5YWF6YCP5piO5bqm77yM5Y+W5YC86IyD5Zu0WzAsMV3vvIww6KGo56S65a6M5YWo6YCP5piO77yMMeihqOekuuS4jemAj+aYjuOAgum7mOiupOS4ujAuOVxuICAgKi9cbiAgQElucHV0KCkgZmlsbE9wYWNpdHk6IG51bWJlcjtcbiAgLyoqXG4gICAqIOi9ruW7k+e6v+agt+W8j++8jOWunue6vzpzb2xpZO+8jOiZmue6vzpkYXNoZWRcbiAgICovXG4gIEBJbnB1dCgpIHN0cm9rZVN0eWxlOiBBTWFwLlN0cm9rZVN0eWxlO1xuICAvKipcbiAgICog5Yu+5YuS5b2i54q26L2u5buT55qE6Jma57q/5ZKM6Ze06ZqZ55qE5qC35byPXG4gICAqL1xuICBASW5wdXQoKSBzdHJva2VEYXNoYXJyYXk6IG51bWJlcltdO1xuXG4gIC8qKlxuICAgKiDpop3lpJY6IOaYr+WQpumakOiXj1xuICAgKi9cbiAgQElucHV0KCkgaGlkZGVuID0gZmFsc2U7XG4gIC8qKlxuICAgKiDpop3lpJY6IOaYr+WQpuW8gOWQr+e8lui+keWZqFxuICAgKi9cbiAgQElucHV0KCkgZWRpdG9yID0gZmFsc2U7XG4gIC8qKlxuICAgKiDpop3lpJY6IOS8muimhuebluWFtuS7luWxnuaAp+eahOmFjee9ruaWueW8j1xuICAgKi9cbiAgQElucHV0KCkgb3B0aW9uczogQU1hcC5Qb2x5bGluZS5PcHRpb25zO1xuXG4gIC8vIGRpcmVjdGl2ZSBldmVudHM6XG4gIEBPdXRwdXQoKSBuYVJlYWR5ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBvczogR2V0dGVyPFQ+LCBwcm90ZWN0ZWQgYmluZGVyOiBFdmVudEJpbmRlclNlcnZpY2UpIHtcbiAgICBzdXBlcihvcywgYmluZGVyKTtcbiAgfVxufVxuIl19