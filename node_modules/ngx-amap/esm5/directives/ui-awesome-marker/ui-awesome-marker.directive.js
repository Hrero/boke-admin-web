/**
 * @fileoverview added by tsickle
 * Generated from: directives/ui-awesome-marker/ui-awesome-marker.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Directive, Input, NgZone } from '@angular/core';
import { zip } from 'rxjs';
import { UIAwesomeMarkerService } from './ui-awesome-marker.service';
import { UISimpleMarker, SimpleMarkerOptions } from '../ui-simple-marker/ui-simple-marker';
import { getOptions, ChangeFilter } from '../../utils';
import { EventBinderService } from '../../shared/event-binder.service';
import { AMapService } from '../../shared/amap.service';
import { PixelService } from '../../shared/pixel.service';
import { IconService } from '../../shared/icon.service';
import { MarkerLabelService } from '../../shared/marker-label.service';
import { LoggerService } from '../../shared/logger/logger.service';
/** @type {?} */
var AwesomeMarkerOptions = tslib_1.__spread(SimpleMarkerOptions, ['awesomeIcon', 'getClassnamesOfAwesomeIcon']);
var UIAwesomeMarkerDirective = /** @class */ (function (_super) {
    tslib_1.__extends(UIAwesomeMarkerDirective, _super);
    function UIAwesomeMarkerDirective(os, binder, amaps, pixels, icons, mlabels, logger, ngZone) {
        var _this = _super.call(this, os, binder, amaps, pixels, icons, mlabels, logger, ngZone) || this;
        _this.os = os;
        _this.binder = binder;
        _this.amaps = amaps;
        _this.pixels = pixels;
        _this.icons = icons;
        _this.mlabels = mlabels;
        _this.logger = logger;
        _this.ngZone = ngZone;
        _this.TAG = 'ui-awesome-marker';
        return _this;
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    UIAwesomeMarkerDirective.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        _super.prototype.ngOnChanges.call(this, changes);
        /** @type {?} */
        var filter = ChangeFilter.of(changes);
        /** @type {?} */
        var marker = this.get();
        if (this.inited) {
            zip(filter.has('awesomeIcon'), marker).subscribe((/**
             * @param {?} __0
             * @return {?}
             */
            function (_a) {
                var _b = tslib_1.__read(_a, 2), v = _b[0], m = _b[1];
                return m.setAwesomeIcon(v);
            }));
        }
    };
    /**
     * @return {?}
     */
    UIAwesomeMarkerDirective.prototype.getOptions = /**
     * @return {?}
     */
    function () {
        return getOptions(this, AwesomeMarkerOptions);
    };
    UIAwesomeMarkerDirective.decorators = [
        { type: Directive, args: [{
                    selector: 'ui-awesome-marker',
                    exportAs: 'awesomeMarker',
                    providers: [UIAwesomeMarkerService],
                },] }
    ];
    /** @nocollapse */
    UIAwesomeMarkerDirective.ctorParameters = function () { return [
        { type: UIAwesomeMarkerService },
        { type: EventBinderService },
        { type: AMapService },
        { type: PixelService },
        { type: IconService },
        { type: MarkerLabelService },
        { type: LoggerService },
        { type: NgZone }
    ]; };
    UIAwesomeMarkerDirective.propDecorators = {
        awesomeIcon: [{ type: Input }],
        getClassnamesOfAwesomeIcon: [{ type: Input }]
    };
    return UIAwesomeMarkerDirective;
}(UISimpleMarker));
export { UIAwesomeMarkerDirective };
if (false) {
    /** @type {?} */
    UIAwesomeMarkerDirective.prototype.TAG;
    /**
     * icon 的名称，可用的 icons 参见 Font Awesome 官网
     * @type {?}
     */
    UIAwesomeMarkerDirective.prototype.awesomeIcon;
    /**
     * 返回字体节点上的 classNames
     * @type {?}
     */
    UIAwesomeMarkerDirective.prototype.getClassnamesOfAwesomeIcon;
    /**
     * @type {?}
     * @protected
     */
    UIAwesomeMarkerDirective.prototype.os;
    /**
     * @type {?}
     * @protected
     */
    UIAwesomeMarkerDirective.prototype.binder;
    /**
     * @type {?}
     * @protected
     */
    UIAwesomeMarkerDirective.prototype.amaps;
    /**
     * @type {?}
     * @protected
     */
    UIAwesomeMarkerDirective.prototype.pixels;
    /**
     * @type {?}
     * @protected
     */
    UIAwesomeMarkerDirective.prototype.icons;
    /**
     * @type {?}
     * @protected
     */
    UIAwesomeMarkerDirective.prototype.mlabels;
    /**
     * @type {?}
     * @protected
     */
    UIAwesomeMarkerDirective.prototype.logger;
    /**
     * @type {?}
     * @protected
     */
    UIAwesomeMarkerDirective.prototype.ngZone;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidWktYXdlc29tZS1tYXJrZXIuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWFtYXAvIiwic291cmNlcyI6WyJkaXJlY3RpdmVzL3VpLWF3ZXNvbWUtbWFya2VyL3VpLWF3ZXNvbWUtbWFya2VyLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBNEIsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25GLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDM0IsT0FBTyxFQUFFLHNCQUFzQixFQUF1QixNQUFNLDZCQUE2QixDQUFDO0FBQzFGLE9BQU8sRUFBRSxjQUFjLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUMzRixPQUFPLEVBQUUsVUFBVSxFQUFFLFlBQVksRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUN2RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUN2RSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDeEQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQzFELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUN4RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUN2RSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sb0NBQW9DLENBQUM7O0lBRTdELG9CQUFvQixvQkFBTyxtQkFBbUIsR0FBRSxhQUFhLEVBQUUsNEJBQTRCLEVBQUM7QUFFbEc7SUFLOEMsb0RBQWM7SUFZMUQsa0NBQ1ksRUFBMEIsRUFDMUIsTUFBMEIsRUFDMUIsS0FBa0IsRUFDbEIsTUFBb0IsRUFDcEIsS0FBa0IsRUFDbEIsT0FBMkIsRUFDM0IsTUFBcUIsRUFDckIsTUFBYztRQVIxQixZQVVFLGtCQUFNLEVBQUUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLENBQUMsU0FDakU7UUFWVyxRQUFFLEdBQUYsRUFBRSxDQUF3QjtRQUMxQixZQUFNLEdBQU4sTUFBTSxDQUFvQjtRQUMxQixXQUFLLEdBQUwsS0FBSyxDQUFhO1FBQ2xCLFlBQU0sR0FBTixNQUFNLENBQWM7UUFDcEIsV0FBSyxHQUFMLEtBQUssQ0FBYTtRQUNsQixhQUFPLEdBQVAsT0FBTyxDQUFvQjtRQUMzQixZQUFNLEdBQU4sTUFBTSxDQUFlO1FBQ3JCLFlBQU0sR0FBTixNQUFNLENBQVE7UUFuQjFCLFNBQUcsR0FBRyxtQkFBbUIsQ0FBQzs7SUFzQjFCLENBQUM7Ozs7O0lBRUQsOENBQVc7Ozs7SUFBWCxVQUFZLE9BQXNCO1FBQ2hDLGlCQUFNLFdBQVcsWUFBQyxPQUFPLENBQUMsQ0FBQzs7WUFDckIsTUFBTSxHQUFHLFlBQVksQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDOztZQUNqQyxNQUFNLEdBQUcsSUFBSSxDQUFDLEdBQUcsRUFBRTtRQUN6QixJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDZixHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBUyxhQUFhLENBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQyxTQUFTOzs7O1lBQUMsVUFBQyxFQUFNO29CQUFOLDBCQUFNLEVBQUwsU0FBQyxFQUFFLFNBQUM7Z0JBQU0sT0FBQSxDQUFDLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQztZQUFuQixDQUFtQixFQUFDLENBQUM7U0FDM0Y7SUFDSCxDQUFDOzs7O0lBRUQsNkNBQVU7OztJQUFWO1FBQ0UsT0FBTyxVQUFVLENBQThCLElBQUksRUFBRSxvQkFBb0IsQ0FBQyxDQUFDO0lBQzdFLENBQUM7O2dCQXpDRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLG1CQUFtQjtvQkFDN0IsUUFBUSxFQUFFLGVBQWU7b0JBQ3pCLFNBQVMsRUFBRSxDQUFDLHNCQUFzQixDQUFDO2lCQUNwQzs7OztnQkFoQlEsc0JBQXNCO2dCQUd0QixrQkFBa0I7Z0JBQ2xCLFdBQVc7Z0JBQ1gsWUFBWTtnQkFDWixXQUFXO2dCQUNYLGtCQUFrQjtnQkFDbEIsYUFBYTtnQkFWK0IsTUFBTTs7OzhCQXlCeEQsS0FBSzs2Q0FJTCxLQUFLOztJQTJCUiwrQkFBQztDQUFBLEFBMUNELENBSzhDLGNBQWMsR0FxQzNEO1NBckNZLHdCQUF3Qjs7O0lBQ25DLHVDQUEwQjs7Ozs7SUFLMUIsK0NBQTZCOzs7OztJQUk3Qiw4REFBOEQ7Ozs7O0lBRzVELHNDQUFvQzs7Ozs7SUFDcEMsMENBQW9DOzs7OztJQUNwQyx5Q0FBNEI7Ozs7O0lBQzVCLDBDQUE4Qjs7Ozs7SUFDOUIseUNBQTRCOzs7OztJQUM1QiwyQ0FBcUM7Ozs7O0lBQ3JDLDBDQUErQjs7Ozs7SUFDL0IsMENBQXdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBJbnB1dCwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzLCBOZ1pvbmUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IHppcCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgVUlBd2Vzb21lTWFya2VyU2VydmljZSwgQU1hcFVJQXdlc29tZU1hcmtlciB9IGZyb20gJy4vdWktYXdlc29tZS1tYXJrZXIuc2VydmljZSc7XG5pbXBvcnQgeyBVSVNpbXBsZU1hcmtlciwgU2ltcGxlTWFya2VyT3B0aW9ucyB9IGZyb20gJy4uL3VpLXNpbXBsZS1tYXJrZXIvdWktc2ltcGxlLW1hcmtlcic7XG5pbXBvcnQgeyBnZXRPcHRpb25zLCBDaGFuZ2VGaWx0ZXIgfSBmcm9tICcuLi8uLi91dGlscyc7XG5pbXBvcnQgeyBFdmVudEJpbmRlclNlcnZpY2UgfSBmcm9tICcuLi8uLi9zaGFyZWQvZXZlbnQtYmluZGVyLnNlcnZpY2UnO1xuaW1wb3J0IHsgQU1hcFNlcnZpY2UgfSBmcm9tICcuLi8uLi9zaGFyZWQvYW1hcC5zZXJ2aWNlJztcbmltcG9ydCB7IFBpeGVsU2VydmljZSB9IGZyb20gJy4uLy4uL3NoYXJlZC9waXhlbC5zZXJ2aWNlJztcbmltcG9ydCB7IEljb25TZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2hhcmVkL2ljb24uc2VydmljZSc7XG5pbXBvcnQgeyBNYXJrZXJMYWJlbFNlcnZpY2UgfSBmcm9tICcuLi8uLi9zaGFyZWQvbWFya2VyLWxhYmVsLnNlcnZpY2UnO1xuaW1wb3J0IHsgTG9nZ2VyU2VydmljZSB9IGZyb20gJy4uLy4uL3NoYXJlZC9sb2dnZXIvbG9nZ2VyLnNlcnZpY2UnO1xuXG5jb25zdCBBd2Vzb21lTWFya2VyT3B0aW9ucyA9IFsuLi5TaW1wbGVNYXJrZXJPcHRpb25zLCAnYXdlc29tZUljb24nLCAnZ2V0Q2xhc3NuYW1lc09mQXdlc29tZUljb24nXTtcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAndWktYXdlc29tZS1tYXJrZXInLFxuICBleHBvcnRBczogJ2F3ZXNvbWVNYXJrZXInLFxuICBwcm92aWRlcnM6IFtVSUF3ZXNvbWVNYXJrZXJTZXJ2aWNlXSxcbn0pXG5leHBvcnQgY2xhc3MgVUlBd2Vzb21lTWFya2VyRGlyZWN0aXZlIGV4dGVuZHMgVUlTaW1wbGVNYXJrZXIgaW1wbGVtZW50cyBPbkNoYW5nZXMge1xuICBUQUcgPSAndWktYXdlc29tZS1tYXJrZXInO1xuICAvLyAtLS0tIE9wdGlvbnMgLS0tLVxuICAvKipcbiAgICogaWNvbiDnmoTlkI3np7DvvIzlj6/nlKjnmoQgaWNvbnMg5Y+C6KeBIEZvbnQgQXdlc29tZSDlrpjnvZFcbiAgICovXG4gIEBJbnB1dCgpIGF3ZXNvbWVJY29uOiBzdHJpbmc7XG4gIC8qKlxuICAgKiDov5Tlm57lrZfkvZPoioLngrnkuIrnmoQgY2xhc3NOYW1lc1xuICAgKi9cbiAgQElucHV0KCkgZ2V0Q2xhc3NuYW1lc09mQXdlc29tZUljb246IChpY29uOiBzdHJpbmcpID0+IHN0cmluZztcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcm90ZWN0ZWQgb3M6IFVJQXdlc29tZU1hcmtlclNlcnZpY2UsXG4gICAgcHJvdGVjdGVkIGJpbmRlcjogRXZlbnRCaW5kZXJTZXJ2aWNlLFxuICAgIHByb3RlY3RlZCBhbWFwczogQU1hcFNlcnZpY2UsXG4gICAgcHJvdGVjdGVkIHBpeGVsczogUGl4ZWxTZXJ2aWNlLFxuICAgIHByb3RlY3RlZCBpY29uczogSWNvblNlcnZpY2UsXG4gICAgcHJvdGVjdGVkIG1sYWJlbHM6IE1hcmtlckxhYmVsU2VydmljZSxcbiAgICBwcm90ZWN0ZWQgbG9nZ2VyOiBMb2dnZXJTZXJ2aWNlLFxuICAgIHByb3RlY3RlZCBuZ1pvbmU6IE5nWm9uZSxcbiAgKSB7XG4gICAgc3VwZXIob3MsIGJpbmRlciwgYW1hcHMsIHBpeGVscywgaWNvbnMsIG1sYWJlbHMsIGxvZ2dlciwgbmdab25lKTtcbiAgfVxuXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcbiAgICBzdXBlci5uZ09uQ2hhbmdlcyhjaGFuZ2VzKTtcbiAgICBjb25zdCBmaWx0ZXIgPSBDaGFuZ2VGaWx0ZXIub2YoY2hhbmdlcyk7XG4gICAgY29uc3QgbWFya2VyID0gdGhpcy5nZXQoKTtcbiAgICBpZiAodGhpcy5pbml0ZWQpIHtcbiAgICAgIHppcChmaWx0ZXIuaGFzPHN0cmluZz4oJ2F3ZXNvbWVJY29uJyksIG1hcmtlcikuc3Vic2NyaWJlKChbdiwgbV0pID0+IG0uc2V0QXdlc29tZUljb24odikpO1xuICAgIH1cbiAgfVxuXG4gIGdldE9wdGlvbnMoKSB7XG4gICAgcmV0dXJuIGdldE9wdGlvbnM8QU1hcFVJQXdlc29tZU1hcmtlci5PcHRpb25zPih0aGlzLCBBd2Vzb21lTWFya2VyT3B0aW9ucyk7XG4gIH1cbn1cbiJdfQ==