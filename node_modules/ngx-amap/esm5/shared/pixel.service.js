/**
 * @fileoverview added by tsickle
 * Generated from: shared/pixel.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
var PixelService = /** @class */ (function () {
    function PixelService() {
    }
    /**
     * @param {?} options
     * @return {?}
     */
    PixelService.prototype.create = /**
     * @param {?} options
     * @return {?}
     */
    function (options) {
        if (!options) {
            return null;
        }
        if (options instanceof AMap.Pixel) {
            return options;
        }
        if (Array.isArray(options)) {
            return new AMap.Pixel(options[0], options[1]);
        }
        return new AMap.Pixel(options.x || 0, options.y || 0, options.round);
    };
    PixelService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    /** @nocollapse */
    PixelService.ctorParameters = function () { return []; };
    /** @nocollapse */ PixelService.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function PixelService_Factory() { return new PixelService(); }, token: PixelService, providedIn: "root" });
    return PixelService;
}());
export { PixelService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGl4ZWwuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1hbWFwLyIsInNvdXJjZXMiOlsic2hhcmVkL3BpeGVsLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDOztBQUczQztJQUlFO0lBQWUsQ0FBQzs7Ozs7SUFFaEIsNkJBQU07Ozs7SUFBTixVQUFPLE9BQTRCO1FBQ2pDLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDWixPQUFPLElBQUksQ0FBQztTQUNiO1FBQ0QsSUFBSSxPQUFPLFlBQVksSUFBSSxDQUFDLEtBQUssRUFBRTtZQUNqQyxPQUFPLE9BQU8sQ0FBQztTQUNoQjtRQUNELElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBRTtZQUMxQixPQUFPLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDL0M7UUFDRCxPQUFPLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxPQUFPLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDdkUsQ0FBQzs7Z0JBakJGLFVBQVUsU0FBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkI7Ozs7O3VCQUxEO0NBcUJDLEFBbEJELElBa0JDO1NBZlksWUFBWSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElQaXhlbCB9IGZyb20gJy4uL2ludGVyZmFjZXMnO1xuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290Jyxcbn0pXG5leHBvcnQgY2xhc3MgUGl4ZWxTZXJ2aWNlIHtcbiAgY29uc3RydWN0b3IoKSB7fVxuXG4gIGNyZWF0ZShvcHRpb25zOiBJUGl4ZWwgfCBBTWFwLlBpeGVsKTogQU1hcC5QaXhlbCB8IG51bGwge1xuICAgIGlmICghb3B0aW9ucykge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIGlmIChvcHRpb25zIGluc3RhbmNlb2YgQU1hcC5QaXhlbCkge1xuICAgICAgcmV0dXJuIG9wdGlvbnM7XG4gICAgfVxuICAgIGlmIChBcnJheS5pc0FycmF5KG9wdGlvbnMpKSB7XG4gICAgICByZXR1cm4gbmV3IEFNYXAuUGl4ZWwob3B0aW9uc1swXSwgb3B0aW9uc1sxXSk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgQU1hcC5QaXhlbChvcHRpb25zLnggfHwgMCwgb3B0aW9ucy55IHx8IDAsIG9wdGlvbnMucm91bmQpO1xuICB9XG59XG4iXX0=