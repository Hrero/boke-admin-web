/**
 * @fileoverview added by tsickle
 * Generated from: shared/size.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
var SizeService = /** @class */ (function () {
    function SizeService() {
    }
    /**
     * @param {?} options
     * @return {?}
     */
    SizeService.prototype.create = /**
     * @param {?} options
     * @return {?}
     */
    function (options) {
        if (!options) {
            return null;
        }
        if (options instanceof AMap.Size || Array.isArray(options)) {
            return options;
        }
        if (options.width !== undefined && options.height !== undefined) {
            return new AMap.Size(options.width, options.height);
        }
        if (options.w !== undefined && options.h !== undefined) {
            return new AMap.Size(options.w, options.h);
        }
        return null;
    };
    SizeService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    /** @nocollapse */
    SizeService.ctorParameters = function () { return []; };
    /** @nocollapse */ SizeService.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function SizeService_Factory() { return new SizeService(); }, token: SizeService, providedIn: "root" });
    return SizeService;
}());
export { SizeService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2l6ZS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWFtYXAvIiwic291cmNlcyI6WyJzaGFyZWQvc2l6ZS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFHM0M7SUFJRTtJQUFlLENBQUM7Ozs7O0lBRWhCLDRCQUFNOzs7O0lBQU4sVUFBTyxPQUErQjtRQUNwQyxJQUFJLENBQUMsT0FBTyxFQUFFO1lBQ1osT0FBTyxJQUFJLENBQUM7U0FDYjtRQUNELElBQUksT0FBTyxZQUFZLElBQUksQ0FBQyxJQUFJLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBRTtZQUMxRCxPQUFPLE9BQU8sQ0FBQztTQUNoQjtRQUNELElBQUksT0FBTyxDQUFDLEtBQUssS0FBSyxTQUFTLElBQUksT0FBTyxDQUFDLE1BQU0sS0FBSyxTQUFTLEVBQUU7WUFDL0QsT0FBTyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDckQ7UUFDRCxJQUFJLE9BQU8sQ0FBQyxDQUFDLEtBQUssU0FBUyxJQUFJLE9BQU8sQ0FBQyxDQUFDLEtBQUssU0FBUyxFQUFFO1lBQ3RELE9BQU8sSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQzVDO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDOztnQkFwQkYsVUFBVSxTQUFDO29CQUNWLFVBQVUsRUFBRSxNQUFNO2lCQUNuQjs7Ozs7c0JBTEQ7Q0F3QkMsQUFyQkQsSUFxQkM7U0FsQlksV0FBVyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElTaXplIH0gZnJvbSAnLi4vaW50ZXJmYWNlcyc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnLFxufSlcbmV4cG9ydCBjbGFzcyBTaXplU2VydmljZSB7XG4gIGNvbnN0cnVjdG9yKCkge31cblxuICBjcmVhdGUob3B0aW9uczogSVNpemUgfCBBTWFwLlNpemVWYWx1ZSk6IEFNYXAuU2l6ZVZhbHVlIHwgbnVsbCB7XG4gICAgaWYgKCFvcHRpb25zKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgaWYgKG9wdGlvbnMgaW5zdGFuY2VvZiBBTWFwLlNpemUgfHwgQXJyYXkuaXNBcnJheShvcHRpb25zKSkge1xuICAgICAgcmV0dXJuIG9wdGlvbnM7XG4gICAgfVxuICAgIGlmIChvcHRpb25zLndpZHRoICE9PSB1bmRlZmluZWQgJiYgb3B0aW9ucy5oZWlnaHQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuIG5ldyBBTWFwLlNpemUob3B0aW9ucy53aWR0aCwgb3B0aW9ucy5oZWlnaHQpO1xuICAgIH1cbiAgICBpZiAob3B0aW9ucy53ICE9PSB1bmRlZmluZWQgJiYgb3B0aW9ucy5oICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiBuZXcgQU1hcC5TaXplKG9wdGlvbnMudywgb3B0aW9ucy5oKTtcbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbn1cbiJdfQ==