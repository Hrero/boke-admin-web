/// <reference types="@types/amap-js-api" />
import { Getter } from './interfaces';
import { AMapShapeOverlay } from './amap-shape-overlay';
import { EventBinderService } from '../shared/event-binder.service';
import * as ɵngcc0 from '@angular/core';
export declare const PathOverlayOptions: string[];
export declare class AMapPathOverlay<T extends AMap.EventEmitter> extends AMapShapeOverlay<T> {
    protected os: Getter<T>;
    protected binder: EventBinderService;
    /**
     * 是否可见
     */
    visible: boolean;
    /**
     * 覆盖物层级
     */
    zIndex: number;
    /**
     * 描边线条颜色
     */
    strokeColor: string;
    /**
     * 描边线条透明度
     */
    strokeOpacity: number;
    /**
     * 描边宽度
     */
    strokeWeight: number;
    /**
     * 描边样式
     */
    strokeStyle: AMap.StrokeStyle;
    /**
     * 虚线间隔
     */
    strokeDasharray: number[];
    /**
     * 折线拐点的绘制样式
     */
    lineJoin: AMap.StrokeLineJoin;
    /**
     * 折线两端线帽的绘制样式
     */
    lineCap: AMap.StrokeLineCap;
    constructor(os: Getter<T>, binder: EventBinderService);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AMapPathOverlay<any>, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<AMapPathOverlay<any>, never, never, { "visible": "visible"; "zIndex": "zIndex"; "strokeColor": "strokeColor"; "strokeOpacity": "strokeOpacity"; "strokeWeight": "strokeWeight"; "strokeStyle": "strokeStyle"; "strokeDasharray": "strokeDasharray"; "lineJoin": "lineJoin"; "lineCap": "lineCap"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW1hcC1wYXRoLW92ZXJsYXkuZC50cyIsInNvdXJjZXMiOlsiYW1hcC1wYXRoLW92ZXJsYXkuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8vLyA8cmVmZXJlbmNlIHR5cGVzPVwiQHR5cGVzL2FtYXAtanMtYXBpXCIgLz5cbmltcG9ydCB7IEdldHRlciB9IGZyb20gJy4vaW50ZXJmYWNlcyc7XG5pbXBvcnQgeyBBTWFwU2hhcGVPdmVybGF5IH0gZnJvbSAnLi9hbWFwLXNoYXBlLW92ZXJsYXknO1xuaW1wb3J0IHsgRXZlbnRCaW5kZXJTZXJ2aWNlIH0gZnJvbSAnLi4vc2hhcmVkL2V2ZW50LWJpbmRlci5zZXJ2aWNlJztcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IFBhdGhPdmVybGF5T3B0aW9uczogc3RyaW5nW107XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBBTWFwUGF0aE92ZXJsYXk8VCBleHRlbmRzIEFNYXAuRXZlbnRFbWl0dGVyPiBleHRlbmRzIEFNYXBTaGFwZU92ZXJsYXk8VD4ge1xuICAgIHByb3RlY3RlZCBvczogR2V0dGVyPFQ+O1xuICAgIHByb3RlY3RlZCBiaW5kZXI6IEV2ZW50QmluZGVyU2VydmljZTtcbiAgICAvKipcbiAgICAgKiDmmK/lkKblj6/op4FcbiAgICAgKi9cbiAgICB2aXNpYmxlOiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIOimhueblueJqeWxgue6p1xuICAgICAqL1xuICAgIHpJbmRleDogbnVtYmVyO1xuICAgIC8qKlxuICAgICAqIOaPj+i+uee6v+adoeminOiJslxuICAgICAqL1xuICAgIHN0cm9rZUNvbG9yOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICog5o+P6L6557q/5p2h6YCP5piO5bqmXG4gICAgICovXG4gICAgc3Ryb2tlT3BhY2l0eTogbnVtYmVyO1xuICAgIC8qKlxuICAgICAqIOaPj+i+ueWuveW6plxuICAgICAqL1xuICAgIHN0cm9rZVdlaWdodDogbnVtYmVyO1xuICAgIC8qKlxuICAgICAqIOaPj+i+ueagt+W8j1xuICAgICAqL1xuICAgIHN0cm9rZVN0eWxlOiBBTWFwLlN0cm9rZVN0eWxlO1xuICAgIC8qKlxuICAgICAqIOiZmue6v+mXtOmalFxuICAgICAqL1xuICAgIHN0cm9rZURhc2hhcnJheTogbnVtYmVyW107XG4gICAgLyoqXG4gICAgICog5oqY57q/5ouQ54K555qE57uY5Yi25qC35byPXG4gICAgICovXG4gICAgbGluZUpvaW46IEFNYXAuU3Ryb2tlTGluZUpvaW47XG4gICAgLyoqXG4gICAgICog5oqY57q/5Lik56uv57q/5bi955qE57uY5Yi25qC35byPXG4gICAgICovXG4gICAgbGluZUNhcDogQU1hcC5TdHJva2VMaW5lQ2FwO1xuICAgIGNvbnN0cnVjdG9yKG9zOiBHZXR0ZXI8VD4sIGJpbmRlcjogRXZlbnRCaW5kZXJTZXJ2aWNlKTtcbn1cbiJdfQ==