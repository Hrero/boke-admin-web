/// <reference types="@types/amap-js-api" />
import { EventEmitter } from '@angular/core';
import { WithEditor } from './interfaces';
import { AMapPathOverlay } from './amap-path-overlay';
import { EventBinderService } from '../shared/event-binder.service';
import * as ɵngcc0 from '@angular/core';
export declare const PolygonOptions: string[];
export declare class AMapPolygon<T extends AMap.EventEmitter, E extends AMap.EventEmitter> extends AMapPathOverlay<T> {
    protected os: WithEditor<T, E>;
    protected binder: EventBinderService;
    /**
     * 多边形轮廓线的节点坐标数组
     */
    path?: AMap.LocationValue[] | AMap.LocationValue[][];
    /**
     * 多边形填充颜色
     */
    fillColor?: string;
    /**
     * 边形填充透明度
     */
    fillOpacity?: number;
    /**
     * 额外: 是否隐藏
     */
    hidden: boolean;
    /**
     * 额外: 是否开启编辑器
     */
    editor: boolean;
    /**
     * 额外: 会覆盖其他属性的配置方式
     */
    options: AMap.Polygon.Options;
    naReady: EventEmitter<any>;
    naEditorAddNode: EventEmitter<any>;
    naEditorRemoveNode: EventEmitter<any>;
    naEditorAdjust: EventEmitter<any>;
    naEditorEnd: EventEmitter<any>;
    constructor(os: WithEditor<T, E>, binder: EventBinderService);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AMapPolygon<any, any>, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<AMapPolygon<any, any>, never, never, { "hidden": "hidden"; "editor": "editor"; "path": "path"; "fillColor": "fillColor"; "fillOpacity": "fillOpacity"; "options": "options"; }, { "naReady": "naReady"; "naEditorAddNode": "naEditorAddNode"; "naEditorRemoveNode": "naEditorRemoveNode"; "naEditorAdjust": "naEditorAdjust"; "naEditorEnd": "naEditorEnd"; }, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW1hcC1wb2x5Z29uLmQudHMiLCJzb3VyY2VzIjpbImFtYXAtcG9seWdvbi5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLy8vIDxyZWZlcmVuY2UgdHlwZXM9XCJAdHlwZXMvYW1hcC1qcy1hcGlcIiAvPlxuaW1wb3J0IHsgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBXaXRoRWRpdG9yIH0gZnJvbSAnLi9pbnRlcmZhY2VzJztcbmltcG9ydCB7IEFNYXBQYXRoT3ZlcmxheSB9IGZyb20gJy4vYW1hcC1wYXRoLW92ZXJsYXknO1xuaW1wb3J0IHsgRXZlbnRCaW5kZXJTZXJ2aWNlIH0gZnJvbSAnLi4vc2hhcmVkL2V2ZW50LWJpbmRlci5zZXJ2aWNlJztcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IFBvbHlnb25PcHRpb25zOiBzdHJpbmdbXTtcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEFNYXBQb2x5Z29uPFQgZXh0ZW5kcyBBTWFwLkV2ZW50RW1pdHRlciwgRSBleHRlbmRzIEFNYXAuRXZlbnRFbWl0dGVyPiBleHRlbmRzIEFNYXBQYXRoT3ZlcmxheTxUPiB7XG4gICAgcHJvdGVjdGVkIG9zOiBXaXRoRWRpdG9yPFQsIEU+O1xuICAgIHByb3RlY3RlZCBiaW5kZXI6IEV2ZW50QmluZGVyU2VydmljZTtcbiAgICAvKipcbiAgICAgKiDlpJrovrnlvaLova7lu5Pnur/nmoToioLngrnlnZDmoIfmlbDnu4RcbiAgICAgKi9cbiAgICBwYXRoPzogQU1hcC5Mb2NhdGlvblZhbHVlW10gfCBBTWFwLkxvY2F0aW9uVmFsdWVbXVtdO1xuICAgIC8qKlxuICAgICAqIOWkmui+ueW9ouWhq+WFheminOiJslxuICAgICAqL1xuICAgIGZpbGxDb2xvcj86IHN0cmluZztcbiAgICAvKipcbiAgICAgKiDovrnlvaLloavlhYXpgI/mmI7luqZcbiAgICAgKi9cbiAgICBmaWxsT3BhY2l0eT86IG51bWJlcjtcbiAgICAvKipcbiAgICAgKiDpop3lpJY6IOaYr+WQpumakOiXj1xuICAgICAqL1xuICAgIGhpZGRlbjogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiDpop3lpJY6IOaYr+WQpuW8gOWQr+e8lui+keWZqFxuICAgICAqL1xuICAgIGVkaXRvcjogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiDpop3lpJY6IOS8muimhuebluWFtuS7luWxnuaAp+eahOmFjee9ruaWueW8j1xuICAgICAqL1xuICAgIG9wdGlvbnM6IEFNYXAuUG9seWdvbi5PcHRpb25zO1xuICAgIG5hUmVhZHk6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIG5hRWRpdG9yQWRkTm9kZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgbmFFZGl0b3JSZW1vdmVOb2RlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBuYUVkaXRvckFkanVzdDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgbmFFZGl0b3JFbmQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGNvbnN0cnVjdG9yKG9zOiBXaXRoRWRpdG9yPFQsIEU+LCBiaW5kZXI6IEV2ZW50QmluZGVyU2VydmljZSk7XG59XG4iXX0=