{"version":3,"file":"ngx-barcode6.js","sources":["../../../projects/ngx-barcode6/src/lib/ngx-barcode6.component.ts","../../../projects/ngx-barcode6/src/lib/ngx-barcode6.module.ts","../../../projects/ngx-barcode6/src/public-api.ts","../../../projects/ngx-barcode6/src/ngx-barcode6.ts"],"names":[],"mappings":"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","sourcesContent":["  // tslint:disable:no-input-rename component-selector\n  import { Component, Input, OnChanges, ViewChild, Renderer2, ElementRef } from '@angular/core';\n\n  declare var require: any;\n\n  const jsbarcode = require('jsbarcode');\n\n  @Component({\n    selector: 'ngx-barcode6',\n    template: `<div #bcElement [class]=\"cssClass\"></div>`,\n    styles: []\n  })\n  export class NgxBarcode6Component implements OnChanges {\n\n    @Input('bc-element-type') elementType: 'svg' | 'img' | 'canvas' = 'svg';\n    @Input('bc-class') cssClass = 'barcode'; // this should be done more elegantly\n\n    @Input('bc-format') format: '' | 'CODE128' | 'CODE128A' | 'CODE128B' | 'CODE128C' | 'EAN13' | 'UPC' | 'EAN8' | 'EAN5' |\n    'EAN2' | 'CODE39' | 'ITF14' | 'MSI' | 'MSI10' | 'MSI11' | 'MSI1010' | 'MSI1110' | 'pharmacode' | 'codabar' = 'CODE128';\n    @Input('bc-line-color') lineColor = '#000000';\n    @Input('bc-width') width = 2;\n    @Input('bc-height') height = 100;\n    @Input('bc-display-value') displayValue = false;\n    @Input('bc-font-options') fontOptions = '';\n    @Input('bc-font') font = 'monospace';\n    @Input('bc-text-align') textAlign = 'center';\n    @Input('bc-text-position') textPosition = 'bottom';\n    @Input('bc-text-margin') textMargin = 2;\n    @Input('bc-font-size') fontSize = 20;\n    @Input('bc-background') background = '#ffffff';\n    @Input('bc-margin') margin = 10;\n    @Input('bc-margin-top') marginTop = 10;\n    @Input('bc-margin-bottom') marginBottom = 10;\n    @Input('bc-margin-left') marginLeft = 10;\n    @Input('bc-margin-right') marginRight = 10;\n    @Input('bc-value') value = '';\n    @ViewChild('bcElement', { static: true }) bcElement: ElementRef;\n    @Input('bc-valid') valid: () => boolean = () => true;\n\n\n    get options() {\n      return {\n        format: this.format,\n        lineColor: this.lineColor,\n        width: this.width,\n        height: this.height,\n        displayValue: this.displayValue,\n        fontOptions: this.fontOptions,\n        font: this.font,\n        textAlign: this.textAlign,\n        textPosition: this.textPosition,\n        textMargin: this.textMargin,\n        fontSize: this.fontSize,\n        background: this.background,\n        margin: this.margin,\n        marginTop: this.marginTop,\n        marginBottom: this.marginBottom,\n        marginLeft: this.marginLeft,\n        marginRight: this.marginRight,\n        valid: this.valid,\n      };\n    }\n    constructor(private renderer: Renderer2) { }\n\n    ngOnChanges() {\n      this.createBarcode();\n    }\n\n    createBarcode() {\n      if (!this.value) { return; }\n      let element: Element;\n      switch (this.elementType) {\n        case 'img':\n          element = this.renderer.createElement('img');\n          break;\n        case 'canvas':\n          element = this.renderer.createElement('canvas');\n          break;\n        case 'svg':\n        default:\n          element = this.renderer.createElement('svg', 'svg');\n      }\n\n      jsbarcode(element, this.value, this.options);\n\n      for (const node of this.bcElement.nativeElement.childNodes) {\n        this.renderer.removeChild(this.bcElement.nativeElement, node);\n      }\n      this.renderer.appendChild(this.bcElement.nativeElement, element);\n\n    }\n\n  }\n","import { NgModule } from '@angular/core';\nimport { NgxBarcode6Component } from './ngx-barcode6.component';\n\n\n\n@NgModule({\n  declarations: [NgxBarcode6Component],\n  imports: [\n  ],\n  exports: [NgxBarcode6Component]\n})\nexport class NgxBarcode6Module { }\n","/*\n * Public API Surface of ngx-barcode6\n */\n\nexport * from './lib/ngx-barcode6.component';\nexport * from './lib/ngx-barcode6.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}